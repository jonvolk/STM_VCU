ARM GAS  /tmp/cc9ZRKv2.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"gauges.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.gaugeInit,"ax",%progbits
  16              		.align	1
  17              		.global	gaugeInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	gaugeInit:
  24              	.LFB66:
  25              		.file 1 "Core/Src/gauges.c"
   1:Core/Src/gauges.c **** #include "gauges.h"
   2:Core/Src/gauges.c **** 
   3:Core/Src/gauges.c **** void gaugeInit(void)
   4:Core/Src/gauges.c **** {
  26              		.loc 1 4 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32              	.LBB2:
   5:Core/Src/gauges.c **** 
   6:Core/Src/gauges.c ****     for (size_t i = 0; i < 100; i++)
  33              		.loc 1 6 0
  34 0000 0023     		movs	r3, #0
  35 0002 07E0     		b	.L2
  36              	.LVL1:
  37              	.L3:
   7:Core/Src/gauges.c ****     {
   8:Core/Src/gauges.c ****         tempPWM[i] = 0;
  38              		.loc 1 8 0 discriminator 3
  39 0004 0022     		movs	r2, #0
  40 0006 0549     		ldr	r1, .L4
  41 0008 41F82320 		str	r2, [r1, r3, lsl #2]
   9:Core/Src/gauges.c ****         socPWM[i] = 0;
  42              		.loc 1 9 0 discriminator 3
  43 000c 0449     		ldr	r1, .L4+4
  44 000e 41F82320 		str	r2, [r1, r3, lsl #2]
   6:Core/Src/gauges.c ****     {
  45              		.loc 1 6 0 discriminator 3
  46 0012 0133     		adds	r3, r3, #1
  47              	.LVL2:
  48              	.L2:
ARM GAS  /tmp/cc9ZRKv2.s 			page 2


   6:Core/Src/gauges.c ****     {
  49              		.loc 1 6 0 is_stmt 0 discriminator 1
  50 0014 632B     		cmp	r3, #99
  51 0016 F5D9     		bls	.L3
  52              	.LBE2:
  10:Core/Src/gauges.c ****     }
  11:Core/Src/gauges.c **** }
  53              		.loc 1 11 0 is_stmt 1
  54 0018 7047     		bx	lr
  55              	.L5:
  56 001a 00BF     		.align	2
  57              	.L4:
  58 001c 00000000 		.word	tempPWM
  59 0020 00000000 		.word	socPWM
  60              		.cfi_endproc
  61              	.LFE66:
  63              		.section	.text.updateTach,"ax",%progbits
  64              		.align	1
  65              		.global	updateTach
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu softvfp
  71              	updateTach:
  72              	.LFB67:
  12:Core/Src/gauges.c **** 
  13:Core/Src/gauges.c **** void updateTach(volatile uint16_t amps)
  14:Core/Src/gauges.c **** {
  73              		.loc 1 14 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 8
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              	.LVL3:
  79 0000 82B0     		sub	sp, sp, #8
  80              	.LCFI0:
  81              		.cfi_def_cfa_offset 8
  82 0002 ADF80600 		strh	r0, [sp, #6]	@ movhi
  15:Core/Src/gauges.c ****     int freq = (amps * 100) / 315;
  83              		.loc 1 15 0
  84 0006 BDF80630 		ldrh	r3, [sp, #6]
  85 000a 9AB2     		uxth	r2, r3
  86 000c 6423     		movs	r3, #100
  87 000e 03FB02F3 		mul	r3, r3, r2
  88 0012 0A4A     		ldr	r2, .L8
  89 0014 82FB0312 		smull	r1, r2, r2, r3
  90 0018 1A44     		add	r2, r2, r3
  91 001a DB17     		asrs	r3, r3, #31
  92 001c C3EB2223 		rsb	r3, r3, r2, asr #8
  93              	.LVL4:
  16:Core/Src/gauges.c ****     TIM1->ARR = (CPU / freq / TIM1->PSC)-1;
  94              		.loc 1 16 0
  95 0020 074A     		ldr	r2, .L8+4
  96 0022 92FBF3F3 		sdiv	r3, r2, r3
  97              	.LVL5:
  98 0026 074A     		ldr	r2, .L8+8
  99 0028 916A     		ldr	r1, [r2, #40]
ARM GAS  /tmp/cc9ZRKv2.s 			page 3


 100 002a B3FBF1F3 		udiv	r3, r3, r1
 101 002e 013B     		subs	r3, r3, #1
 102 0030 D362     		str	r3, [r2, #44]
  17:Core/Src/gauges.c ****     TIM1->CCR1 = (TIM1->ARR) / 2; //50% duty variable frequency
 103              		.loc 1 17 0
 104 0032 D36A     		ldr	r3, [r2, #44]
 105 0034 5B08     		lsrs	r3, r3, #1
 106 0036 5363     		str	r3, [r2, #52]
  18:Core/Src/gauges.c **** }
 107              		.loc 1 18 0
 108 0038 02B0     		add	sp, sp, #8
 109              	.LCFI1:
 110              		.cfi_def_cfa_offset 0
 111              		@ sp needed
 112 003a 7047     		bx	lr
 113              	.L9:
 114              		.align	2
 115              	.L8:
 116 003c D1000DD0 		.word	-804454191
 117 0040 00A24A04 		.word	72000000
 118 0044 002C0140 		.word	1073818624
 119              		.cfi_endproc
 120              	.LFE67:
 122              		.section	.text.updateSpeed,"ax",%progbits
 123              		.align	1
 124              		.global	updateSpeed
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu softvfp
 130              	updateSpeed:
 131              	.LFB68:
  19:Core/Src/gauges.c **** 
  20:Core/Src/gauges.c **** void updateSpeed(volatile uint16_t motorRPM)
  21:Core/Src/gauges.c **** {
 132              		.loc 1 21 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 8
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 137              	.LVL6:
 138 0000 82B0     		sub	sp, sp, #8
 139              	.LCFI2:
 140              		.cfi_def_cfa_offset 8
 141 0002 ADF80600 		strh	r0, [sp, #6]	@ movhi
  22:Core/Src/gauges.c ****     int freq = motorRPM / 71;
 142              		.loc 1 22 0
 143 0006 BDF80630 		ldrh	r3, [sp, #6]
 144 000a 9BB2     		uxth	r3, r3
 145 000c 084A     		ldr	r2, .L12
 146 000e A2FB0323 		umull	r2, r3, r2, r3
 147 0012 9A09     		lsrs	r2, r3, #6
 148              	.LVL7:
  23:Core/Src/gauges.c ****     TIM3->ARR = ((CPU / freq) / TIM3->PSC)-1;
 149              		.loc 1 23 0
 150 0014 074B     		ldr	r3, .L12+4
 151 0016 93FBF2F3 		sdiv	r3, r3, r2
ARM GAS  /tmp/cc9ZRKv2.s 			page 4


 152 001a 074A     		ldr	r2, .L12+8
 153              	.LVL8:
 154 001c 916A     		ldr	r1, [r2, #40]
 155 001e B3FBF1F3 		udiv	r3, r3, r1
 156 0022 013B     		subs	r3, r3, #1
 157 0024 D362     		str	r3, [r2, #44]
  24:Core/Src/gauges.c ****     TIM3->CCR3 = (TIM3->ARR) / 2; //50% duty variable frequency
 158              		.loc 1 24 0
 159 0026 D36A     		ldr	r3, [r2, #44]
 160 0028 5B08     		lsrs	r3, r3, #1
 161 002a D363     		str	r3, [r2, #60]
  25:Core/Src/gauges.c **** }
 162              		.loc 1 25 0
 163 002c 02B0     		add	sp, sp, #8
 164              	.LCFI3:
 165              		.cfi_def_cfa_offset 0
 166              		@ sp needed
 167 002e 7047     		bx	lr
 168              	.L13:
 169              		.align	2
 170              	.L12:
 171 0030 49B4C2E6 		.word	-423447479
 172 0034 00A24A04 		.word	72000000
 173 0038 00040040 		.word	1073742848
 174              		.cfi_endproc
 175              	.LFE68:
 177              		.section	.text.updateTemp,"ax",%progbits
 178              		.align	1
 179              		.global	updateTemp
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu softvfp
 185              	updateTemp:
 186              	.LFB69:
  26:Core/Src/gauges.c **** 
  27:Core/Src/gauges.c **** void updateTemp(volatile uint16_t temp)
  28:Core/Src/gauges.c **** {
 187              		.loc 1 28 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 8
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 192              	.LVL9:
 193 0000 82B0     		sub	sp, sp, #8
 194              	.LCFI4:
 195              		.cfi_def_cfa_offset 8
 196 0002 ADF80600 		strh	r0, [sp, #6]	@ movhi
  29:Core/Src/gauges.c **** 
  30:Core/Src/gauges.c ****     uint16_t highPulse = MAP(temp, 0, 90, 19, 95); //gauge range calibration
 197              		.loc 1 30 0
 198 0006 BDF80630 		ldrh	r3, [sp, #6]
 199 000a 9AB2     		uxth	r2, r3
 200 000c 4C23     		movs	r3, #76
 201 000e 03FB02F3 		mul	r3, r3, r2
 202 0012 0F4A     		ldr	r2, .L20
 203 0014 82FB0312 		smull	r1, r2, r2, r3
ARM GAS  /tmp/cc9ZRKv2.s 			page 5


 204 0018 1A44     		add	r2, r2, r3
 205 001a D917     		asrs	r1, r3, #31
 206 001c C1EBA211 		rsb	r1, r1, r2, asr #6
 207 0020 89B2     		uxth	r1, r1
 208 0022 1331     		adds	r1, r1, #19
 209 0024 89B2     		uxth	r1, r1
 210              	.LVL10:
 211              	.LBB3:
  31:Core/Src/gauges.c **** 
  32:Core/Src/gauges.c ****     for (size_t i = 0; i < highPulse; i++)
 212              		.loc 1 32 0
 213 0026 0022     		movs	r2, #0
 214 0028 04E0     		b	.L15
 215              	.LVL11:
 216              	.L16:
  33:Core/Src/gauges.c ****     {
  34:Core/Src/gauges.c ****         tempPWM[i] = (uint32_t)TEMP_Pin;
 217              		.loc 1 34 0 discriminator 3
 218 002a 8020     		movs	r0, #128
 219 002c 094B     		ldr	r3, .L20+4
 220 002e 43F82200 		str	r0, [r3, r2, lsl #2]
  32:Core/Src/gauges.c ****     {
 221              		.loc 1 32 0 discriminator 3
 222 0032 0132     		adds	r2, r2, #1
 223              	.LVL12:
 224              	.L15:
  32:Core/Src/gauges.c ****     {
 225              		.loc 1 32 0 is_stmt 0 discriminator 1
 226 0034 0B46     		mov	r3, r1
 227 0036 8A42     		cmp	r2, r1
 228 0038 F7D3     		bcc	.L16
 229 003a 05E0     		b	.L17
 230              	.LVL13:
 231              	.L18:
 232              	.LBE3:
 233              	.LBB4:
  35:Core/Src/gauges.c ****     }
  36:Core/Src/gauges.c **** 
  37:Core/Src/gauges.c ****     for (size_t i = highPulse; i < 100; i++)
  38:Core/Src/gauges.c ****     {
  39:Core/Src/gauges.c ****         tempPWM[i] = (uint32_t)TEMP_Pin << 16U;
 234              		.loc 1 39 0 is_stmt 1 discriminator 3
 235 003c 4FF40001 		mov	r1, #8388608
 236 0040 044A     		ldr	r2, .L20+4
 237 0042 42F82310 		str	r1, [r2, r3, lsl #2]
  37:Core/Src/gauges.c ****     {
 238              		.loc 1 37 0 discriminator 3
 239 0046 0133     		adds	r3, r3, #1
 240              	.LVL14:
 241              	.L17:
  37:Core/Src/gauges.c ****     {
 242              		.loc 1 37 0 is_stmt 0 discriminator 1
 243 0048 632B     		cmp	r3, #99
 244 004a F7D9     		bls	.L18
 245              	.LBE4:
  40:Core/Src/gauges.c ****     }
  41:Core/Src/gauges.c **** }
ARM GAS  /tmp/cc9ZRKv2.s 			page 6


 246              		.loc 1 41 0 is_stmt 1
 247 004c 02B0     		add	sp, sp, #8
 248              	.LCFI5:
 249              		.cfi_def_cfa_offset 0
 250              	.LVL15:
 251              		@ sp needed
 252 004e 7047     		bx	lr
 253              	.L21:
 254              		.align	2
 255              	.L20:
 256 0050 B7600BB6 		.word	-1240768329
 257 0054 00000000 		.word	tempPWM
 258              		.cfi_endproc
 259              	.LFE69:
 261              		.section	.text.updateSOC,"ax",%progbits
 262              		.align	1
 263              		.global	updateSOC
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 267              		.fpu softvfp
 269              	updateSOC:
 270              	.LFB70:
  42:Core/Src/gauges.c **** 
  43:Core/Src/gauges.c **** void updateSOC(volatile uint16_t soc)
  44:Core/Src/gauges.c **** {
 271              		.loc 1 44 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 8
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 276              	.LVL16:
 277 0000 82B0     		sub	sp, sp, #8
 278              	.LCFI6:
 279              		.cfi_def_cfa_offset 8
 280 0002 ADF80600 		strh	r0, [sp, #6]	@ movhi
  45:Core/Src/gauges.c ****     uint16_t highPulse = MAP(soc, 1, 100, 400, 880); //gauge range calibration
 281              		.loc 1 45 0
 282 0006 BDF80620 		ldrh	r2, [sp, #6]
 283 000a 92B2     		uxth	r2, r2
 284 000c 013A     		subs	r2, r2, #1
 285 000e C2EB0212 		rsb	r2, r2, r2, lsl #4
 286 0012 5301     		lsls	r3, r2, #5
 287 0014 104A     		ldr	r2, .L28
 288 0016 82FB0312 		smull	r1, r2, r2, r3
 289 001a 1A44     		add	r2, r2, r3
 290 001c D917     		asrs	r1, r3, #31
 291 001e C1EBA211 		rsb	r1, r1, r2, asr #6
 292 0022 89B2     		uxth	r1, r1
 293 0024 01F5C871 		add	r1, r1, #400
 294 0028 89B2     		uxth	r1, r1
 295              	.LVL17:
 296              	.LBB5:
  46:Core/Src/gauges.c ****     
  47:Core/Src/gauges.c ****     for (size_t i = 0; i < highPulse; i++)
 297              		.loc 1 47 0
 298 002a 0022     		movs	r2, #0
ARM GAS  /tmp/cc9ZRKv2.s 			page 7


 299 002c 05E0     		b	.L23
 300              	.LVL18:
 301              	.L24:
  48:Core/Src/gauges.c ****     {
  49:Core/Src/gauges.c ****         socPWM[i] = (uint32_t)SOC_Pin; 
 302              		.loc 1 49 0 discriminator 3
 303 002e 4FF40070 		mov	r0, #512
 304 0032 0A4B     		ldr	r3, .L28+4
 305 0034 43F82200 		str	r0, [r3, r2, lsl #2]
  47:Core/Src/gauges.c ****     {
 306              		.loc 1 47 0 discriminator 3
 307 0038 0132     		adds	r2, r2, #1
 308              	.LVL19:
 309              	.L23:
  47:Core/Src/gauges.c ****     {
 310              		.loc 1 47 0 is_stmt 0 discriminator 1
 311 003a 0B46     		mov	r3, r1
 312 003c 8A42     		cmp	r2, r1
 313 003e F6D3     		bcc	.L24
 314 0040 05E0     		b	.L25
 315              	.LVL20:
 316              	.L26:
 317              	.LBE5:
 318              	.LBB6:
  50:Core/Src/gauges.c ****     }
  51:Core/Src/gauges.c **** 
  52:Core/Src/gauges.c ****     for (size_t i = highPulse; i < 1000; i++)
  53:Core/Src/gauges.c ****     {
  54:Core/Src/gauges.c ****         socPWM[i] = (uint32_t)SOC_Pin << 16U;
 319              		.loc 1 54 0 is_stmt 1 discriminator 3
 320 0042 4FF00071 		mov	r1, #33554432
 321 0046 054A     		ldr	r2, .L28+4
 322 0048 42F82310 		str	r1, [r2, r3, lsl #2]
  52:Core/Src/gauges.c ****     {
 323              		.loc 1 52 0 discriminator 3
 324 004c 0133     		adds	r3, r3, #1
 325              	.LVL21:
 326              	.L25:
  52:Core/Src/gauges.c ****     {
 327              		.loc 1 52 0 is_stmt 0 discriminator 1
 328 004e B3F57A7F 		cmp	r3, #1000
 329 0052 F6D3     		bcc	.L26
 330              	.LBE6:
  55:Core/Src/gauges.c ****     
  56:Core/Src/gauges.c ****     }
  57:Core/Src/gauges.c **** }...
 331              		.loc 1 57 0 is_stmt 1
 332 0054 02B0     		add	sp, sp, #8
 333              	.LCFI7:
 334              		.cfi_def_cfa_offset 0
 335              	.LVL22:
 336              		@ sp needed
 337 0056 7047     		bx	lr
 338              	.L29:
 339              		.align	2
 340              	.L28:
 341 0058 03B57EA5 		.word	-1518422781
ARM GAS  /tmp/cc9ZRKv2.s 			page 8


 342 005c 00000000 		.word	socPWM
 343              		.cfi_endproc
 344              	.LFE70:
 346              		.comm	socPWM,4000,4
 347              		.comm	tempPWM,400,4
 348              		.text
 349              	.Letext0:
 350              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 351              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 352              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 353              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 354              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
 355              		.file 7 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 356              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 357              		.file 9 "/usr/include/newlib/sys/lock.h"
 358              		.file 10 "/usr/include/newlib/sys/_types.h"
 359              		.file 11 "/usr/include/newlib/sys/reent.h"
 360              		.file 12 "Core/Inc/gauges.h"
ARM GAS  /tmp/cc9ZRKv2.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 gauges.c
     /tmp/cc9ZRKv2.s:16     .text.gaugeInit:0000000000000000 $t
     /tmp/cc9ZRKv2.s:23     .text.gaugeInit:0000000000000000 gaugeInit
     /tmp/cc9ZRKv2.s:58     .text.gaugeInit:000000000000001c $d
                            *COM*:0000000000000190 tempPWM
                            *COM*:0000000000000fa0 socPWM
     /tmp/cc9ZRKv2.s:64     .text.updateTach:0000000000000000 $t
     /tmp/cc9ZRKv2.s:71     .text.updateTach:0000000000000000 updateTach
     /tmp/cc9ZRKv2.s:116    .text.updateTach:000000000000003c $d
     /tmp/cc9ZRKv2.s:123    .text.updateSpeed:0000000000000000 $t
     /tmp/cc9ZRKv2.s:130    .text.updateSpeed:0000000000000000 updateSpeed
     /tmp/cc9ZRKv2.s:171    .text.updateSpeed:0000000000000030 $d
     /tmp/cc9ZRKv2.s:178    .text.updateTemp:0000000000000000 $t
     /tmp/cc9ZRKv2.s:185    .text.updateTemp:0000000000000000 updateTemp
     /tmp/cc9ZRKv2.s:256    .text.updateTemp:0000000000000050 $d
     /tmp/cc9ZRKv2.s:262    .text.updateSOC:0000000000000000 $t
     /tmp/cc9ZRKv2.s:269    .text.updateSOC:0000000000000000 updateSOC
     /tmp/cc9ZRKv2.s:341    .text.updateSOC:0000000000000058 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
