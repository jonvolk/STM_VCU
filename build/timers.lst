ARM GAS  /tmp/cctrJMxh.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"timers.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	prvGetNextExpireTime:
  23              	.LFB16:
  24              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/timers.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
ARM GAS  /tmp/cctrJMxh.s 			page 2


  35:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "timers.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  41:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  44:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  45:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  46:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  47:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** header files above, but not in this file, in order to generate the correct
  48:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** privileged Vs unprivileged linkage and placement. */
  49:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  50:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** of this file.  If you want to include software timer functionality then ensure
  55:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  58:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Misc definitions. */
  59:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  61:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of the timers themselves. */
  68:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerControl
  69:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  70:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  71:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  72:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  73:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t				uxAutoReload;		/*<< Set to pdTRUE if the timer should be automatically restarted on
  74:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  75:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  76:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  77:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  78:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  79:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  80:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  81:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		uint8_t 			ucStaticallyAllocated; /*<< Set to pdTRUE if the timer was created statically so no at
  82:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  83:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } xTIMER;
  84:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  85:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  86:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** name below to enable the use of older kernel aware debuggers. */
  87:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef xTIMER Timer_t;
  88:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  89:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  90:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  91:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and messages that request the execution of a non-timer related callback.  The
ARM GAS  /tmp/cctrJMxh.s 			page 3


  92:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  93:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and xCallbackParametersType respectively. */
  94:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerParameters
  95:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  96:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  97:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  98:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } TimerParameter_t;
  99:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrCallbackParameters
 102:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 103:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 104:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 105:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 106:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } CallbackParameters_t;
 107:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The structure that contains the two message types, along with an identifier
 109:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** that is used to determine which message type is valid. */
 110:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerQueueMessage
 111:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 112:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 113:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	union
 114:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 115:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		TimerParameter_t xTimerParameters;
 116:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 118:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 119:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 120:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			CallbackParameters_t xCallbackParameters;
 121:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 122:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	} u;
 123:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } DaemonTaskMessage_t;
 124:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 126:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** which static variables must be declared volatile. */
 127:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 128:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 129:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 130:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** timer service task is allowed to access these lists. */
 131:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1 = {0};
 132:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2 = {0};
 133:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList = NULL;
 134:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList = NULL;
 135:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 136:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 137:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 138:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 139:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -restore */
 141:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 142:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 143:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 144:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 145:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If static allocation is supported then the application must provide the
 147:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	following callback function - which enables the application to optionally
 148:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
ARM GAS  /tmp/cctrJMxh.s 			page 4


 149:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	and TCB. */
 150:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 151:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
 153:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 154:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 155:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 156:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * been initialised already.
 157:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 158:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 159:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 161:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 162:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 163:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * xTimerQueue queue.
 164:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 165:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters ) PRIVILEGED_FUNCTION;
 166:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 168:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called by the timer service task to interpret and process a command it
 169:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * received on the timer queue.
 170:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 171:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 172:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 173:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 174:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 175:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 176:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 177:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 178:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 180:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 181:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * auto reload timer, then call its callback.
 182:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 183:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 184:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 186:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 187:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * current timer list does not still reference some timers.
 188:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 189:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 190:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 192:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 193:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 194:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 195:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 196:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 197:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 198:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 199:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 200:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 201:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * to pdTRUE.
 202:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 203:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
 204:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
ARM GAS  /tmp/cctrJMxh.s 			page 5


 206:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 207:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * until either a timer does expire or a command is received.
 208:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 209:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 210:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 212:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 213:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * dynamically to fill in the structure's members.
 214:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 215:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 216:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 217:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 218:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 219:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 220:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 221:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 222:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 223:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 226:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* This function is called when the scheduler is started if
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer service task has been created/initialised.  If timers have already
 230:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been created then the initialisation will already have been performed. */
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	prvCheckForValidListAndQueue();
 232:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 234:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 236:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 239:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 240:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 243:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 244:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													ulTimerTaskStackSize,
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													NULL,
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 247:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskStackBuffer,
 248:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskTCBBuffer );
 249:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTimerTaskHandle != NULL )
 251:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 252:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = pdPASS;
 253:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 255:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#else
 256:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 257:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
 258:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 259:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 260:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									NULL,
 261:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 262:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									&xTimerTaskHandle );
ARM GAS  /tmp/cctrJMxh.s 			page 6


 263:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 264:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 265:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 266:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 267:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 268:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 269:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 270:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xReturn );
 272:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 274:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 275:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 276:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 278:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 279:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 280:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const UBaseType_t uxAutoReload,
 281:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								void * const pvTimerID,
 282:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 284:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 285:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) );
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 289:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 291:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 293:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 294:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically, so note this
 295:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created dynamically in case the timer is later
 296:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				deleted. */
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdFALSE;
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 299:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 300:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 301:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 304:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 306:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 307:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 311:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 312:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const UBaseType_t uxAutoReload,
 313:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										void * const pvTimerID,
 314:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										StaticTimer_t *pxTimerBuffer )
 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 317:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 318:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 319:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configASSERT_DEFINED == 1 )
ARM GAS  /tmp/cctrJMxh.s 			page 7


 320:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 321:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 322:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			structure. */
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 326:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 327:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( pxTimerBuffer );
 331:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 332:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 334:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 336:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 337:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 339:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically so note this
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created statically in case it is later deleted. */
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdTRUE;
 342:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 343:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 345:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 346:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 348:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 350:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 351:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 353:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 354:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 356:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer )
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 361:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxNewTimer != NULL )
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 364:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 365:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		created/initialised. */
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvCheckForValidListAndQueue();
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Initialise the timer structure members using the function
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		parameters. */
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 376:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
ARM GAS  /tmp/cctrJMxh.s 			page 8


 377:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 379:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 380:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 384:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 385:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 387:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	on a particular timer definition. */
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 391:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 392:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = xCommandID;
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 396:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 400:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 402:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 403:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 404:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 406:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 407:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 408:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 409:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 411:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 412:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 415:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 416:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 417:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 419:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 422:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 423:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 426:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 429:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 431:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 432:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
ARM GAS  /tmp/cctrJMxh.s 			page 9


 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 435:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 436:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 438:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 440:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 441:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 444:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 445:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xReturn;
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 448:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 452:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 453:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 456:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 460:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 461:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 462:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 464:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 466:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 468:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been performed to ensure the list is not empty. */
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 471:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 472:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If the timer is an auto reload timer then calculate the next
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 475:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 476:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 477:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		other than the current time.  It will therefore be inserted into the
 478:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		correct list relative to the time this task thinks it is now. */
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 480:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 481:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The timer expired before it was added to the active timer
 482:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			list.  Reload it now.  */
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 485:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 486:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 487:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 488:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 489:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 490:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
ARM GAS  /tmp/cctrJMxh.s 			page 10


 491:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 492:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 493:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 494:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 496:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 497:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Call the timer callback. */
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 500:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 501:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 502:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters )
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 505:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xListWasEmpty;
 506:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Just to avoid compiler warnings. */
 508:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) pvParameters;
 509:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 511:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 512:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 513:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Allow the application writer to execute some code in the context of
 515:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 516:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		application includes initialisation code that would benefit from
 517:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		executing after the scheduler has been started. */
 518:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vApplicationDaemonTaskStartupHook();
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 521:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 522:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	for( ;; )
 523:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 525:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		obtain the time at which the next timer will expire. */
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 527:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 529:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		until either a timer does expire, or a command is received. */
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 531:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 532:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Empty the command queue. */
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessReceivedCommands();
 534:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 535:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 536:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 537:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 538:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 540:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 541:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched;
 542:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	vTaskSuspendAll();
 544:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 545:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
 546:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 547:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		then don't process this timer as any timers that remained in the list
ARM GAS  /tmp/cctrJMxh.s 			page 11


 548:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		when the lists were switched will have been processed within the
 549:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSampleTimeNow() function. */
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 552:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 553:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 555:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xTaskResumeAll();
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 558:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 559:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 560:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 561:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The tick count has not overflowed, and the next expire
 562:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				time has not been reached yet.  This task should therefore
 563:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				block to wait for the next expire time or a command to be
 564:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				received - whichever comes first.  The following line cannot
 565:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 566:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case when the current timer list is empty. */
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xListWasEmpty != pdFALSE )
 568:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 569:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The current timer list is empty - is the overflow list
 570:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					also empty? */
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 573:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 577:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 578:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					block time to expire.  If a command arrived between the
 580:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					critical section being exited and this yield then the yield
 581:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					will not cause the task to block. */
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					portYIELD_WITHIN_API();
 583:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 584:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 585:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 586:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 587:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 588:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 589:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 591:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xTaskResumeAll();
 593:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 594:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 596:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 598:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 599:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  25              		.loc 1 599 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
ARM GAS  /tmp/cctrJMxh.s 			page 12


  30              	.LVL0:
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 601:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 602:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 604:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 605:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 606:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 607:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer lists will be switched and the next expiry time can be
 608:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	re-assessed.  */
 609:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  31              		.loc 1 609 0
  32 0000 064B     		ldr	r3, .L4
  33 0002 1A68     		ldr	r2, [r3]
  34 0004 1368     		ldr	r3, [r2]
  35 0006 B3FA83F3 		clz	r3, r3
  36 000a 5B09     		lsrs	r3, r3, #5
  37 000c 0360     		str	r3, [r0]
 610:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  38              		.loc 1 610 0
  39 000e 13B9     		cbnz	r3, .L3
 611:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 612:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  40              		.loc 1 612 0
  41 0010 D368     		ldr	r3, [r2, #12]
  42 0012 1868     		ldr	r0, [r3]
  43              	.LVL1:
  44 0014 7047     		bx	lr
  45              	.LVL2:
  46              	.L3:
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 614:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 615:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
  47              		.loc 1 617 0
  48 0016 0020     		movs	r0, #0
  49              	.LVL3:
 618:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 619:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xNextExpireTime;
 621:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
  50              		.loc 1 621 0
  51 0018 7047     		bx	lr
  52              	.L5:
  53 001a 00BF     		.align	2
  54              	.L4:
  55 001c 00000000 		.word	.LANCHOR0
  56              		.cfi_endproc
  57              	.LFE16:
  59              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  60              		.align	1
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu softvfp
  66              	prvInsertTimerInActiveList:
ARM GAS  /tmp/cctrJMxh.s 			page 13


  67              	.LFB18:
 622:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 623:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 624:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 626:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 627:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xTimeNow = xTaskGetTickCount();
 630:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimeNow < xLastTime )
 632:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSwitchTimerLists();
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 635:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 636:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 637:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 639:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 640:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xLastTime = xTimeNow;
 642:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimeNow;
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 645:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 646:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 647:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 648:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  68              		.loc 1 648 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              	.LVL4:
  73 0000 08B5     		push	{r3, lr}
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 3, -8
  76              		.cfi_offset 14, -4
  77              	.LVL5:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 650:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 651:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  78              		.loc 1 651 0
  79 0002 4160     		str	r1, [r0, #4]
 652:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  80              		.loc 1 652 0
  81 0004 0061     		str	r0, [r0, #16]
 653:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 654:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
  82              		.loc 1 654 0
  83 0006 9142     		cmp	r1, r2
  84 0008 0CD8     		bhi	.L7
 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 656:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 657:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		timer was issued, and the time the command was processed? */
 658:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
  85              		.loc 1 658 0
  86 000a D21A     		subs	r2, r2, r3
ARM GAS  /tmp/cctrJMxh.s 			page 14


  87              	.LVL6:
  88 000c 8369     		ldr	r3, [r0, #24]
  89              	.LVL7:
  90 000e 9A42     		cmp	r2, r3
  91 0010 01D3     		bcc	.L13
 659:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 660:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The time between a command being issued and the command being
 661:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed actually exceeds the timers period.  */
 662:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
  92              		.loc 1 662 0
  93 0012 0120     		movs	r0, #1
  94              	.LVL8:
  95 0014 08BD     		pop	{r3, pc}
  96              	.LVL9:
  97              	.L13:
 663:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 664:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 666:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
  98              		.loc 1 666 0
  99 0016 011D     		adds	r1, r0, #4
 100              	.LVL10:
 101 0018 094B     		ldr	r3, .L14
 102 001a 1868     		ldr	r0, [r3]
 103              	.LVL11:
 104 001c FFF7FEFF 		bl	vListInsert
 105              	.LVL12:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 106              		.loc 1 649 0
 107 0020 0020     		movs	r0, #0
 108 0022 08BD     		pop	{r3, pc}
 109              	.LVL13:
 110              	.L7:
 667:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 668:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 669:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 671:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 111              		.loc 1 671 0
 112 0024 9A42     		cmp	r2, r3
 113 0026 01D2     		bcs	.L9
 114              		.loc 1 671 0 is_stmt 0 discriminator 1
 115 0028 9942     		cmp	r1, r3
 116 002a 06D2     		bcs	.L11
 117              	.L9:
 672:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 673:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 674:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			but the expiry time has not, then the timer must have already passed
 675:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			its expiry time and should be processed immediately. */
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 678:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 679:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 118              		.loc 1 680 0 is_stmt 1
 119 002c 011D     		adds	r1, r0, #4
 120              	.LVL14:
ARM GAS  /tmp/cctrJMxh.s 			page 15


 121 002e 054B     		ldr	r3, .L14+4
 122              	.LVL15:
 123 0030 1868     		ldr	r0, [r3]
 124              	.LVL16:
 125 0032 FFF7FEFF 		bl	vListInsert
 126              	.LVL17:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 127              		.loc 1 649 0
 128 0036 0020     		movs	r0, #0
 129 0038 08BD     		pop	{r3, pc}
 130              	.LVL18:
 131              	.L11:
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 132              		.loc 1 676 0
 133 003a 0120     		movs	r0, #1
 134              	.LVL19:
 681:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 682:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 683:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xProcessTimerNow;
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 135              		.loc 1 685 0
 136 003c 08BD     		pop	{r3, pc}
 137              	.LVL20:
 138              	.L15:
 139 003e 00BF     		.align	2
 140              	.L14:
 141 0040 00000000 		.word	.LANCHOR1
 142 0044 00000000 		.word	.LANCHOR0
 143              		.cfi_endproc
 144              	.LFE18:
 146              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 147              		.align	1
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
 151              		.fpu softvfp
 153              	prvCheckForValidListAndQueue:
 154              	.LFB21:
 686:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 687:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 688:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void	prvProcessReceivedCommands( void )
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 690:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 691:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 692:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 693:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 694:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 696:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 697:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 698:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 699:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Negative commands are pended function calls rather than timer
 700:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			commands. */
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 702:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 703:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
ARM GAS  /tmp/cctrJMxh.s 			page 16


 704:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 705:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 706:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 707:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( pxCallback );
 708:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 709:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Call the function. */
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 711:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 712:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 713:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 714:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 715:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 717:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 718:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 719:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 720:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		function calls. */
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 723:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 724:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			software timer. */
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 726:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
 728:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 729:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer is in a list, remove it. */
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 732:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 733:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 734:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 735:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 736:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 737:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 738:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 739:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 740:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			called after the message is received from xTimerQueue so there is no
 742:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			possibility of a higher priority task adding a message to the message
 743:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 744:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 746:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			switch( xMessage.xMessageID )
 748:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 749:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START :
 750:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_START_FROM_ISR :
 751:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET :
 752:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET_FROM_ISR :
 753:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 754:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Start or restart a timer. */
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 756:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 757:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer expired before it was added to the active
 758:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						timer list.  Process it now. */
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 760:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
ARM GAS  /tmp/cctrJMxh.s 			page 17


 761:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 763:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 767:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 768:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 769:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 770:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 771:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 772:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 773:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					else
 774:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 775:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 777:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 778:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 779:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP :
 780:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list.
 782:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					There is nothing to do here. */
 783:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 784:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 785:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 786:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 789:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 790:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The new period does not really have a reference, and can
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be longer or shorter than the old one.  The command time is
 792:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					therefore set to the current time, and as the period cannot
 793:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be zero the next expiry time can only be in the future,
 794:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 795:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					no fail case that needs to be handled here. */
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 798:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 799:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_DELETE :
 800:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list,
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					just free up the memory if the memory was dynamically
 802:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					allocated. */
 803:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 804:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 805:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer can only have been allocated dynamically -
 806:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						free it again. */
 807:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						vPortFree( pxTimer );
 808:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 810:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer could have been allocated statically or
 812:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						dynamically, so check before attempting to free the
 813:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						memory. */
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 815:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							vPortFree( pxTimer );
 817:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
ARM GAS  /tmp/cctrJMxh.s 			page 18


 818:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 819:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 820:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 821:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 822:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 823:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 824:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 825:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 826:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				default	:
 827:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Don't expect to get here. */
 828:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 829:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 831:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 833:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 835:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void )
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 837:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 838:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** List_t *pxTemp;
 839:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 840:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 841:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 842:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 843:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	If there are any timers still referenced from the current timer list
 844:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	then they must have expired and should be processed before the lists
 845:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	are switched. */
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 847:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 849:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 850:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Remove the timer from the list. */
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 853:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 854:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 855:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 856:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 857:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		have not yet been switched. */
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 859:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 861:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 862:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 863:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the timer going into the same timer list then it has already expired
 864:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and the timer should be re-inserted into the current list so it is
 865:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 866:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 867:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the lists have been swapped. */
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 870:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 874:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
ARM GAS  /tmp/cctrJMxh.s 			page 19


 875:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 876:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 879:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 880:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 881:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 883:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 884:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 885:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 886:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 887:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 888:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTemp = pxCurrentTimerList;
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 892:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void )
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 155              		.loc 1 895 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159 0000 30B5     		push	{r4, r5, lr}
 160              		.cfi_def_cfa_offset 12
 161              		.cfi_offset 4, -12
 162              		.cfi_offset 5, -8
 163              		.cfi_offset 14, -4
 164 0002 83B0     		sub	sp, sp, #12
 165              		.cfi_def_cfa_offset 24
 896:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 897:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	queue used to communicate with the timer service, have been
 898:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	initialised. */
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 166              		.loc 1 899 0
 167 0004 FFF7FEFF 		bl	vPortEnterCritical
 168              	.LVL21:
 900:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 901:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerQueue == NULL )
 169              		.loc 1 901 0
 170 0008 114B     		ldr	r3, .L20
 171 000a 1B68     		ldr	r3, [r3]
 172 000c 1BB1     		cbz	r3, .L19
 173              	.L17:
 902:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 908:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 909:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 910:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer queue is allocated statically in case
 911:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 912:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
ARM GAS  /tmp/cctrJMxh.s 			page 20


 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 914:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 916:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 917:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#else
 918:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 919:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 920:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 921:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif
 922:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 923:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 924:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTimerQueue != NULL )
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 928:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 929:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 930:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 931:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 932:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 933:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 934:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 935:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 936:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 938:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 939:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 940:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 941:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 174              		.loc 1 941 0
 175 000e FFF7FEFF 		bl	vPortExitCritical
 176              	.LVL22:
 942:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 177              		.loc 1 942 0
 178 0012 03B0     		add	sp, sp, #12
 179              		.cfi_remember_state
 180              		.cfi_def_cfa_offset 12
 181              		@ sp needed
 182 0014 30BD     		pop	{r4, r5, pc}
 183              	.L19:
 184              		.cfi_restore_state
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 185              		.loc 1 903 0
 186 0016 0F4D     		ldr	r5, .L20+4
 187 0018 2846     		mov	r0, r5
 188 001a FFF7FEFF 		bl	vListInitialise
 189              	.LVL23:
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 190              		.loc 1 904 0
 191 001e 0E4C     		ldr	r4, .L20+8
 192 0020 2046     		mov	r0, r4
 193 0022 FFF7FEFF 		bl	vListInitialise
 194              	.LVL24:
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 195              		.loc 1 905 0
 196 0026 0D4B     		ldr	r3, .L20+12
 197 0028 1D60     		str	r5, [r3]
ARM GAS  /tmp/cctrJMxh.s 			page 21


 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 198              		.loc 1 906 0
 199 002a 0D4B     		ldr	r3, .L20+16
 200 002c 1C60     		str	r4, [r3]
 201              	.LBB41:
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 202              		.loc 1 915 0
 203 002e 0023     		movs	r3, #0
 204 0030 0093     		str	r3, [sp]
 205 0032 0C4B     		ldr	r3, .L20+20
 206 0034 0C4A     		ldr	r2, .L20+24
 207 0036 1021     		movs	r1, #16
 208 0038 0A20     		movs	r0, #10
 209 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 210              	.LVL25:
 211 003e 044B     		ldr	r3, .L20
 212 0040 1860     		str	r0, [r3]
 213              	.LBE41:
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 214              		.loc 1 925 0
 215 0042 0028     		cmp	r0, #0
 216 0044 E3D0     		beq	.L17
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 217              		.loc 1 927 0
 218 0046 0949     		ldr	r1, .L20+28
 219 0048 FFF7FEFF 		bl	vQueueAddToRegistry
 220              	.LVL26:
 221 004c DFE7     		b	.L17
 222              	.L21:
 223 004e 00BF     		.align	2
 224              	.L20:
 225 0050 00000000 		.word	.LANCHOR2
 226 0054 00000000 		.word	.LANCHOR3
 227 0058 00000000 		.word	.LANCHOR4
 228 005c 00000000 		.word	.LANCHOR0
 229 0060 00000000 		.word	.LANCHOR1
 230 0064 00000000 		.word	.LANCHOR5
 231 0068 00000000 		.word	.LANCHOR6
 232 006c 00000000 		.word	.LC0
 233              		.cfi_endproc
 234              	.LFE21:
 236              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 237              		.align	1
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu softvfp
 243              	prvInitialiseNewTimer:
 244              	.LFB7:
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 245              		.loc 1 358 0
 246              		.cfi_startproc
 247              		@ args = 8, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              	.LVL27:
 250 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 251              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cctrJMxh.s 			page 22


 252              		.cfi_offset 4, -24
 253              		.cfi_offset 5, -20
 254              		.cfi_offset 6, -16
 255              		.cfi_offset 7, -12
 256              		.cfi_offset 8, -8
 257              		.cfi_offset 14, -4
 258 0004 079C     		ldr	r4, [sp, #28]
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 259              		.loc 1 360 0
 260 0006 41B9     		cbnz	r1, .L23
 261              	.LBB42:
 262              	.LBB43:
 263              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
ARM GAS  /tmp/cctrJMxh.s 			page 23


  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
ARM GAS  /tmp/cctrJMxh.s 			page 24


 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
ARM GAS  /tmp/cctrJMxh.s 			page 25


 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 264              		.loc 2 195 0
 265              		.syntax unified
 266              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 267 0008 4FF05003 			mov r3, #80												
 268 000c 83F31188 		msr basepri, r3											
 269 0010 BFF36F8F 		isb														
 270 0014 BFF34F8F 		dsb														
 271              	
 272              	@ 0 "" 2
 273              	.LVL28:
 274              		.thumb
 275              		.syntax unified
 276              	.L24:
 277 0018 FEE7     		b	.L24
 278              	.LVL29:
 279              	.L23:
 280 001a 0F46     		mov	r7, r1
 281              	.LBE43:
 282              	.LBE42:
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
ARM GAS  /tmp/cctrJMxh.s 			page 26


 283              		.loc 1 362 0
 284 001c 74B1     		cbz	r4, .L22
 285 001e 1D46     		mov	r5, r3
 286 0020 1646     		mov	r6, r2
 287 0022 8046     		mov	r8, r0
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 288              		.loc 1 366 0
 289 0024 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 290              	.LVL30:
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 291              		.loc 1 370 0
 292 0028 C4F80080 		str	r8, [r4]
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 293              		.loc 1 371 0
 294 002c A761     		str	r7, [r4, #24]
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 295              		.loc 1 372 0
 296 002e E661     		str	r6, [r4, #28]
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 297              		.loc 1 373 0
 298 0030 2562     		str	r5, [r4, #32]
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 299              		.loc 1 374 0
 300 0032 069B     		ldr	r3, [sp, #24]
 301 0034 6362     		str	r3, [r4, #36]
 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 302              		.loc 1 375 0
 303 0036 201D     		adds	r0, r4, #4
 304 0038 FFF7FEFF 		bl	vListInitialiseItem
 305              	.LVL31:
 306              	.L22:
 307 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 308              		.cfi_endproc
 309              	.LFE7:
 311              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 312              		.align	1
 313              		.global	xTimerCreateTimerTask
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 317              		.fpu softvfp
 319              	xTimerCreateTimerTask:
 320              	.LFB4:
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 321              		.loc 1 224 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 16
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 10B5     		push	{r4, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 4, -8
 328              		.cfi_offset 14, -4
 329 0002 88B0     		sub	sp, sp, #32
 330              		.cfi_def_cfa_offset 40
 331              	.LVL32:
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 332              		.loc 1 231 0
ARM GAS  /tmp/cctrJMxh.s 			page 27


 333 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 334              	.LVL33:
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 335              		.loc 1 233 0
 336 0008 154B     		ldr	r3, .L36
 337 000a 1B68     		ldr	r3, [r3]
 338 000c 1BB3     		cbz	r3, .L32
 339              	.LBB44:
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 340              		.loc 1 237 0
 341 000e 0024     		movs	r4, #0
 342 0010 0594     		str	r4, [sp, #20]
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 343              		.loc 1 238 0
 344 0012 0694     		str	r4, [sp, #24]
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 345              		.loc 1 241 0
 346 0014 07AA     		add	r2, sp, #28
 347 0016 06A9     		add	r1, sp, #24
 348 0018 05A8     		add	r0, sp, #20
 349 001a FFF7FEFF 		bl	vApplicationGetTimerTaskMemory
 350              	.LVL34:
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 351              		.loc 1 242 0
 352 001e 059B     		ldr	r3, [sp, #20]
 353 0020 0293     		str	r3, [sp, #8]
 354 0022 069B     		ldr	r3, [sp, #24]
 355 0024 0193     		str	r3, [sp, #4]
 356 0026 0223     		movs	r3, #2
 357 0028 0093     		str	r3, [sp]
 358 002a 2346     		mov	r3, r4
 359 002c 079A     		ldr	r2, [sp, #28]
 360 002e 0D49     		ldr	r1, .L36+4
 361 0030 0D48     		ldr	r0, .L36+8
 362 0032 FFF7FEFF 		bl	xTaskCreateStatic
 363              	.LVL35:
 364 0036 0D4B     		ldr	r3, .L36+12
 365 0038 1860     		str	r0, [r3]
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 366              		.loc 1 250 0
 367 003a 50B1     		cbz	r0, .L35
 252:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 368              		.loc 1 252 0
 369 003c 0120     		movs	r0, #1
 370              	.LVL36:
 371              	.L28:
 372              	.LBE44:
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 373              		.loc 1 271 0
 374 003e 60B9     		cbnz	r0, .L27
 375              	.LBB45:
 376              	.LBB46:
 377              		.loc 2 195 0
 378              		.syntax unified
 379              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 380 0040 4FF05003 			mov r3, #80												
 381 0044 83F31188 		msr basepri, r3											
ARM GAS  /tmp/cctrJMxh.s 			page 28


 382 0048 BFF36F8F 		isb														
 383 004c BFF34F8F 		dsb														
 384              	
 385              	@ 0 "" 2
 386              	.LVL37:
 387              		.thumb
 388              		.syntax unified
 389              	.L31:
 390 0050 FEE7     		b	.L31
 391              	.LVL38:
 392              	.L35:
 393              	.LBE46:
 394              	.LBE45:
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 395              		.loc 1 225 0
 396 0052 2046     		mov	r0, r4
 397 0054 F3E7     		b	.L28
 398              	.L32:
 399 0056 0020     		movs	r0, #0
 400 0058 F1E7     		b	.L28
 401              	.LVL39:
 402              	.L27:
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 403              		.loc 1 273 0
 404 005a 08B0     		add	sp, sp, #32
 405              		.cfi_def_cfa_offset 8
 406              		@ sp needed
 407 005c 10BD     		pop	{r4, pc}
 408              	.L37:
 409 005e 00BF     		.align	2
 410              	.L36:
 411 0060 00000000 		.word	.LANCHOR2
 412 0064 00000000 		.word	.LC1
 413 0068 00000000 		.word	prvTimerTask
 414 006c 00000000 		.word	.LANCHOR7
 415              		.cfi_endproc
 416              	.LFE4:
 418              		.section	.text.xTimerCreate,"ax",%progbits
 419              		.align	1
 420              		.global	xTimerCreate
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu softvfp
 426              	xTimerCreate:
 427              	.LFB5:
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 428              		.loc 1 283 0
 429              		.cfi_startproc
 430              		@ args = 4, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              	.LVL40:
 433 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 434              		.cfi_def_cfa_offset 24
 435              		.cfi_offset 4, -24
 436              		.cfi_offset 5, -20
 437              		.cfi_offset 6, -16
ARM GAS  /tmp/cctrJMxh.s 			page 29


 438              		.cfi_offset 7, -12
 439              		.cfi_offset 8, -8
 440              		.cfi_offset 14, -4
 441 0004 82B0     		sub	sp, sp, #8
 442              		.cfi_def_cfa_offset 32
 443 0006 0546     		mov	r5, r0
 444 0008 0E46     		mov	r6, r1
 445 000a 1746     		mov	r7, r2
 446 000c 9846     		mov	r8, r3
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 447              		.loc 1 286 0
 448 000e 3020     		movs	r0, #48
 449              	.LVL41:
 450 0010 FFF7FEFF 		bl	pvPortMalloc
 451              	.LVL42:
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 452              		.loc 1 288 0
 453 0014 0446     		mov	r4, r0
 454 0016 58B1     		cbz	r0, .L39
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 455              		.loc 1 290 0
 456 0018 0190     		str	r0, [sp, #4]
 457 001a 089B     		ldr	r3, [sp, #32]
 458 001c 0093     		str	r3, [sp]
 459 001e 4346     		mov	r3, r8
 460 0020 3A46     		mov	r2, r7
 461 0022 3146     		mov	r1, r6
 462 0024 2846     		mov	r0, r5
 463              	.LVL43:
 464 0026 FFF7FEFF 		bl	prvInitialiseNewTimer
 465              	.LVL44:
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 466              		.loc 1 297 0
 467 002a 0023     		movs	r3, #0
 468 002c 84F82C30 		strb	r3, [r4, #44]
 469              	.L39:
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 470              		.loc 1 303 0
 471 0030 2046     		mov	r0, r4
 472 0032 02B0     		add	sp, sp, #8
 473              		.cfi_def_cfa_offset 24
 474              		@ sp needed
 475 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 476              		.cfi_endproc
 477              	.LFE5:
 479              		.section	.text.xTimerCreateStatic,"ax",%progbits
 480              		.align	1
 481              		.global	xTimerCreateStatic
 482              		.syntax unified
 483              		.thumb
 484              		.thumb_func
 485              		.fpu softvfp
 487              	xTimerCreateStatic:
 488              	.LFB6:
 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 489              		.loc 1 316 0
 490              		.cfi_startproc
ARM GAS  /tmp/cctrJMxh.s 			page 30


 491              		@ args = 8, pretend = 0, frame = 8
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              	.LVL45:
 494 0000 30B5     		push	{r4, r5, lr}
 495              		.cfi_def_cfa_offset 12
 496              		.cfi_offset 4, -12
 497              		.cfi_offset 5, -8
 498              		.cfi_offset 14, -4
 499 0002 85B0     		sub	sp, sp, #20
 500              		.cfi_def_cfa_offset 32
 501 0004 099C     		ldr	r4, [sp, #36]
 502              	.LBB47:
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 503              		.loc 1 324 0
 504 0006 3025     		movs	r5, #48
 505 0008 0395     		str	r5, [sp, #12]
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 506              		.loc 1 325 0
 507 000a 039D     		ldr	r5, [sp, #12]
 508 000c 302D     		cmp	r5, #48
 509 000e 08D0     		beq	.L42
 510              	.LBB48:
 511              	.LBB49:
 512              		.loc 2 195 0
 513              		.syntax unified
 514              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 515 0010 4FF05003 			mov r3, #80												
 516 0014 83F31188 		msr basepri, r3											
 517 0018 BFF36F8F 		isb														
 518 001c BFF34F8F 		dsb														
 519              	
 520              	@ 0 "" 2
 521              	.LVL46:
 522              		.thumb
 523              		.syntax unified
 524              	.L43:
 525 0020 FEE7     		b	.L43
 526              	.LVL47:
 527              	.L42:
 528              	.LBE49:
 529              	.LBE48:
 530              	.LBE47:
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 531              		.loc 1 330 0
 532 0022 44B9     		cbnz	r4, .L44
 533              	.LBB50:
 534              	.LBB51:
 535              		.loc 2 195 0
 536              		.syntax unified
 537              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 538 0024 4FF05003 			mov r3, #80												
 539 0028 83F31188 		msr basepri, r3											
 540 002c BFF36F8F 		isb														
 541 0030 BFF34F8F 		dsb														
 542              	
 543              	@ 0 "" 2
 544              	.LVL48:
ARM GAS  /tmp/cctrJMxh.s 			page 31


 545              		.thumb
 546              		.syntax unified
 547              	.L45:
 548 0034 FEE7     		b	.L45
 549              	.LVL49:
 550              	.L44:
 551              	.LBE51:
 552              	.LBE50:
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 553              		.loc 1 335 0
 554 0036 0194     		str	r4, [sp, #4]
 555 0038 089D     		ldr	r5, [sp, #32]
 556 003a 0095     		str	r5, [sp]
 557 003c FFF7FEFF 		bl	prvInitialiseNewTimer
 558              	.LVL50:
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 559              		.loc 1 341 0
 560 0040 0123     		movs	r3, #1
 561 0042 84F82C30 		strb	r3, [r4, #44]
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 562              		.loc 1 347 0
 563 0046 2046     		mov	r0, r4
 564 0048 05B0     		add	sp, sp, #20
 565              		.cfi_def_cfa_offset 12
 566              		@ sp needed
 567 004a 30BD     		pop	{r4, r5, pc}
 568              		.cfi_endproc
 569              	.LFE6:
 571              		.section	.text.xTimerGenericCommand,"ax",%progbits
 572              		.align	1
 573              		.global	xTimerGenericCommand
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 577              		.fpu softvfp
 579              	xTimerGenericCommand:
 580              	.LFB8:
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 581              		.loc 1 382 0
 582              		.cfi_startproc
 583              		@ args = 4, pretend = 0, frame = 16
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              	.LVL51:
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 586              		.loc 1 386 0
 587 0000 C0B1     		cbz	r0, .L56
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 588              		.loc 1 382 0
 589 0002 30B5     		push	{r4, r5, lr}
 590              		.cfi_def_cfa_offset 12
 591              		.cfi_offset 4, -12
 592              		.cfi_offset 5, -8
 593              		.cfi_offset 14, -4
 594 0004 85B0     		sub	sp, sp, #20
 595              		.cfi_def_cfa_offset 32
 596 0006 1546     		mov	r5, r2
 597 0008 0446     		mov	r4, r0
ARM GAS  /tmp/cctrJMxh.s 			page 32


 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 598              		.loc 1 390 0
 599 000a 174A     		ldr	r2, .L58
 600              	.LVL52:
 601 000c 1068     		ldr	r0, [r2]
 602              	.LVL53:
 603 000e 40B3     		cbz	r0, .L53
 604 0010 1A46     		mov	r2, r3
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 605              		.loc 1 393 0
 606 0012 0091     		str	r1, [sp]
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 607              		.loc 1 394 0
 608 0014 0195     		str	r5, [sp, #4]
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 609              		.loc 1 395 0
 610 0016 0294     		str	r4, [sp, #8]
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 611              		.loc 1 397 0
 612 0018 0529     		cmp	r1, #5
 613 001a 1CDC     		bgt	.L51
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 614              		.loc 1 399 0
 615 001c FFF7FEFF 		bl	xTaskGetSchedulerState
 616              	.LVL54:
 617 0020 0228     		cmp	r0, #2
 618 0022 10D0     		beq	.L57
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 619              		.loc 1 405 0
 620 0024 0023     		movs	r3, #0
 621 0026 1A46     		mov	r2, r3
 622 0028 6946     		mov	r1, sp
 623 002a 0F48     		ldr	r0, .L58
 624 002c 0068     		ldr	r0, [r0]
 625 002e FFF7FEFF 		bl	xQueueGenericSend
 626              	.LVL55:
 627 0032 14E0     		b	.L47
 628              	.LVL56:
 629              	.L56:
 630              		.cfi_def_cfa_offset 0
 631              		.cfi_restore 4
 632              		.cfi_restore 5
 633              		.cfi_restore 14
 634              	.LBB52:
 635              	.LBB53:
 636              		.loc 2 195 0
 637              		.syntax unified
 638              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 639 0034 4FF05003 			mov r3, #80												
 640 0038 83F31188 		msr basepri, r3											
 641 003c BFF36F8F 		isb														
 642 0040 BFF34F8F 		dsb														
 643              	
 644              	@ 0 "" 2
 645              	.LVL57:
 646              		.thumb
 647              		.syntax unified
ARM GAS  /tmp/cctrJMxh.s 			page 33


 648              	.L49:
 649 0044 FEE7     		b	.L49
 650              	.LVL58:
 651              	.L57:
 652              		.cfi_def_cfa_offset 32
 653              		.cfi_offset 4, -12
 654              		.cfi_offset 5, -8
 655              		.cfi_offset 14, -4
 656              	.LBE53:
 657              	.LBE52:
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 658              		.loc 1 401 0
 659 0046 0023     		movs	r3, #0
 660 0048 089A     		ldr	r2, [sp, #32]
 661 004a 6946     		mov	r1, sp
 662 004c 0648     		ldr	r0, .L58
 663 004e 0068     		ldr	r0, [r0]
 664 0050 FFF7FEFF 		bl	xQueueGenericSend
 665              	.LVL59:
 666 0054 03E0     		b	.L47
 667              	.LVL60:
 668              	.L51:
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 669              		.loc 1 410 0
 670 0056 0023     		movs	r3, #0
 671 0058 6946     		mov	r1, sp
 672              	.LVL61:
 673 005a FFF7FEFF 		bl	xQueueGenericSendFromISR
 674              	.LVL62:
 675              	.L47:
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 676              		.loc 1 421 0
 677 005e 05B0     		add	sp, sp, #20
 678              		.cfi_remember_state
 679              		.cfi_def_cfa_offset 12
 680              		@ sp needed
 681 0060 30BD     		pop	{r4, r5, pc}
 682              	.LVL63:
 683              	.L53:
 684              		.cfi_restore_state
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 685              		.loc 1 383 0
 686 0062 0020     		movs	r0, #0
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 687              		.loc 1 420 0
 688 0064 FBE7     		b	.L47
 689              	.L59:
 690 0066 00BF     		.align	2
 691              	.L58:
 692 0068 00000000 		.word	.LANCHOR2
 693              		.cfi_endproc
 694              	.LFE8:
 696              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 697              		.align	1
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
ARM GAS  /tmp/cctrJMxh.s 			page 34


 701              		.fpu softvfp
 703              	prvSwitchTimerLists:
 704              	.LFB20:
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 705              		.loc 1 836 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709 0000 70B5     		push	{r4, r5, r6, lr}
 710              		.cfi_def_cfa_offset 16
 711              		.cfi_offset 4, -16
 712              		.cfi_offset 5, -12
 713              		.cfi_offset 6, -8
 714              		.cfi_offset 14, -4
 715 0002 82B0     		sub	sp, sp, #8
 716              		.cfi_def_cfa_offset 24
 717              	.L62:
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 718              		.loc 1 846 0
 719 0004 1A4B     		ldr	r3, .L69
 720 0006 1B68     		ldr	r3, [r3]
 721 0008 1A68     		ldr	r2, [r3]
 722 000a 52B3     		cbz	r2, .L68
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 723              		.loc 1 848 0
 724 000c DB68     		ldr	r3, [r3, #12]
 725 000e 1E68     		ldr	r6, [r3]
 726              	.LVL64:
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 727              		.loc 1 851 0
 728 0010 DC68     		ldr	r4, [r3, #12]
 729              	.LVL65:
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 730              		.loc 1 852 0
 731 0012 251D     		adds	r5, r4, #4
 732 0014 2846     		mov	r0, r5
 733 0016 FFF7FEFF 		bl	uxListRemove
 734              	.LVL66:
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 735              		.loc 1 858 0
 736 001a 636A     		ldr	r3, [r4, #36]
 737 001c 2046     		mov	r0, r4
 738 001e 9847     		blx	r3
 739              	.LVL67:
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 740              		.loc 1 860 0
 741 0020 E369     		ldr	r3, [r4, #28]
 742 0022 012B     		cmp	r3, #1
 743 0024 EED1     		bne	.L62
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 744              		.loc 1 868 0
 745 0026 A369     		ldr	r3, [r4, #24]
 746 0028 3344     		add	r3, r3, r6
 747              	.LVL68:
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 748              		.loc 1 869 0
 749 002a 9E42     		cmp	r6, r3
ARM GAS  /tmp/cctrJMxh.s 			page 35


 750 002c 07D2     		bcs	.L63
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 751              		.loc 1 871 0
 752 002e 6360     		str	r3, [r4, #4]
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 753              		.loc 1 872 0
 754 0030 2461     		str	r4, [r4, #16]
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 755              		.loc 1 873 0
 756 0032 2946     		mov	r1, r5
 757 0034 0E4B     		ldr	r3, .L69
 758              	.LVL69:
 759 0036 1868     		ldr	r0, [r3]
 760 0038 FFF7FEFF 		bl	vListInsert
 761              	.LVL70:
 762 003c E2E7     		b	.L62
 763              	.LVL71:
 764              	.L63:
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 765              		.loc 1 877 0
 766 003e 0021     		movs	r1, #0
 767 0040 0091     		str	r1, [sp]
 768 0042 0B46     		mov	r3, r1
 769              	.LVL72:
 770 0044 3246     		mov	r2, r6
 771 0046 2046     		mov	r0, r4
 772 0048 FFF7FEFF 		bl	xTimerGenericCommand
 773              	.LVL73:
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 774              		.loc 1 878 0
 775 004c 0028     		cmp	r0, #0
 776 004e D9D1     		bne	.L62
 777              	.LBB54:
 778              	.LBB55:
 779              		.loc 2 195 0
 780              		.syntax unified
 781              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 782 0050 4FF05003 			mov r3, #80												
 783 0054 83F31188 		msr basepri, r3											
 784 0058 BFF36F8F 		isb														
 785 005c BFF34F8F 		dsb														
 786              	
 787              	@ 0 "" 2
 788              	.LVL74:
 789              		.thumb
 790              		.syntax unified
 791              	.L65:
 792 0060 FEE7     		b	.L65
 793              	.LVL75:
 794              	.L68:
 795              	.LBE55:
 796              	.LBE54:
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 797              		.loc 1 889 0
 798 0062 044A     		ldr	r2, .L69+4
 799 0064 1068     		ldr	r0, [r2]
 800 0066 0249     		ldr	r1, .L69
ARM GAS  /tmp/cctrJMxh.s 			page 36


 801 0068 0860     		str	r0, [r1]
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 802              		.loc 1 890 0
 803 006a 1360     		str	r3, [r2]
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 804              		.loc 1 891 0
 805 006c 02B0     		add	sp, sp, #8
 806              		.cfi_def_cfa_offset 16
 807              		@ sp needed
 808 006e 70BD     		pop	{r4, r5, r6, pc}
 809              	.L70:
 810              		.align	2
 811              	.L69:
 812 0070 00000000 		.word	.LANCHOR0
 813 0074 00000000 		.word	.LANCHOR1
 814              		.cfi_endproc
 815              	.LFE20:
 817              		.section	.text.prvSampleTimeNow,"ax",%progbits
 818              		.align	1
 819              		.syntax unified
 820              		.thumb
 821              		.thumb_func
 822              		.fpu softvfp
 824              	prvSampleTimeNow:
 825              	.LFB17:
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 826              		.loc 1 625 0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              	.LVL76:
 831 0000 38B5     		push	{r3, r4, r5, lr}
 832              		.cfi_def_cfa_offset 16
 833              		.cfi_offset 3, -16
 834              		.cfi_offset 4, -12
 835              		.cfi_offset 5, -8
 836              		.cfi_offset 14, -4
 837 0002 0546     		mov	r5, r0
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 838              		.loc 1 629 0
 839 0004 FFF7FEFF 		bl	xTaskGetTickCount
 840              	.LVL77:
 841 0008 0446     		mov	r4, r0
 842              	.LVL78:
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 843              		.loc 1 631 0
 844 000a 074B     		ldr	r3, .L76
 845 000c 1B68     		ldr	r3, [r3]
 846 000e 9842     		cmp	r0, r3
 847 0010 05D3     		bcc	.L75
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 848              		.loc 1 638 0
 849 0012 0023     		movs	r3, #0
 850 0014 2B60     		str	r3, [r5]
 851              	.LVL79:
 852              	.L73:
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/cctrJMxh.s 			page 37


 853              		.loc 1 641 0
 854 0016 044B     		ldr	r3, .L76
 855 0018 1C60     		str	r4, [r3]
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 856              		.loc 1 644 0
 857 001a 2046     		mov	r0, r4
 858 001c 38BD     		pop	{r3, r4, r5, pc}
 859              	.LVL80:
 860              	.L75:
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 861              		.loc 1 633 0
 862 001e FFF7FEFF 		bl	prvSwitchTimerLists
 863              	.LVL81:
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 864              		.loc 1 634 0
 865 0022 0123     		movs	r3, #1
 866 0024 2B60     		str	r3, [r5]
 867 0026 F6E7     		b	.L73
 868              	.L77:
 869              		.align	2
 870              	.L76:
 871 0028 00000000 		.word	.LANCHOR8
 872              		.cfi_endproc
 873              	.LFE17:
 875              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 876              		.align	1
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
 880              		.fpu softvfp
 882              	prvProcessExpiredTimer:
 883              	.LFB13:
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 884              		.loc 1 463 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888              	.LVL82:
 889 0000 70B5     		push	{r4, r5, r6, lr}
 890              		.cfi_def_cfa_offset 16
 891              		.cfi_offset 4, -16
 892              		.cfi_offset 5, -12
 893              		.cfi_offset 6, -8
 894              		.cfi_offset 14, -4
 895 0002 82B0     		sub	sp, sp, #8
 896              		.cfi_def_cfa_offset 24
 897 0004 0546     		mov	r5, r0
 898 0006 0E46     		mov	r6, r1
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 899              		.loc 1 465 0
 900 0008 144B     		ldr	r3, .L83
 901 000a 1B68     		ldr	r3, [r3]
 902 000c DB68     		ldr	r3, [r3, #12]
 903 000e DC68     		ldr	r4, [r3, #12]
 904              	.LVL83:
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 905              		.loc 1 469 0
ARM GAS  /tmp/cctrJMxh.s 			page 38


 906 0010 201D     		adds	r0, r4, #4
 907              	.LVL84:
 908 0012 FFF7FEFF 		bl	uxListRemove
 909              	.LVL85:
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 910              		.loc 1 474 0
 911 0016 E369     		ldr	r3, [r4, #28]
 912 0018 012B     		cmp	r3, #1
 913 001a 04D0     		beq	.L82
 914              	.L79:
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 915              		.loc 1 498 0
 916 001c 636A     		ldr	r3, [r4, #36]
 917 001e 2046     		mov	r0, r4
 918 0020 9847     		blx	r3
 919              	.LVL86:
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 920              		.loc 1 499 0
 921 0022 02B0     		add	sp, sp, #8
 922              		.cfi_remember_state
 923              		.cfi_def_cfa_offset 16
 924              		@ sp needed
 925 0024 70BD     		pop	{r4, r5, r6, pc}
 926              	.LVL87:
 927              	.L82:
 928              		.cfi_restore_state
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 929              		.loc 1 479 0
 930 0026 A169     		ldr	r1, [r4, #24]
 931 0028 2B46     		mov	r3, r5
 932 002a 3246     		mov	r2, r6
 933 002c 2944     		add	r1, r1, r5
 934 002e 2046     		mov	r0, r4
 935 0030 FFF7FEFF 		bl	prvInsertTimerInActiveList
 936              	.LVL88:
 937 0034 0028     		cmp	r0, #0
 938 0036 F1D0     		beq	.L79
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 939              		.loc 1 483 0
 940 0038 0021     		movs	r1, #0
 941 003a 0091     		str	r1, [sp]
 942 003c 0B46     		mov	r3, r1
 943 003e 2A46     		mov	r2, r5
 944 0040 2046     		mov	r0, r4
 945 0042 FFF7FEFF 		bl	xTimerGenericCommand
 946              	.LVL89:
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 947              		.loc 1 484 0
 948 0046 0028     		cmp	r0, #0
 949 0048 E8D1     		bne	.L79
 950              	.LBB56:
 951              	.LBB57:
 952              		.loc 2 195 0
 953              		.syntax unified
 954              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 955 004a 4FF05003 			mov r3, #80												
 956 004e 83F31188 		msr basepri, r3											
ARM GAS  /tmp/cctrJMxh.s 			page 39


 957 0052 BFF36F8F 		isb														
 958 0056 BFF34F8F 		dsb														
 959              	
 960              	@ 0 "" 2
 961              	.LVL90:
 962              		.thumb
 963              		.syntax unified
 964              	.L80:
 965 005a FEE7     		b	.L80
 966              	.L84:
 967              		.align	2
 968              	.L83:
 969 005c 00000000 		.word	.LANCHOR0
 970              	.LBE57:
 971              	.LBE56:
 972              		.cfi_endproc
 973              	.LFE13:
 975              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 976              		.align	1
 977              		.syntax unified
 978              		.thumb
 979              		.thumb_func
 980              		.fpu softvfp
 982              	prvProcessTimerOrBlockTask:
 983              	.LFB15:
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 984              		.loc 1 539 0
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 8
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 988              	.LVL91:
 989 0000 70B5     		push	{r4, r5, r6, lr}
 990              		.cfi_def_cfa_offset 16
 991              		.cfi_offset 4, -16
 992              		.cfi_offset 5, -12
 993              		.cfi_offset 6, -8
 994              		.cfi_offset 14, -4
 995 0002 82B0     		sub	sp, sp, #8
 996              		.cfi_def_cfa_offset 24
 997 0004 0646     		mov	r6, r0
 998 0006 0C46     		mov	r4, r1
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 999              		.loc 1 543 0
 1000 0008 FFF7FEFF 		bl	vTaskSuspendAll
 1001              	.LVL92:
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 1002              		.loc 1 550 0
 1003 000c 01A8     		add	r0, sp, #4
 1004 000e FFF7FEFF 		bl	prvSampleTimeNow
 1005              	.LVL93:
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1006              		.loc 1 551 0
 1007 0012 019B     		ldr	r3, [sp, #4]
 1008 0014 23BB     		cbnz	r3, .L86
 1009 0016 0546     		mov	r5, r0
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1010              		.loc 1 554 0
ARM GAS  /tmp/cctrJMxh.s 			page 40


 1011 0018 0CB9     		cbnz	r4, .L87
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1012              		.loc 1 554 0 is_stmt 0 discriminator 1
 1013 001a B042     		cmp	r0, r6
 1014 001c 19D2     		bcs	.L91
 1015              	.L87:
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1016              		.loc 1 567 0 is_stmt 1
 1017 001e 2CB1     		cbz	r4, .L89
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1018              		.loc 1 571 0
 1019 0020 114B     		ldr	r3, .L92
 1020 0022 1B68     		ldr	r3, [r3]
 1021 0024 1C68     		ldr	r4, [r3]
 1022              	.LVL94:
 1023 0026 B4FA84F4 		clz	r4, r4
 1024 002a 6409     		lsrs	r4, r4, #5
 1025              	.LVL95:
 1026              	.L89:
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1027              		.loc 1 574 0
 1028 002c 2246     		mov	r2, r4
 1029 002e 711B     		subs	r1, r6, r5
 1030 0030 0E4B     		ldr	r3, .L92+4
 1031 0032 1868     		ldr	r0, [r3]
 1032              	.LVL96:
 1033 0034 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 1034              	.LVL97:
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1035              		.loc 1 576 0
 1036 0038 FFF7FEFF 		bl	xTaskResumeAll
 1037              	.LVL98:
 1038 003c 38B9     		cbnz	r0, .L85
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1039              		.loc 1 582 0
 1040 003e 4FF08052 		mov	r2, #268435456
 1041 0042 0B4B     		ldr	r3, .L92+8
 1042 0044 1A60     		str	r2, [r3]
 1043              		.syntax unified
 1044              	@ 582 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1045 0046 BFF34F8F 		dsb
 1046              	@ 0 "" 2
 1047              	@ 582 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1048 004a BFF36F8F 		isb
 1049              	@ 0 "" 2
 1050              	.LVL99:
 1051              		.thumb
 1052              		.syntax unified
 1053              	.L85:
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1054              		.loc 1 595 0
 1055 004e 02B0     		add	sp, sp, #8
 1056              		.cfi_remember_state
 1057              		.cfi_def_cfa_offset 16
 1058              		@ sp needed
 1059 0050 70BD     		pop	{r4, r5, r6, pc}
 1060              	.LVL100:
ARM GAS  /tmp/cctrJMxh.s 			page 41


 1061              	.L91:
 1062              		.cfi_restore_state
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1063              		.loc 1 556 0
 1064 0052 FFF7FEFF 		bl	xTaskResumeAll
 1065              	.LVL101:
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1066              		.loc 1 557 0
 1067 0056 2946     		mov	r1, r5
 1068 0058 3046     		mov	r0, r6
 1069 005a FFF7FEFF 		bl	prvProcessExpiredTimer
 1070              	.LVL102:
 1071 005e F6E7     		b	.L85
 1072              	.LVL103:
 1073              	.L86:
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1074              		.loc 1 592 0
 1075 0060 FFF7FEFF 		bl	xTaskResumeAll
 1076              	.LVL104:
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1077              		.loc 1 595 0
 1078 0064 F3E7     		b	.L85
 1079              	.L93:
 1080 0066 00BF     		.align	2
 1081              	.L92:
 1082 0068 00000000 		.word	.LANCHOR1
 1083 006c 00000000 		.word	.LANCHOR2
 1084 0070 04ED00E0 		.word	-536810236
 1085              		.cfi_endproc
 1086              	.LFE15:
 1088              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 1089              		.align	1
 1090              		.syntax unified
 1091              		.thumb
 1092              		.thumb_func
 1093              		.fpu softvfp
 1095              	prvProcessReceivedCommands:
 1096              	.LFB19:
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 1097              		.loc 1 689 0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 24
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 1101 0000 30B5     		push	{r4, r5, lr}
 1102              		.cfi_def_cfa_offset 12
 1103              		.cfi_offset 4, -12
 1104              		.cfi_offset 5, -8
 1105              		.cfi_offset 14, -4
 1106 0002 89B0     		sub	sp, sp, #36
 1107              		.cfi_def_cfa_offset 48
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1108              		.loc 1 695 0
 1109 0004 02E0     		b	.L97
 1110              	.L96:
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1111              		.loc 1 721 0
 1112 0006 049B     		ldr	r3, [sp, #16]
ARM GAS  /tmp/cctrJMxh.s 			page 42


 1113 0008 002B     		cmp	r3, #0
 1114 000a 0FDA     		bge	.L109
 1115              	.L97:
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1116              		.loc 1 695 0
 1117 000c 0022     		movs	r2, #0
 1118 000e 04A9     		add	r1, sp, #16
 1119 0010 394B     		ldr	r3, .L112
 1120 0012 1868     		ldr	r0, [r3]
 1121 0014 FFF7FEFF 		bl	xQueueReceive
 1122              	.LVL105:
 1123 0018 0028     		cmp	r0, #0
 1124 001a 6AD0     		beq	.L110
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1125              		.loc 1 701 0
 1126 001c 049B     		ldr	r3, [sp, #16]
 1127 001e 002B     		cmp	r3, #0
 1128 0020 F1DA     		bge	.L96
 1129              	.LVL106:
 1130              	.LBB58:
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1131              		.loc 1 710 0
 1132 0022 0799     		ldr	r1, [sp, #28]
 1133 0024 0698     		ldr	r0, [sp, #24]
 1134 0026 059B     		ldr	r3, [sp, #20]
 1135 0028 9847     		blx	r3
 1136              	.LVL107:
 1137              	.LBE58:
 1138 002a ECE7     		b	.L96
 1139              	.LVL108:
 1140              	.L109:
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1141              		.loc 1 725 0
 1142 002c 069C     		ldr	r4, [sp, #24]
 1143              	.LVL109:
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1144              		.loc 1 727 0
 1145 002e 6369     		ldr	r3, [r4, #20]
 1146 0030 13B1     		cbz	r3, .L98
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1147              		.loc 1 730 0
 1148 0032 201D     		adds	r0, r4, #4
 1149 0034 FFF7FEFF 		bl	uxListRemove
 1150              	.LVL110:
 1151              	.L98:
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1152              		.loc 1 745 0
 1153 0038 03A8     		add	r0, sp, #12
 1154 003a FFF7FEFF 		bl	prvSampleTimeNow
 1155              	.LVL111:
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1156              		.loc 1 747 0
 1157 003e 049B     		ldr	r3, [sp, #16]
 1158 0040 092B     		cmp	r3, #9
 1159 0042 E3D8     		bhi	.L97
 1160 0044 01A2     		adr	r2, .L101
 1161 0046 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  /tmp/cctrJMxh.s 			page 43


 1162 004a 00BF     		.p2align 2
 1163              	.L101:
 1164 004c 75000000 		.word	.L100+1
 1165 0050 75000000 		.word	.L100+1
 1166 0054 75000000 		.word	.L100+1
 1167 0058 0D000000 		.word	.L97+1
 1168 005c BD000000 		.word	.L102+1
 1169 0060 E3000000 		.word	.L103+1
 1170 0064 75000000 		.word	.L100+1
 1171 0068 75000000 		.word	.L100+1
 1172 006c 0D000000 		.word	.L97+1
 1173 0070 BD000000 		.word	.L102+1
 1174              		.p2align 1
 1175              	.L100:
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 1176              		.loc 1 755 0
 1177 0074 0599     		ldr	r1, [sp, #20]
 1178 0076 A569     		ldr	r5, [r4, #24]
 1179 0078 0B46     		mov	r3, r1
 1180 007a 0246     		mov	r2, r0
 1181 007c 2944     		add	r1, r1, r5
 1182 007e 2046     		mov	r0, r4
 1183              	.LVL112:
 1184 0080 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1185              	.LVL113:
 1186 0084 0028     		cmp	r0, #0
 1187 0086 C1D0     		beq	.L97
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 1188              		.loc 1 759 0
 1189 0088 636A     		ldr	r3, [r4, #36]
 1190 008a 2046     		mov	r0, r4
 1191 008c 9847     		blx	r3
 1192              	.LVL114:
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1193              		.loc 1 762 0
 1194 008e E369     		ldr	r3, [r4, #28]
 1195 0090 012B     		cmp	r3, #1
 1196 0092 BBD1     		bne	.L97
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 1197              		.loc 1 764 0
 1198 0094 A269     		ldr	r2, [r4, #24]
 1199 0096 0021     		movs	r1, #0
 1200 0098 0091     		str	r1, [sp]
 1201 009a 0B46     		mov	r3, r1
 1202 009c 0598     		ldr	r0, [sp, #20]
 1203 009e 0244     		add	r2, r2, r0
 1204 00a0 2046     		mov	r0, r4
 1205 00a2 FFF7FEFF 		bl	xTimerGenericCommand
 1206              	.LVL115:
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 1207              		.loc 1 765 0
 1208 00a6 0028     		cmp	r0, #0
 1209 00a8 B0D1     		bne	.L97
 1210              	.LBB59:
 1211              	.LBB60:
 1212              		.loc 2 195 0
 1213              		.syntax unified
ARM GAS  /tmp/cctrJMxh.s 			page 44


 1214              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1215 00aa 4FF05003 			mov r3, #80												
 1216 00ae 83F31188 		msr basepri, r3											
 1217 00b2 BFF36F8F 		isb														
 1218 00b6 BFF34F8F 		dsb														
 1219              	
 1220              	@ 0 "" 2
 1221              	.LVL116:
 1222              		.thumb
 1223              		.syntax unified
 1224              	.L104:
 1225 00ba FEE7     		b	.L104
 1226              	.LVL117:
 1227              	.L102:
 1228              	.LBE60:
 1229              	.LBE59:
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1230              		.loc 1 787 0
 1231 00bc 0599     		ldr	r1, [sp, #20]
 1232 00be A161     		str	r1, [r4, #24]
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1233              		.loc 1 788 0
 1234 00c0 31B1     		cbz	r1, .L111
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1235              		.loc 1 796 0
 1236 00c2 0346     		mov	r3, r0
 1237 00c4 0246     		mov	r2, r0
 1238 00c6 0144     		add	r1, r1, r0
 1239 00c8 2046     		mov	r0, r4
 1240              	.LVL118:
 1241 00ca FFF7FEFF 		bl	prvInsertTimerInActiveList
 1242              	.LVL119:
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1243              		.loc 1 797 0
 1244 00ce 9DE7     		b	.L97
 1245              	.LVL120:
 1246              	.L111:
 1247              	.LBB61:
 1248              	.LBB62:
 1249              		.loc 2 195 0
 1250              		.syntax unified
 1251              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1252 00d0 4FF05003 			mov r3, #80												
 1253 00d4 83F31188 		msr basepri, r3											
 1254 00d8 BFF36F8F 		isb														
 1255 00dc BFF34F8F 		dsb														
 1256              	
 1257              	@ 0 "" 2
 1258              	.LVL121:
 1259              		.thumb
 1260              		.syntax unified
 1261              	.L106:
 1262 00e0 FEE7     		b	.L106
 1263              	.L103:
 1264              	.LBE62:
 1265              	.LBE61:
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
ARM GAS  /tmp/cctrJMxh.s 			page 45


 1266              		.loc 1 814 0
 1267 00e2 94F82C30 		ldrb	r3, [r4, #44]	@ zero_extendqisi2
 1268 00e6 002B     		cmp	r3, #0
 1269 00e8 90D1     		bne	.L97
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1270              		.loc 1 816 0
 1271 00ea 2046     		mov	r0, r4
 1272              	.LVL122:
 1273 00ec FFF7FEFF 		bl	vPortFree
 1274              	.LVL123:
 1275 00f0 8CE7     		b	.L97
 1276              	.LVL124:
 1277              	.L110:
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1278              		.loc 1 832 0
 1279 00f2 09B0     		add	sp, sp, #36
 1280              		.cfi_def_cfa_offset 12
 1281              		@ sp needed
 1282 00f4 30BD     		pop	{r4, r5, pc}
 1283              	.L113:
 1284 00f6 00BF     		.align	2
 1285              	.L112:
 1286 00f8 00000000 		.word	.LANCHOR2
 1287              		.cfi_endproc
 1288              	.LFE19:
 1290              		.section	.text.prvTimerTask,"ax",%progbits
 1291              		.align	1
 1292              		.syntax unified
 1293              		.thumb
 1294              		.thumb_func
 1295              		.fpu softvfp
 1297              	prvTimerTask:
 1298              	.LFB14:
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 1299              		.loc 1 503 0
 1300              		.cfi_startproc
 1301              		@ args = 0, pretend = 0, frame = 8
 1302              		@ frame_needed = 0, uses_anonymous_args = 0
 1303              	.LVL125:
 1304 0000 00B5     		push	{lr}
 1305              		.cfi_def_cfa_offset 4
 1306              		.cfi_offset 14, -4
 1307 0002 83B0     		sub	sp, sp, #12
 1308              		.cfi_def_cfa_offset 16
 1309              	.LVL126:
 1310              	.L115:
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1311              		.loc 1 526 0 discriminator 1
 1312 0004 01A8     		add	r0, sp, #4
 1313 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 1314              	.LVL127:
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1315              		.loc 1 530 0 discriminator 1
 1316 000a 0199     		ldr	r1, [sp, #4]
 1317 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 1318              	.LVL128:
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
ARM GAS  /tmp/cctrJMxh.s 			page 46


 1319              		.loc 1 533 0 discriminator 1
 1320 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 1321              	.LVL129:
 1322 0014 F6E7     		b	.L115
 1323              		.cfi_endproc
 1324              	.LFE14:
 1326              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 1327              		.align	1
 1328              		.global	xTimerGetTimerDaemonTaskHandle
 1329              		.syntax unified
 1330              		.thumb
 1331              		.thumb_func
 1332              		.fpu softvfp
 1334              	xTimerGetTimerDaemonTaskHandle:
 1335              	.LFB9:
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1336              		.loc 1 425 0
 1337              		.cfi_startproc
 1338              		@ args = 0, pretend = 0, frame = 0
 1339              		@ frame_needed = 0, uses_anonymous_args = 0
 1340              		@ link register save eliminated.
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 1341              		.loc 1 428 0
 1342 0000 064B     		ldr	r3, .L121
 1343 0002 1868     		ldr	r0, [r3]
 1344 0004 00B1     		cbz	r0, .L120
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1345              		.loc 1 430 0
 1346 0006 7047     		bx	lr
 1347              	.L120:
 1348              	.LBB63:
 1349              	.LBB64:
 1350              		.loc 2 195 0
 1351              		.syntax unified
 1352              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1353 0008 4FF05003 			mov r3, #80												
 1354 000c 83F31188 		msr basepri, r3											
 1355 0010 BFF36F8F 		isb														
 1356 0014 BFF34F8F 		dsb														
 1357              	
 1358              	@ 0 "" 2
 1359              	.LVL130:
 1360              		.thumb
 1361              		.syntax unified
 1362              	.L119:
 1363 0018 FEE7     		b	.L119
 1364              	.L122:
 1365 001a 00BF     		.align	2
 1366              	.L121:
 1367 001c 00000000 		.word	.LANCHOR7
 1368              	.LBE64:
 1369              	.LBE63:
 1370              		.cfi_endproc
 1371              	.LFE9:
 1373              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1374              		.align	1
 1375              		.global	xTimerGetPeriod
ARM GAS  /tmp/cctrJMxh.s 			page 47


 1376              		.syntax unified
 1377              		.thumb
 1378              		.thumb_func
 1379              		.fpu softvfp
 1381              	xTimerGetPeriod:
 1382              	.LFB10:
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1383              		.loc 1 434 0
 1384              		.cfi_startproc
 1385              		@ args = 0, pretend = 0, frame = 0
 1386              		@ frame_needed = 0, uses_anonymous_args = 0
 1387              		@ link register save eliminated.
 1388              	.LVL131:
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1389              		.loc 1 437 0
 1390 0000 08B1     		cbz	r0, .L126
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1391              		.loc 1 439 0
 1392 0002 8069     		ldr	r0, [r0, #24]
 1393              	.LVL132:
 1394 0004 7047     		bx	lr
 1395              	.LVL133:
 1396              	.L126:
 1397              	.LBB65:
 1398              	.LBB66:
 1399              		.loc 2 195 0
 1400              		.syntax unified
 1401              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1402 0006 4FF05003 			mov r3, #80												
 1403 000a 83F31188 		msr basepri, r3											
 1404 000e BFF36F8F 		isb														
 1405 0012 BFF34F8F 		dsb														
 1406              	
 1407              	@ 0 "" 2
 1408              	.LVL134:
 1409              		.thumb
 1410              		.syntax unified
 1411              	.L125:
 1412 0016 FEE7     		b	.L125
 1413              	.LBE66:
 1414              	.LBE65:
 1415              		.cfi_endproc
 1416              	.LFE10:
 1418              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1419              		.align	1
 1420              		.global	xTimerGetExpiryTime
 1421              		.syntax unified
 1422              		.thumb
 1423              		.thumb_func
 1424              		.fpu softvfp
 1426              	xTimerGetExpiryTime:
 1427              	.LFB11:
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 1428              		.loc 1 443 0
 1429              		.cfi_startproc
 1430              		@ args = 0, pretend = 0, frame = 0
 1431              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctrJMxh.s 			page 48


 1432              		@ link register save eliminated.
 1433              	.LVL135:
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1434              		.loc 1 447 0
 1435 0000 08B1     		cbz	r0, .L130
 1436              	.LVL136:
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1437              		.loc 1 450 0
 1438 0002 4068     		ldr	r0, [r0, #4]
 1439              	.LVL137:
 1440 0004 7047     		bx	lr
 1441              	.LVL138:
 1442              	.L130:
 1443              	.LBB67:
 1444              	.LBB68:
 1445              		.loc 2 195 0
 1446              		.syntax unified
 1447              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1448 0006 4FF05003 			mov r3, #80												
 1449 000a 83F31188 		msr basepri, r3											
 1450 000e BFF36F8F 		isb														
 1451 0012 BFF34F8F 		dsb														
 1452              	
 1453              	@ 0 "" 2
 1454              	.LVL139:
 1455              		.thumb
 1456              		.syntax unified
 1457              	.L129:
 1458 0016 FEE7     		b	.L129
 1459              	.LBE68:
 1460              	.LBE67:
 1461              		.cfi_endproc
 1462              	.LFE11:
 1464              		.section	.text.pcTimerGetName,"ax",%progbits
 1465              		.align	1
 1466              		.global	pcTimerGetName
 1467              		.syntax unified
 1468              		.thumb
 1469              		.thumb_func
 1470              		.fpu softvfp
 1472              	pcTimerGetName:
 1473              	.LFB12:
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1474              		.loc 1 454 0
 1475              		.cfi_startproc
 1476              		@ args = 0, pretend = 0, frame = 0
 1477              		@ frame_needed = 0, uses_anonymous_args = 0
 1478              		@ link register save eliminated.
 1479              	.LVL140:
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 1480              		.loc 1 457 0
 1481 0000 08B1     		cbz	r0, .L134
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1482              		.loc 1 459 0
 1483 0002 0068     		ldr	r0, [r0]
 1484              	.LVL141:
 1485 0004 7047     		bx	lr
ARM GAS  /tmp/cctrJMxh.s 			page 49


 1486              	.LVL142:
 1487              	.L134:
 1488              	.LBB69:
 1489              	.LBB70:
 1490              		.loc 2 195 0
 1491              		.syntax unified
 1492              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1493 0006 4FF05003 			mov r3, #80												
 1494 000a 83F31188 		msr basepri, r3											
 1495 000e BFF36F8F 		isb														
 1496 0012 BFF34F8F 		dsb														
 1497              	
 1498              	@ 0 "" 2
 1499              	.LVL143:
 1500              		.thumb
 1501              		.syntax unified
 1502              	.L133:
 1503 0016 FEE7     		b	.L133
 1504              	.LBE70:
 1505              	.LBE69:
 1506              		.cfi_endproc
 1507              	.LFE12:
 1509              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1510              		.align	1
 1511              		.global	xTimerIsTimerActive
 1512              		.syntax unified
 1513              		.thumb
 1514              		.thumb_func
 1515              		.fpu softvfp
 1517              	xTimerIsTimerActive:
 1518              	.LFB22:
 943:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 944:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 945:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1519              		.loc 1 946 0
 1520              		.cfi_startproc
 1521              		@ args = 0, pretend = 0, frame = 0
 1522              		@ frame_needed = 0, uses_anonymous_args = 0
 1523              	.LVL144:
 947:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 948:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 949:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1524              		.loc 1 950 0
 1525 0000 40B9     		cbnz	r0, .L136
 1526              	.LBB71:
 1527              	.LBB72:
 1528              		.loc 2 195 0
 1529              		.syntax unified
 1530              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1531 0002 4FF05003 			mov r3, #80												
 1532 0006 83F31188 		msr basepri, r3											
 1533 000a BFF36F8F 		isb														
 1534 000e BFF34F8F 		dsb														
 1535              	
 1536              	@ 0 "" 2
ARM GAS  /tmp/cctrJMxh.s 			page 50


 1537              	.LVL145:
 1538              		.thumb
 1539              		.syntax unified
 1540              	.L137:
 1541 0012 FEE7     		b	.L137
 1542              	.L136:
 1543              	.LBE72:
 1544              	.LBE71:
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 1545              		.loc 1 946 0
 1546 0014 10B5     		push	{r4, lr}
 1547              		.cfi_def_cfa_offset 8
 1548              		.cfi_offset 4, -8
 1549              		.cfi_offset 14, -4
 1550 0016 0446     		mov	r4, r0
 951:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 952:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Is the timer in the list of active timers? */
 953:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1551              		.loc 1 953 0
 1552 0018 FFF7FEFF 		bl	vPortEnterCritical
 1553              	.LVL146:
 954:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 955:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Checking to see if it is in the NULL list in effect checks to see if
 956:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is referenced from either the current or the overflow timer lists in
 957:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		one go, but the logic has to be reversed, hence the '!'. */
 958:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimerIsInActiveList = ( BaseType_t ) !( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListIte
 1554              		.loc 1 958 0
 1555 001c 6469     		ldr	r4, [r4, #20]
 1556              	.LVL147:
 1557 001e 0034     		adds	r4, r4, #0
 1558 0020 18BF     		it	ne
 1559 0022 0124     		movne	r4, #1
 1560              	.LVL148:
 959:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 960:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1561              		.loc 1 960 0
 1562 0024 FFF7FEFF 		bl	vPortExitCritical
 1563              	.LVL149:
 961:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 962:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerIsInActiveList;
 963:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1564              		.loc 1 963 0
 1565 0028 2046     		mov	r0, r4
 1566 002a 10BD     		pop	{r4, pc}
 1567              		.cfi_endproc
 1568              	.LFE22:
 1570              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1571              		.align	1
 1572              		.global	pvTimerGetTimerID
 1573              		.syntax unified
 1574              		.thumb
 1575              		.thumb_func
 1576              		.fpu softvfp
 1578              	pvTimerGetTimerID:
 1579              	.LFB23:
 964:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 965:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/cctrJMxh.s 			page 51


 966:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1580              		.loc 1 967 0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 0
 1583              		@ frame_needed = 0, uses_anonymous_args = 0
 1584              	.LVL150:
 968:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 969:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvReturn;
 970:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 971:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1585              		.loc 1 971 0
 1586 0000 40B9     		cbnz	r0, .L141
 1587              	.LBB73:
 1588              	.LBB74:
 1589              		.loc 2 195 0
 1590              		.syntax unified
 1591              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1592 0002 4FF05003 			mov r3, #80												
 1593 0006 83F31188 		msr basepri, r3											
 1594 000a BFF36F8F 		isb														
 1595 000e BFF34F8F 		dsb														
 1596              	
 1597              	@ 0 "" 2
 1598              	.LVL151:
 1599              		.thumb
 1600              		.syntax unified
 1601              	.L142:
 1602 0012 FEE7     		b	.L142
 1603              	.L141:
 1604              	.LBE74:
 1605              	.LBE73:
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 1606              		.loc 1 967 0
 1607 0014 10B5     		push	{r4, lr}
 1608              		.cfi_def_cfa_offset 8
 1609              		.cfi_offset 4, -8
 1610              		.cfi_offset 14, -4
 1611 0016 0446     		mov	r4, r0
 972:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 973:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1612              		.loc 1 973 0
 1613 0018 FFF7FEFF 		bl	vPortEnterCritical
 1614              	.LVL152:
 974:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 975:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1615              		.loc 1 975 0
 1616 001c 246A     		ldr	r4, [r4, #32]
 1617              	.LVL153:
 976:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 977:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1618              		.loc 1 977 0
 1619 001e FFF7FEFF 		bl	vPortExitCritical
 1620              	.LVL154:
 978:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 979:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pvReturn;
 980:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
ARM GAS  /tmp/cctrJMxh.s 			page 52


 1621              		.loc 1 980 0
 1622 0022 2046     		mov	r0, r4
 1623 0024 10BD     		pop	{r4, pc}
 1624              		.cfi_endproc
 1625              	.LFE23:
 1627              		.section	.text.vTimerSetTimerID,"ax",%progbits
 1628              		.align	1
 1629              		.global	vTimerSetTimerID
 1630              		.syntax unified
 1631              		.thumb
 1632              		.thumb_func
 1633              		.fpu softvfp
 1635              	vTimerSetTimerID:
 1636              	.LFB24:
 981:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 982:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 983:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
 984:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1637              		.loc 1 984 0
 1638              		.cfi_startproc
 1639              		@ args = 0, pretend = 0, frame = 0
 1640              		@ frame_needed = 0, uses_anonymous_args = 0
 1641              	.LVL155:
 1642 0000 38B5     		push	{r3, r4, r5, lr}
 1643              		.cfi_def_cfa_offset 16
 1644              		.cfi_offset 3, -16
 1645              		.cfi_offset 4, -12
 1646              		.cfi_offset 5, -8
 1647              		.cfi_offset 14, -4
 1648              	.LVL156:
 985:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 986:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 987:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1649              		.loc 1 987 0
 1650 0002 40B9     		cbnz	r0, .L146
 1651              	.LBB75:
 1652              	.LBB76:
 1653              		.loc 2 195 0
 1654              		.syntax unified
 1655              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1656 0004 4FF05003 			mov r3, #80												
 1657 0008 83F31188 		msr basepri, r3											
 1658 000c BFF36F8F 		isb														
 1659 0010 BFF34F8F 		dsb														
 1660              	
 1661              	@ 0 "" 2
 1662              	.LVL157:
 1663              		.thumb
 1664              		.syntax unified
 1665              	.L147:
 1666 0014 FEE7     		b	.L147
 1667              	.L146:
 1668 0016 0446     		mov	r4, r0
 1669 0018 0D46     		mov	r5, r1
 1670              	.LBE76:
 1671              	.LBE75:
 988:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/cctrJMxh.s 			page 53


 989:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1672              		.loc 1 989 0
 1673 001a FFF7FEFF 		bl	vPortEnterCritical
 1674              	.LVL158:
 990:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 991:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1675              		.loc 1 991 0
 1676 001e 2562     		str	r5, [r4, #32]
 992:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1677              		.loc 1 993 0
 1678 0020 FFF7FEFF 		bl	vPortExitCritical
 1679              	.LVL159:
 1680 0024 38BD     		pop	{r3, r4, r5, pc}
 1681              		.cfi_endproc
 1682              	.LFE24:
 1684              		.section	.text.xTimerPendFunctionCallFromISR,"ax",%progbits
 1685              		.align	1
 1686              		.global	xTimerPendFunctionCallFromISR
 1687              		.syntax unified
 1688              		.thumb
 1689              		.thumb_func
 1690              		.fpu softvfp
 1692              	xTimerPendFunctionCallFromISR:
 1693              	.LFB25:
 994:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 995:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 996:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
 998:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 999:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, ui
1000:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1694              		.loc 1 1000 0
 1695              		.cfi_startproc
 1696              		@ args = 0, pretend = 0, frame = 16
 1697              		@ frame_needed = 0, uses_anonymous_args = 0
 1698              	.LVL160:
 1699 0000 10B5     		push	{r4, lr}
 1700              		.cfi_def_cfa_offset 8
 1701              		.cfi_offset 4, -8
 1702              		.cfi_offset 14, -4
 1703 0002 84B0     		sub	sp, sp, #16
 1704              		.cfi_def_cfa_offset 24
 1705 0004 1C46     		mov	r4, r3
1001:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1002:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1003:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1004:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1005:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1006:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
 1706              		.loc 1 1006 0
 1707 0006 6FF00103 		mvn	r3, #1
 1708              	.LVL161:
 1709 000a 0093     		str	r3, [sp]
1007:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1710              		.loc 1 1007 0
 1711 000c 0190     		str	r0, [sp, #4]
ARM GAS  /tmp/cctrJMxh.s 			page 54


1008:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1712              		.loc 1 1008 0
 1713 000e 0291     		str	r1, [sp, #8]
1009:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1714              		.loc 1 1009 0
 1715 0010 0392     		str	r2, [sp, #12]
1010:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1011:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 1716              		.loc 1 1011 0
 1717 0012 0023     		movs	r3, #0
 1718 0014 2246     		mov	r2, r4
 1719              	.LVL162:
 1720 0016 6946     		mov	r1, sp
 1721              	.LVL163:
 1722 0018 0248     		ldr	r0, .L151
 1723              	.LVL164:
 1724 001a 0068     		ldr	r0, [r0]
 1725 001c FFF7FEFF 		bl	xQueueGenericSendFromISR
 1726              	.LVL165:
1012:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1013:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1014:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1015:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1016:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1727              		.loc 1 1016 0
 1728 0020 04B0     		add	sp, sp, #16
 1729              		.cfi_def_cfa_offset 8
 1730              		@ sp needed
 1731 0022 10BD     		pop	{r4, pc}
 1732              	.LVL166:
 1733              	.L152:
 1734              		.align	2
 1735              	.L151:
 1736 0024 00000000 		.word	.LANCHOR2
 1737              		.cfi_endproc
 1738              	.LFE25:
 1740              		.section	.text.xTimerPendFunctionCall,"ax",%progbits
 1741              		.align	1
 1742              		.global	xTimerPendFunctionCall
 1743              		.syntax unified
 1744              		.thumb
 1745              		.thumb_func
 1746              		.fpu softvfp
 1748              	xTimerPendFunctionCall:
 1749              	.LFB26:
1017:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1018:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1019:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1020:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1021:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1022:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1023:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t 
1024:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1750              		.loc 1 1024 0
 1751              		.cfi_startproc
 1752              		@ args = 0, pretend = 0, frame = 16
 1753              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctrJMxh.s 			page 55


 1754              	.LVL167:
 1755 0000 30B5     		push	{r4, r5, lr}
 1756              		.cfi_def_cfa_offset 12
 1757              		.cfi_offset 4, -12
 1758              		.cfi_offset 5, -8
 1759              		.cfi_offset 14, -4
 1760 0002 85B0     		sub	sp, sp, #20
 1761              		.cfi_def_cfa_offset 32
 1762 0004 1446     		mov	r4, r2
1025:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1026:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1027:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1028:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* This function can only be called after a timer has been created or
1029:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		after the scheduler has been started because, until then, the timer
1030:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		queue does not exist. */
1031:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( xTimerQueue );
 1763              		.loc 1 1031 0
 1764 0006 0D4A     		ldr	r2, .L157
 1765              	.LVL168:
 1766 0008 1568     		ldr	r5, [r2]
 1767 000a 45B9     		cbnz	r5, .L154
 1768              	.LBB77:
 1769              	.LBB78:
 1770              		.loc 2 195 0
 1771              		.syntax unified
 1772              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1773 000c 4FF05003 			mov r3, #80												
 1774 0010 83F31188 		msr basepri, r3											
 1775 0014 BFF36F8F 		isb														
 1776 0018 BFF34F8F 		dsb														
 1777              	
 1778              	@ 0 "" 2
 1779              	.LVL169:
 1780              		.thumb
 1781              		.syntax unified
 1782              	.L155:
 1783 001c FEE7     		b	.L155
 1784              	.LVL170:
 1785              	.L154:
 1786 001e 1A46     		mov	r2, r3
 1787 0020 0346     		mov	r3, r0
 1788              	.LVL171:
 1789              	.LBE78:
 1790              	.LBE77:
1032:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1033:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1034:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1035:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
 1791              		.loc 1 1035 0
 1792 0022 4FF0FF30 		mov	r0, #-1
 1793              	.LVL172:
 1794 0026 0090     		str	r0, [sp]
1036:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1795              		.loc 1 1036 0
 1796 0028 0193     		str	r3, [sp, #4]
1037:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1797              		.loc 1 1037 0
ARM GAS  /tmp/cctrJMxh.s 			page 56


 1798 002a 0291     		str	r1, [sp, #8]
1038:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1799              		.loc 1 1038 0
 1800 002c 0394     		str	r4, [sp, #12]
1039:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1040:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 1801              		.loc 1 1040 0
 1802 002e 0023     		movs	r3, #0
 1803              	.LVL173:
 1804 0030 6946     		mov	r1, sp
 1805              	.LVL174:
 1806 0032 2846     		mov	r0, r5
 1807 0034 FFF7FEFF 		bl	xQueueGenericSend
 1808              	.LVL175:
1041:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1042:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1043:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1044:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1045:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1809              		.loc 1 1045 0
 1810 0038 05B0     		add	sp, sp, #20
 1811              		.cfi_def_cfa_offset 12
 1812              		@ sp needed
 1813 003a 30BD     		pop	{r4, r5, pc}
 1814              	.LVL176:
 1815              	.L158:
 1816              		.align	2
 1817              	.L157:
 1818 003c 00000000 		.word	.LANCHOR2
 1819              		.cfi_endproc
 1820              	.LFE26:
 1822              		.section	.text.uxTimerGetTimerNumber,"ax",%progbits
 1823              		.align	1
 1824              		.global	uxTimerGetTimerNumber
 1825              		.syntax unified
 1826              		.thumb
 1827              		.thumb_func
 1828              		.fpu softvfp
 1830              	uxTimerGetTimerNumber:
 1831              	.LFB27:
1046:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1047:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1048:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1049:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1050:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1051:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1052:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1053:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1832              		.loc 1 1053 0
 1833              		.cfi_startproc
 1834              		@ args = 0, pretend = 0, frame = 0
 1835              		@ frame_needed = 0, uses_anonymous_args = 0
 1836              		@ link register save eliminated.
 1837              	.LVL177:
1054:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return ( ( Timer_t * ) xTimer )->uxTimerNumber;
1055:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1838              		.loc 1 1055 0
ARM GAS  /tmp/cctrJMxh.s 			page 57


 1839 0000 806A     		ldr	r0, [r0, #40]
 1840              	.LVL178:
 1841 0002 7047     		bx	lr
 1842              		.cfi_endproc
 1843              	.LFE27:
 1845              		.section	.text.vTimerSetTimerNumber,"ax",%progbits
 1846              		.align	1
 1847              		.global	vTimerSetTimerNumber
 1848              		.syntax unified
 1849              		.thumb
 1850              		.thumb_func
 1851              		.fpu softvfp
 1853              	vTimerSetTimerNumber:
 1854              	.LFB28:
1056:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1057:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configUSE_TRACE_FACILITY */
1058:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1059:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1060:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1061:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1062:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )
1063:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1855              		.loc 1 1063 0
 1856              		.cfi_startproc
 1857              		@ args = 0, pretend = 0, frame = 0
 1858              		@ frame_needed = 0, uses_anonymous_args = 0
 1859              		@ link register save eliminated.
 1860              	.LVL179:
1064:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 1861              		.loc 1 1064 0
 1862 0000 8162     		str	r1, [r0, #40]
 1863 0002 7047     		bx	lr
 1864              		.cfi_endproc
 1865              	.LFE28:
 1867              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 1868              		.align	2
 1869              		.set	.LANCHOR0,. + 0
 1872              	pxCurrentTimerList:
 1873 0000 00000000 		.space	4
 1874              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 1875              		.align	2
 1876              		.set	.LANCHOR1,. + 0
 1879              	pxOverflowTimerList:
 1880 0000 00000000 		.space	4
 1881              		.section	.bss.ucStaticTimerQueueStorage.5503,"aw",%nobits
 1882              		.align	2
 1883              		.set	.LANCHOR6,. + 0
 1886              	ucStaticTimerQueueStorage.5503:
 1887 0000 00000000 		.space	160
 1887      00000000 
 1887      00000000 
 1887      00000000 
 1887      00000000 
 1888              		.section	.bss.xActiveTimerList1,"aw",%nobits
 1889              		.align	2
 1890              		.set	.LANCHOR3,. + 0
 1893              	xActiveTimerList1:
ARM GAS  /tmp/cctrJMxh.s 			page 58


 1894 0000 00000000 		.space	20
 1894      00000000 
 1894      00000000 
 1894      00000000 
 1894      00000000 
 1895              		.section	.bss.xActiveTimerList2,"aw",%nobits
 1896              		.align	2
 1897              		.set	.LANCHOR4,. + 0
 1900              	xActiveTimerList2:
 1901 0000 00000000 		.space	20
 1901      00000000 
 1901      00000000 
 1901      00000000 
 1901      00000000 
 1902              		.section	.bss.xLastTime.5452,"aw",%nobits
 1903              		.align	2
 1904              		.set	.LANCHOR8,. + 0
 1907              	xLastTime.5452:
 1908 0000 00000000 		.space	4
 1909              		.section	.bss.xStaticTimerQueue.5502,"aw",%nobits
 1910              		.align	2
 1911              		.set	.LANCHOR5,. + 0
 1914              	xStaticTimerQueue.5502:
 1915 0000 00000000 		.space	80
 1915      00000000 
 1915      00000000 
 1915      00000000 
 1915      00000000 
 1916              		.section	.bss.xTimerQueue,"aw",%nobits
 1917              		.align	2
 1918              		.set	.LANCHOR2,. + 0
 1921              	xTimerQueue:
 1922 0000 00000000 		.space	4
 1923              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 1924              		.align	2
 1925              		.set	.LANCHOR7,. + 0
 1928              	xTimerTaskHandle:
 1929 0000 00000000 		.space	4
 1930              		.section	.rodata.prvCheckForValidListAndQueue.str1.4,"aMS",%progbits,1
 1931              		.align	2
 1932              	.LC0:
 1933 0000 546D7251 		.ascii	"TmrQ\000"
 1933      00
 1934              		.section	.rodata.xTimerCreateTimerTask.str1.4,"aMS",%progbits,1
 1935              		.align	2
 1936              	.LC1:
 1937 0000 546D7220 		.ascii	"Tmr Svc\000"
 1937      53766300 
 1938              		.text
 1939              	.Letext0:
 1940              		.file 3 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1941              		.file 4 "/usr/include/newlib/machine/_default_types.h"
 1942              		.file 5 "/usr/include/newlib/sys/lock.h"
 1943              		.file 6 "/usr/include/newlib/sys/_types.h"
 1944              		.file 7 "/usr/include/newlib/sys/reent.h"
 1945              		.file 8 "/usr/include/newlib/stdlib.h"
 1946              		.file 9 "/usr/include/newlib/sys/_stdint.h"
ARM GAS  /tmp/cctrJMxh.s 			page 59


 1947              		.file 10 "Core/Inc/FreeRTOSConfig.h"
 1948              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1949              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 1950              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1951              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1952              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 1953              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/cctrJMxh.s 			page 60


DEFINED SYMBOLS
                            *ABS*:0000000000000000 timers.c
     /tmp/cctrJMxh.s:16     .text.prvGetNextExpireTime:0000000000000000 $t
     /tmp/cctrJMxh.s:22     .text.prvGetNextExpireTime:0000000000000000 prvGetNextExpireTime
     /tmp/cctrJMxh.s:55     .text.prvGetNextExpireTime:000000000000001c $d
     /tmp/cctrJMxh.s:60     .text.prvInsertTimerInActiveList:0000000000000000 $t
     /tmp/cctrJMxh.s:66     .text.prvInsertTimerInActiveList:0000000000000000 prvInsertTimerInActiveList
     /tmp/cctrJMxh.s:141    .text.prvInsertTimerInActiveList:0000000000000040 $d
     /tmp/cctrJMxh.s:147    .text.prvCheckForValidListAndQueue:0000000000000000 $t
     /tmp/cctrJMxh.s:153    .text.prvCheckForValidListAndQueue:0000000000000000 prvCheckForValidListAndQueue
     /tmp/cctrJMxh.s:225    .text.prvCheckForValidListAndQueue:0000000000000050 $d
     /tmp/cctrJMxh.s:237    .text.prvInitialiseNewTimer:0000000000000000 $t
     /tmp/cctrJMxh.s:243    .text.prvInitialiseNewTimer:0000000000000000 prvInitialiseNewTimer
     /tmp/cctrJMxh.s:312    .text.xTimerCreateTimerTask:0000000000000000 $t
     /tmp/cctrJMxh.s:319    .text.xTimerCreateTimerTask:0000000000000000 xTimerCreateTimerTask
     /tmp/cctrJMxh.s:411    .text.xTimerCreateTimerTask:0000000000000060 $d
     /tmp/cctrJMxh.s:1297   .text.prvTimerTask:0000000000000000 prvTimerTask
     /tmp/cctrJMxh.s:419    .text.xTimerCreate:0000000000000000 $t
     /tmp/cctrJMxh.s:426    .text.xTimerCreate:0000000000000000 xTimerCreate
     /tmp/cctrJMxh.s:480    .text.xTimerCreateStatic:0000000000000000 $t
     /tmp/cctrJMxh.s:487    .text.xTimerCreateStatic:0000000000000000 xTimerCreateStatic
     /tmp/cctrJMxh.s:572    .text.xTimerGenericCommand:0000000000000000 $t
     /tmp/cctrJMxh.s:579    .text.xTimerGenericCommand:0000000000000000 xTimerGenericCommand
     /tmp/cctrJMxh.s:692    .text.xTimerGenericCommand:0000000000000068 $d
     /tmp/cctrJMxh.s:697    .text.prvSwitchTimerLists:0000000000000000 $t
     /tmp/cctrJMxh.s:703    .text.prvSwitchTimerLists:0000000000000000 prvSwitchTimerLists
     /tmp/cctrJMxh.s:812    .text.prvSwitchTimerLists:0000000000000070 $d
     /tmp/cctrJMxh.s:818    .text.prvSampleTimeNow:0000000000000000 $t
     /tmp/cctrJMxh.s:824    .text.prvSampleTimeNow:0000000000000000 prvSampleTimeNow
     /tmp/cctrJMxh.s:871    .text.prvSampleTimeNow:0000000000000028 $d
     /tmp/cctrJMxh.s:876    .text.prvProcessExpiredTimer:0000000000000000 $t
     /tmp/cctrJMxh.s:882    .text.prvProcessExpiredTimer:0000000000000000 prvProcessExpiredTimer
     /tmp/cctrJMxh.s:969    .text.prvProcessExpiredTimer:000000000000005c $d
     /tmp/cctrJMxh.s:976    .text.prvProcessTimerOrBlockTask:0000000000000000 $t
     /tmp/cctrJMxh.s:982    .text.prvProcessTimerOrBlockTask:0000000000000000 prvProcessTimerOrBlockTask
     /tmp/cctrJMxh.s:1082   .text.prvProcessTimerOrBlockTask:0000000000000068 $d
     /tmp/cctrJMxh.s:1089   .text.prvProcessReceivedCommands:0000000000000000 $t
     /tmp/cctrJMxh.s:1095   .text.prvProcessReceivedCommands:0000000000000000 prvProcessReceivedCommands
     /tmp/cctrJMxh.s:1164   .text.prvProcessReceivedCommands:000000000000004c $d
     /tmp/cctrJMxh.s:1174   .text.prvProcessReceivedCommands:0000000000000074 $t
     /tmp/cctrJMxh.s:1286   .text.prvProcessReceivedCommands:00000000000000f8 $d
     /tmp/cctrJMxh.s:1291   .text.prvTimerTask:0000000000000000 $t
     /tmp/cctrJMxh.s:1327   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 $t
     /tmp/cctrJMxh.s:1334   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 xTimerGetTimerDaemonTaskHandle
     /tmp/cctrJMxh.s:1367   .text.xTimerGetTimerDaemonTaskHandle:000000000000001c $d
     /tmp/cctrJMxh.s:1374   .text.xTimerGetPeriod:0000000000000000 $t
     /tmp/cctrJMxh.s:1381   .text.xTimerGetPeriod:0000000000000000 xTimerGetPeriod
     /tmp/cctrJMxh.s:1419   .text.xTimerGetExpiryTime:0000000000000000 $t
     /tmp/cctrJMxh.s:1426   .text.xTimerGetExpiryTime:0000000000000000 xTimerGetExpiryTime
     /tmp/cctrJMxh.s:1465   .text.pcTimerGetName:0000000000000000 $t
     /tmp/cctrJMxh.s:1472   .text.pcTimerGetName:0000000000000000 pcTimerGetName
     /tmp/cctrJMxh.s:1510   .text.xTimerIsTimerActive:0000000000000000 $t
     /tmp/cctrJMxh.s:1517   .text.xTimerIsTimerActive:0000000000000000 xTimerIsTimerActive
     /tmp/cctrJMxh.s:1571   .text.pvTimerGetTimerID:0000000000000000 $t
     /tmp/cctrJMxh.s:1578   .text.pvTimerGetTimerID:0000000000000000 pvTimerGetTimerID
     /tmp/cctrJMxh.s:1628   .text.vTimerSetTimerID:0000000000000000 $t
     /tmp/cctrJMxh.s:1635   .text.vTimerSetTimerID:0000000000000000 vTimerSetTimerID
ARM GAS  /tmp/cctrJMxh.s 			page 61


     /tmp/cctrJMxh.s:1685   .text.xTimerPendFunctionCallFromISR:0000000000000000 $t
     /tmp/cctrJMxh.s:1692   .text.xTimerPendFunctionCallFromISR:0000000000000000 xTimerPendFunctionCallFromISR
     /tmp/cctrJMxh.s:1736   .text.xTimerPendFunctionCallFromISR:0000000000000024 $d
     /tmp/cctrJMxh.s:1741   .text.xTimerPendFunctionCall:0000000000000000 $t
     /tmp/cctrJMxh.s:1748   .text.xTimerPendFunctionCall:0000000000000000 xTimerPendFunctionCall
     /tmp/cctrJMxh.s:1818   .text.xTimerPendFunctionCall:000000000000003c $d
     /tmp/cctrJMxh.s:1823   .text.uxTimerGetTimerNumber:0000000000000000 $t
     /tmp/cctrJMxh.s:1830   .text.uxTimerGetTimerNumber:0000000000000000 uxTimerGetTimerNumber
     /tmp/cctrJMxh.s:1846   .text.vTimerSetTimerNumber:0000000000000000 $t
     /tmp/cctrJMxh.s:1853   .text.vTimerSetTimerNumber:0000000000000000 vTimerSetTimerNumber
     /tmp/cctrJMxh.s:1868   .bss.pxCurrentTimerList:0000000000000000 $d
     /tmp/cctrJMxh.s:1872   .bss.pxCurrentTimerList:0000000000000000 pxCurrentTimerList
     /tmp/cctrJMxh.s:1875   .bss.pxOverflowTimerList:0000000000000000 $d
     /tmp/cctrJMxh.s:1879   .bss.pxOverflowTimerList:0000000000000000 pxOverflowTimerList
     /tmp/cctrJMxh.s:1882   .bss.ucStaticTimerQueueStorage.5503:0000000000000000 $d
     /tmp/cctrJMxh.s:1886   .bss.ucStaticTimerQueueStorage.5503:0000000000000000 ucStaticTimerQueueStorage.5503
     /tmp/cctrJMxh.s:1889   .bss.xActiveTimerList1:0000000000000000 $d
     /tmp/cctrJMxh.s:1893   .bss.xActiveTimerList1:0000000000000000 xActiveTimerList1
     /tmp/cctrJMxh.s:1896   .bss.xActiveTimerList2:0000000000000000 $d
     /tmp/cctrJMxh.s:1900   .bss.xActiveTimerList2:0000000000000000 xActiveTimerList2
     /tmp/cctrJMxh.s:1903   .bss.xLastTime.5452:0000000000000000 $d
     /tmp/cctrJMxh.s:1907   .bss.xLastTime.5452:0000000000000000 xLastTime.5452
     /tmp/cctrJMxh.s:1910   .bss.xStaticTimerQueue.5502:0000000000000000 $d
     /tmp/cctrJMxh.s:1914   .bss.xStaticTimerQueue.5502:0000000000000000 xStaticTimerQueue.5502
     /tmp/cctrJMxh.s:1917   .bss.xTimerQueue:0000000000000000 $d
     /tmp/cctrJMxh.s:1921   .bss.xTimerQueue:0000000000000000 xTimerQueue
     /tmp/cctrJMxh.s:1924   .bss.xTimerTaskHandle:0000000000000000 $d
     /tmp/cctrJMxh.s:1928   .bss.xTimerTaskHandle:0000000000000000 xTimerTaskHandle
     /tmp/cctrJMxh.s:1931   .rodata.prvCheckForValidListAndQueue.str1.4:0000000000000000 $d
     /tmp/cctrJMxh.s:1935   .rodata.xTimerCreateTimerTask.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vPortExitCritical
vListInitialise
xQueueGenericCreateStatic
vQueueAddToRegistry
vListInitialiseItem
vApplicationGetTimerTaskMemory
xTaskCreateStatic
pvPortMalloc
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
vQueueWaitForMessageRestricted
xTaskResumeAll
xQueueReceive
vPortFree
