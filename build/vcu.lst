ARM GAS  /tmp/ccrGGCmS.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"vcu.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	__aeabi_i2d
  16              		.global	__aeabi_dmul
  17              		.global	__aeabi_d2uiz
  18              		.section	.text.decodeCAN,"ax",%progbits
  19              		.align	1
  20              		.global	decodeCAN
  21              		.arch armv7-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu softvfp
  27              	decodeCAN:
  28              	.LVL0:
  29              	.LFB68:
  30              		.file 1 "Core/Src/vcu.c"
   1:Core/Src/vcu.c **** #include "vcu.h"
   2:Core/Src/vcu.c **** 
   3:Core/Src/vcu.c **** void decodeCAN(CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx)
   4:Core/Src/vcu.c **** {
  31              		.loc 1 4 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		.loc 1 4 1 is_stmt 0 view .LVU1
  36 0000 10B5     		push	{r4, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40 0002 0C46     		mov	r4, r1
   5:Core/Src/vcu.c **** 
   6:Core/Src/vcu.c ****     switch (rxMsg->StdId)
  41              		.loc 1 6 5 is_stmt 1 view .LVU2
  42              		.loc 1 6 18 is_stmt 0 view .LVU3
  43 0004 0368     		ldr	r3, [r0]
  44              		.loc 1 6 5 view .LVU4
  45 0006 B3F59D7F 		cmp	r3, #314
  46 000a 27D2     		bcs	.L2
  47 000c B3F59A7F 		cmp	r3, #308
  48 0010 13D8     		bhi	.L3
  49 0012 40F20912 		movw	r2, #265
  50 0016 9342     		cmp	r3, r2
  51 0018 00F08C80 		beq	.L4
  52 001c B3F5887F 		cmp	r3, #272
ARM GAS  /tmp/ccrGGCmS.s 			page 2


  53 0020 03D1     		bne	.L20
   7:Core/Src/vcu.c ****     {
   8:Core/Src/vcu.c ****     case 0x135:
   9:Core/Src/vcu.c ****         if ((((canRx[3] << 8) + canRx[2])) <= 2000)
  10:Core/Src/vcu.c ****         {
  11:Core/Src/vcu.c ****             ldu.amps = (((canRx[3] << 8) + canRx[2]) * 1.83);
  12:Core/Src/vcu.c ****         }
  13:Core/Src/vcu.c ****         else if ((((canRx[3] << 8) + canRx[2])) >= 3000)
  14:Core/Src/vcu.c ****         {
  15:Core/Src/vcu.c ****             ldu.amps = (((((canRx[3] << 8) + canRx[2]) - 65535) * 1.83) * -1);
  16:Core/Src/vcu.c ****         }
  17:Core/Src/vcu.c ****         /**************************************************************************/
  18:Core/Src/vcu.c ****         ldu.rpm = (((canRx[1] << 8) + canRx[0]));
  19:Core/Src/vcu.c ****         /**************************************************************************/
  20:Core/Src/vcu.c ****         if ((canRx[4]) > 0)
  21:Core/Src/vcu.c ****         {
  22:Core/Src/vcu.c ****             ldu.mTemp = (canRx[5]); // motor temp C
  23:Core/Src/vcu.c ****         }
  24:Core/Src/vcu.c ****         /**************************************************************************/
  25:Core/Src/vcu.c ****         if ((canRx[5]) > 0)
  26:Core/Src/vcu.c ****         {
  27:Core/Src/vcu.c ****             ldu.hsTemp = (canRx[4]); // heatsink temp C
  28:Core/Src/vcu.c ****         }
  29:Core/Src/vcu.c ****         /**************************************************************************/
  30:Core/Src/vcu.c ****         if ((((canRx[7] << 8)) + canRx[6]) <= 2000)
  31:Core/Src/vcu.c ****         {
  32:Core/Src/vcu.c ****             ldu.potNom = (((canRx[7] << 8)) + canRx[6]);
  33:Core/Src/vcu.c ****         }
  34:Core/Src/vcu.c ****         else if ((((canRx[7] << 8)) + canRx[6]) >= 2000)
  35:Core/Src/vcu.c ****         {
  36:Core/Src/vcu.c ****             ldu.potNom = ((((canRx[7] << 8)) + canRx[6]) - 65535);
  37:Core/Src/vcu.c ****         }
  38:Core/Src/vcu.c ****         break;
  39:Core/Src/vcu.c **** 
  40:Core/Src/vcu.c ****     case 0x04F:
  41:Core/Src/vcu.c ****         ldu.dir = canRx[0];
  42:Core/Src/vcu.c ****         ldu.brake = canRx[1];
  43:Core/Src/vcu.c ****         break;
  44:Core/Src/vcu.c **** 
  45:Core/Src/vcu.c ****     case 0x136:
  46:Core/Src/vcu.c ****         ldu.mode = (canRx[0]);
  47:Core/Src/vcu.c ****         ldu.pot = ((canRx[5] << 8) + canRx[4]);
  48:Core/Src/vcu.c ****         break;
  49:Core/Src/vcu.c **** 
  50:Core/Src/vcu.c ****     case 0x109:
  51:Core/Src/vcu.c ****         charger.chargerStatus = (canRx[5]);
  52:Core/Src/vcu.c ****         charger.current = (canRx[3] * 100) / 55;
  53:Core/Src/vcu.c ****         break;
  54:Core/Src/vcu.c **** 
  55:Core/Src/vcu.c ****     case 0x110:
  56:Core/Src/vcu.c ****         charger.proximity = (canRx[0]);
  54              		.loc 1 56 9 is_stmt 1 view .LVU5
  55              		.loc 1 56 35 is_stmt 0 view .LVU6
  56 0022 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  57              		.loc 1 56 27 view .LVU7
  58 0024 6E4B     		ldr	r3, .L21+8
  59 0026 9A70     		strb	r2, [r3, #2]
ARM GAS  /tmp/ccrGGCmS.s 			page 3


  57:Core/Src/vcu.c ****         break;
  60              		.loc 1 57 9 is_stmt 1 view .LVU8
  61 0028 06E0     		b	.L1
  62              	.L20:
   6:Core/Src/vcu.c ****     {
  63              		.loc 1 6 5 is_stmt 0 view .LVU9
  64 002a 4F2B     		cmp	r3, #79
  65 002c 04D1     		bne	.L1
  41:Core/Src/vcu.c ****         ldu.brake = canRx[1];
  66              		.loc 1 41 9 is_stmt 1 view .LVU10
  41:Core/Src/vcu.c ****         ldu.brake = canRx[1];
  67              		.loc 1 41 24 is_stmt 0 view .LVU11
  68 002e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  41:Core/Src/vcu.c ****         ldu.brake = canRx[1];
  69              		.loc 1 41 17 view .LVU12
  70 0030 6C4B     		ldr	r3, .L21+12
  71 0032 1A72     		strb	r2, [r3, #8]
  42:Core/Src/vcu.c ****         break;
  72              		.loc 1 42 9 is_stmt 1 view .LVU13
  42:Core/Src/vcu.c ****         break;
  73              		.loc 1 42 19 is_stmt 0 view .LVU14
  74 0034 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  75 0036 1A73     		strb	r2, [r3, #12]
  43:Core/Src/vcu.c **** 
  76              		.loc 1 43 9 is_stmt 1 view .LVU15
  77              	.LVL1:
  78              	.L1:
  58:Core/Src/vcu.c ****         /*
  59:Core/Src/vcu.c ****             case 0x136:
  60:Core/Src/vcu.c ****                 ldu.pot = ((canRx[1] << 8) + canRx[0]);
  61:Core/Src/vcu.c ****                 ldu.pot2 = ((canRx[3] << 8) + canRx[2]);
  62:Core/Src/vcu.c ****                 break;
  63:Core/Src/vcu.c ****         */
  64:Core/Src/vcu.c ****     case 0x12D:
  65:Core/Src/vcu.c ****         // restart = ((canRx[1] << 8) + canRx[0]);
  66:Core/Src/vcu.c ****         break;
  67:Core/Src/vcu.c ****     case 0x38E:
  68:Core/Src/vcu.c ****         iboost.pedal = ((canRx[4] << 8) + (canRx[3])) - 4415; // 0-750
  69:Core/Src/vcu.c ****         break;
  70:Core/Src/vcu.c **** 
  71:Core/Src/vcu.c ****     case 0x138:
  72:Core/Src/vcu.c ****         // BMS[0].chargeRequest = canRx[0];
  73:Core/Src/vcu.c ****         BMS[0].volt = ((canRx[1] << 8) + canRx[0]) / 100;
  74:Core/Src/vcu.c ****         BMS[0].temp = ((canRx[3] << 8) + canRx[2]) / 100; // canRx[3];
  75:Core/Src/vcu.c ****         BMS[0].highCell = (canRx[4]) / 100;
  76:Core/Src/vcu.c ****         BMS[0].lowCell = (canRx[5]) / 100;
  77:Core/Src/vcu.c ****         BMS[0].chargeState = canRx[6];
  78:Core/Src/vcu.c ****         BMS[0].soc = canRx[7];
  79:Core/Src/vcu.c ****         break;
  80:Core/Src/vcu.c **** 
  81:Core/Src/vcu.c ****     case 0x139:
  82:Core/Src/vcu.c ****         // BMS[1].chargeRequest = canRx[0];
  83:Core/Src/vcu.c ****         BMS[1].volt = ((canRx[1] << 8) + canRx[0]) / 100;
  84:Core/Src/vcu.c ****         BMS[1].temp = ((canRx[3] << 8) + canRx[2]) / 100; // canRx[3];
  85:Core/Src/vcu.c ****         BMS[1].highCell = (canRx[4]) / 100;
  86:Core/Src/vcu.c ****         BMS[1].lowCell = (canRx[5]) / 100;
  87:Core/Src/vcu.c ****         BMS[1].chargeState = canRx[6];
ARM GAS  /tmp/ccrGGCmS.s 			page 4


  88:Core/Src/vcu.c ****         BMS[1].soc = canRx[7];
  89:Core/Src/vcu.c ****         break;
  90:Core/Src/vcu.c **** 
  91:Core/Src/vcu.c ****     default:
  92:Core/Src/vcu.c ****         break;
  93:Core/Src/vcu.c ****     }
  94:Core/Src/vcu.c **** }
  79              		.loc 1 94 1 is_stmt 0 view .LVU16
  80 0038 10BD     		pop	{r4, pc}
  81              	.LVL2:
  82              	.L3:
  83              		.loc 1 94 1 view .LVU17
  84 003a A3F23513 		subw	r3, r3, #309
  85 003e 042B     		cmp	r3, #4
  86 0040 FAD8     		bhi	.L1
  87 0042 01A2     		adr	r2, .L9
  88 0044 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  89              		.p2align 2
  90              	.L9:
  91 0048 7D000000 		.word	.L12+1
  92 004c 21010000 		.word	.L11+1
  93 0050 39000000 		.word	.L1+1
  94 0054 4F010000 		.word	.L10+1
  95 0058 91010000 		.word	.L8+1
  96              		.p2align 1
  97              	.L2:
   6:Core/Src/vcu.c ****     {
  98              		.loc 1 6 5 view .LVU18
  99 005c 40F28E32 		movw	r2, #910
 100 0060 9342     		cmp	r3, r2
 101 0062 E9D1     		bne	.L1
  68:Core/Src/vcu.c ****         break;
 102              		.loc 1 68 9 is_stmt 1 view .LVU19
  68:Core/Src/vcu.c ****         break;
 103              		.loc 1 68 31 is_stmt 0 view .LVU20
 104 0064 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
  68:Core/Src/vcu.c ****         break;
 105              		.loc 1 68 49 view .LVU21
 106 0066 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
  68:Core/Src/vcu.c ****         break;
 107              		.loc 1 68 41 view .LVU22
 108 0068 03EB0223 		add	r3, r3, r2, lsl #8
 109 006c 9BB2     		uxth	r3, r3
  68:Core/Src/vcu.c ****         break;
 110              		.loc 1 68 55 view .LVU23
 111 006e A3F58953 		sub	r3, r3, #4384
 112 0072 1F3B     		subs	r3, r3, #31
 113 0074 9BB2     		uxth	r3, r3
  68:Core/Src/vcu.c ****         break;
 114              		.loc 1 68 22 view .LVU24
 115 0076 5C4A     		ldr	r2, .L21+16
 116 0078 1380     		strh	r3, [r2]	@ movhi
  69:Core/Src/vcu.c **** 
 117              		.loc 1 69 9 is_stmt 1 view .LVU25
 118 007a DDE7     		b	.L1
 119              	.L12:
   9:Core/Src/vcu.c ****         {
ARM GAS  /tmp/ccrGGCmS.s 			page 5


 120              		.loc 1 9 9 view .LVU26
   9:Core/Src/vcu.c ****         {
 121              		.loc 1 9 21 is_stmt 0 view .LVU27
 122 007c CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
   9:Core/Src/vcu.c ****         {
 123              		.loc 1 9 38 view .LVU28
 124 007e 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 125              	.LVL3:
   9:Core/Src/vcu.c ****         {
 126              		.loc 1 9 31 view .LVU29
 127 0080 00EB0320 		add	r0, r0, r3, lsl #8
   9:Core/Src/vcu.c ****         {
 128              		.loc 1 9 12 view .LVU30
 129 0084 B0F5FA6F 		cmp	r0, #2000
 130 0088 26DC     		bgt	.L14
  11:Core/Src/vcu.c ****         }
 131              		.loc 1 11 13 is_stmt 1 view .LVU31
  11:Core/Src/vcu.c ****         }
 132              		.loc 1 11 54 is_stmt 0 view .LVU32
 133 008a FFF7FEFF 		bl	__aeabi_i2d
 134              	.LVL4:
  11:Core/Src/vcu.c ****         }
 135              		.loc 1 11 54 view .LVU33
 136 008e 52A3     		adr	r3, .L21
 137 0090 D3E90023 		ldrd	r2, [r3]
 138 0094 FFF7FEFF 		bl	__aeabi_dmul
 139              	.LVL5:
  11:Core/Src/vcu.c ****         }
 140              		.loc 1 11 22 view .LVU34
 141 0098 FFF7FEFF 		bl	__aeabi_d2uiz
 142              	.LVL6:
 143 009c 80B2     		uxth	r0, r0
 144 009e 514B     		ldr	r3, .L21+12
 145 00a0 5881     		strh	r0, [r3, #10]	@ movhi
 146              	.L15:
  18:Core/Src/vcu.c ****         /**************************************************************************/
 147              		.loc 1 18 9 is_stmt 1 view .LVU35
  18:Core/Src/vcu.c ****         /**************************************************************************/
 148              		.loc 1 18 27 is_stmt 0 view .LVU36
 149 00a2 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
  18:Core/Src/vcu.c ****         /**************************************************************************/
 150              		.loc 1 18 44 view .LVU37
 151 00a4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  18:Core/Src/vcu.c ****         /**************************************************************************/
 152              		.loc 1 18 37 view .LVU38
 153 00a6 03EB0223 		add	r3, r3, r2, lsl #8
 154 00aa 9BB2     		uxth	r3, r3
  18:Core/Src/vcu.c ****         /**************************************************************************/
 155              		.loc 1 18 17 view .LVU39
 156 00ac 4D4A     		ldr	r2, .L21+12
 157 00ae 1380     		strh	r3, [r2]	@ movhi
  20:Core/Src/vcu.c ****         {
 158              		.loc 1 20 9 is_stmt 1 view .LVU40
  20:Core/Src/vcu.c ****         {
 159              		.loc 1 20 19 is_stmt 0 view .LVU41
 160 00b0 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
  20:Core/Src/vcu.c ****         {
ARM GAS  /tmp/ccrGGCmS.s 			page 6


 161              		.loc 1 20 12 view .LVU42
 162 00b2 0BB1     		cbz	r3, .L16
  22:Core/Src/vcu.c ****         }
 163              		.loc 1 22 13 is_stmt 1 view .LVU43
  22:Core/Src/vcu.c ****         }
 164              		.loc 1 22 31 is_stmt 0 view .LVU44
 165 00b4 6179     		ldrb	r1, [r4, #5]	@ zero_extendqisi2
  22:Core/Src/vcu.c ****         }
 166              		.loc 1 22 23 view .LVU45
 167 00b6 5180     		strh	r1, [r2, #2]	@ movhi
 168              	.L16:
  25:Core/Src/vcu.c ****         {
 169              		.loc 1 25 9 is_stmt 1 view .LVU46
  25:Core/Src/vcu.c ****         {
 170              		.loc 1 25 19 is_stmt 0 view .LVU47
 171 00b8 6279     		ldrb	r2, [r4, #5]	@ zero_extendqisi2
  25:Core/Src/vcu.c ****         {
 172              		.loc 1 25 12 view .LVU48
 173 00ba 12B1     		cbz	r2, .L17
  27:Core/Src/vcu.c ****         }
 174              		.loc 1 27 13 is_stmt 1 view .LVU49
  27:Core/Src/vcu.c ****         }
 175              		.loc 1 27 32 is_stmt 0 view .LVU50
 176 00bc 9BB2     		uxth	r3, r3
  27:Core/Src/vcu.c ****         }
 177              		.loc 1 27 24 view .LVU51
 178 00be 494A     		ldr	r2, .L21+12
 179 00c0 9380     		strh	r3, [r2, #4]	@ movhi
 180              	.L17:
  30:Core/Src/vcu.c ****         {
 181              		.loc 1 30 9 is_stmt 1 view .LVU52
  30:Core/Src/vcu.c ****         {
 182              		.loc 1 30 21 is_stmt 0 view .LVU53
 183 00c2 E279     		ldrb	r2, [r4, #7]	@ zero_extendqisi2
  30:Core/Src/vcu.c ****         {
 184              		.loc 1 30 39 view .LVU54
 185 00c4 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
  30:Core/Src/vcu.c ****         {
 186              		.loc 1 30 32 view .LVU55
 187 00c6 03EB0221 		add	r1, r3, r2, lsl #8
  30:Core/Src/vcu.c ****         {
 188              		.loc 1 30 12 view .LVU56
 189 00ca B1F5FA6F 		cmp	r1, #2000
 190 00ce 1CDC     		bgt	.L18
  32:Core/Src/vcu.c ****         }
 191              		.loc 1 32 13 is_stmt 1 view .LVU57
  32:Core/Src/vcu.c ****         }
 192              		.loc 1 32 45 is_stmt 0 view .LVU58
 193 00d0 8BB2     		uxth	r3, r1
  32:Core/Src/vcu.c ****         }
 194              		.loc 1 32 24 view .LVU59
 195 00d2 444A     		ldr	r2, .L21+12
 196 00d4 D380     		strh	r3, [r2, #6]	@ movhi
 197 00d6 AFE7     		b	.L1
 198              	.LVL7:
 199              	.L14:
  13:Core/Src/vcu.c ****         {
ARM GAS  /tmp/ccrGGCmS.s 			page 7


 200              		.loc 1 13 14 is_stmt 1 view .LVU60
  13:Core/Src/vcu.c ****         {
 201              		.loc 1 13 17 is_stmt 0 view .LVU61
 202 00d8 40F6B733 		movw	r3, #2999
 203 00dc 9842     		cmp	r0, r3
 204 00de E0DD     		ble	.L15
  15:Core/Src/vcu.c ****         }
 205              		.loc 1 15 13 is_stmt 1 view .LVU62
  15:Core/Src/vcu.c ****         }
 206              		.loc 1 15 65 is_stmt 0 view .LVU63
 207 00e0 A0F57F40 		sub	r0, r0, #65280
 208 00e4 FF38     		subs	r0, r0, #255
 209 00e6 FFF7FEFF 		bl	__aeabi_i2d
 210              	.LVL8:
  15:Core/Src/vcu.c ****         }
 211              		.loc 1 15 65 view .LVU64
 212 00ea 3BA3     		adr	r3, .L21
 213 00ec D3E90023 		ldrd	r2, [r3]
 214 00f0 FFF7FEFF 		bl	__aeabi_dmul
 215              	.LVL9:
 216 00f4 0246     		mov	r2, r0
 217 00f6 0B46     		mov	r3, r1
  15:Core/Src/vcu.c ****         }
 218              		.loc 1 15 22 view .LVU65
 219 00f8 1046     		mov	r0, r2
 220 00fa 03F10041 		add	r1, r3, #-2147483648
 221 00fe FFF7FEFF 		bl	__aeabi_d2uiz
 222              	.LVL10:
 223 0102 80B2     		uxth	r0, r0
 224 0104 374B     		ldr	r3, .L21+12
 225 0106 5881     		strh	r0, [r3, #10]	@ movhi
 226 0108 CBE7     		b	.L15
 227              	.L18:
  34:Core/Src/vcu.c ****         {
 228              		.loc 1 34 14 is_stmt 1 view .LVU66
  34:Core/Src/vcu.c ****         {
 229              		.loc 1 34 17 is_stmt 0 view .LVU67
 230 010a B1F5FA6F 		cmp	r1, #2000
 231 010e 93DB     		blt	.L1
  36:Core/Src/vcu.c ****         }
 232              		.loc 1 36 13 is_stmt 1 view .LVU68
  36:Core/Src/vcu.c ****         }
 233              		.loc 1 36 46 is_stmt 0 view .LVU69
 234 0110 03EB0223 		add	r3, r3, r2, lsl #8
 235 0114 9BB2     		uxth	r3, r3
  36:Core/Src/vcu.c ****         }
 236              		.loc 1 36 58 view .LVU70
 237 0116 0133     		adds	r3, r3, #1
 238 0118 9BB2     		uxth	r3, r3
  36:Core/Src/vcu.c ****         }
 239              		.loc 1 36 24 view .LVU71
 240 011a 324A     		ldr	r2, .L21+12
 241 011c D380     		strh	r3, [r2, #6]	@ movhi
 242 011e 8BE7     		b	.L1
 243              	.LVL11:
 244              	.L11:
  46:Core/Src/vcu.c ****         ldu.pot = ((canRx[5] << 8) + canRx[4]);
ARM GAS  /tmp/ccrGGCmS.s 			page 8


 245              		.loc 1 46 9 is_stmt 1 view .LVU72
  46:Core/Src/vcu.c ****         ldu.pot = ((canRx[5] << 8) + canRx[4]);
 246              		.loc 1 46 26 is_stmt 0 view .LVU73
 247 0120 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  46:Core/Src/vcu.c ****         ldu.pot = ((canRx[5] << 8) + canRx[4]);
 248              		.loc 1 46 18 view .LVU74
 249 0122 304A     		ldr	r2, .L21+12
 250 0124 5372     		strb	r3, [r2, #9]
  47:Core/Src/vcu.c ****         break;
 251              		.loc 1 47 9 is_stmt 1 view .LVU75
  47:Core/Src/vcu.c ****         break;
 252              		.loc 1 47 26 is_stmt 0 view .LVU76
 253 0126 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 254              	.LVL12:
  47:Core/Src/vcu.c ****         break;
 255              		.loc 1 47 43 view .LVU77
 256 0128 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
  47:Core/Src/vcu.c ****         break;
 257              		.loc 1 47 36 view .LVU78
 258 012a 03EB0123 		add	r3, r3, r1, lsl #8
 259 012e 9BB2     		uxth	r3, r3
  47:Core/Src/vcu.c ****         break;
 260              		.loc 1 47 17 view .LVU79
 261 0130 D381     		strh	r3, [r2, #14]	@ movhi
  48:Core/Src/vcu.c **** 
 262              		.loc 1 48 9 is_stmt 1 view .LVU80
 263 0132 81E7     		b	.L1
 264              	.LVL13:
 265              	.L4:
  51:Core/Src/vcu.c ****         charger.current = (canRx[3] * 100) / 55;
 266              		.loc 1 51 9 view .LVU81
  51:Core/Src/vcu.c ****         charger.current = (canRx[3] * 100) / 55;
 267              		.loc 1 51 31 is_stmt 0 view .LVU82
 268 0134 2A4A     		ldr	r2, .L21+8
 269 0136 4B79     		ldrb	r3, [r1, #5]	@ zero_extendqisi2
 270 0138 5370     		strb	r3, [r2, #1]
  52:Core/Src/vcu.c ****         break;
 271              		.loc 1 52 9 is_stmt 1 view .LVU83
  52:Core/Src/vcu.c ****         break;
 272              		.loc 1 52 33 is_stmt 0 view .LVU84
 273 013a C978     		ldrb	r1, [r1, #3]	@ zero_extendqisi2
 274              	.LVL14:
  52:Core/Src/vcu.c ****         break;
 275              		.loc 1 52 37 view .LVU85
 276 013c 6423     		movs	r3, #100
 277 013e 03FB01F3 		mul	r3, r3, r1
  52:Core/Src/vcu.c ****         break;
 278              		.loc 1 52 44 view .LVU86
 279 0142 2A49     		ldr	r1, .L21+20
 280 0144 81FB0313 		smull	r1, r3, r1, r3
 281 0148 5B10     		asrs	r3, r3, #1
  52:Core/Src/vcu.c ****         break;
 282              		.loc 1 52 25 view .LVU87
 283 014a 1370     		strb	r3, [r2]
  53:Core/Src/vcu.c **** 
 284              		.loc 1 53 9 is_stmt 1 view .LVU88
 285 014c 74E7     		b	.L1
ARM GAS  /tmp/ccrGGCmS.s 			page 9


 286              	.LVL15:
 287              	.L10:
  73:Core/Src/vcu.c ****         BMS[0].temp = ((canRx[3] << 8) + canRx[2]) / 100; // canRx[3];
 288              		.loc 1 73 9 view .LVU89
  73:Core/Src/vcu.c ****         BMS[0].temp = ((canRx[3] << 8) + canRx[2]) / 100; // canRx[3];
 289              		.loc 1 73 30 is_stmt 0 view .LVU90
 290 014e 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  73:Core/Src/vcu.c ****         BMS[0].temp = ((canRx[3] << 8) + canRx[2]) / 100; // canRx[3];
 291              		.loc 1 73 47 view .LVU91
 292 0150 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  73:Core/Src/vcu.c ****         BMS[0].temp = ((canRx[3] << 8) + canRx[2]) / 100; // canRx[3];
 293              		.loc 1 73 40 view .LVU92
 294 0152 03EB0223 		add	r3, r3, r2, lsl #8
  73:Core/Src/vcu.c ****         BMS[0].temp = ((canRx[3] << 8) + canRx[2]) / 100; // canRx[3];
 295              		.loc 1 73 52 view .LVU93
 296 0156 2648     		ldr	r0, .L21+24
 297              	.LVL16:
  73:Core/Src/vcu.c ****         BMS[0].temp = ((canRx[3] << 8) + canRx[2]) / 100; // canRx[3];
 298              		.loc 1 73 52 view .LVU94
 299 0158 80FB0323 		smull	r2, r3, r0, r3
 300 015c 5B11     		asrs	r3, r3, #5
  73:Core/Src/vcu.c ****         BMS[0].temp = ((canRx[3] << 8) + canRx[2]) / 100; // canRx[3];
 301              		.loc 1 73 21 view .LVU95
 302 015e 254A     		ldr	r2, .L21+28
 303 0160 1380     		strh	r3, [r2]	@ movhi
  74:Core/Src/vcu.c ****         BMS[0].highCell = (canRx[4]) / 100;
 304              		.loc 1 74 9 is_stmt 1 view .LVU96
  74:Core/Src/vcu.c ****         BMS[0].highCell = (canRx[4]) / 100;
 305              		.loc 1 74 30 is_stmt 0 view .LVU97
 306 0162 C978     		ldrb	r1, [r1, #3]	@ zero_extendqisi2
 307              	.LVL17:
  74:Core/Src/vcu.c ****         BMS[0].highCell = (canRx[4]) / 100;
 308              		.loc 1 74 47 view .LVU98
 309 0164 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
  74:Core/Src/vcu.c ****         BMS[0].highCell = (canRx[4]) / 100;
 310              		.loc 1 74 40 view .LVU99
 311 0166 03EB0123 		add	r3, r3, r1, lsl #8
  74:Core/Src/vcu.c ****         BMS[0].highCell = (canRx[4]) / 100;
 312              		.loc 1 74 52 view .LVU100
 313 016a 80FB0313 		smull	r1, r3, r0, r3
 314 016e 5B11     		asrs	r3, r3, #5
  74:Core/Src/vcu.c ****         BMS[0].highCell = (canRx[4]) / 100;
 315              		.loc 1 74 21 view .LVU101
 316 0170 9370     		strb	r3, [r2, #2]
  75:Core/Src/vcu.c ****         BMS[0].lowCell = (canRx[5]) / 100;
 317              		.loc 1 75 9 is_stmt 1 view .LVU102
  75:Core/Src/vcu.c ****         BMS[0].lowCell = (canRx[5]) / 100;
 318              		.loc 1 75 33 is_stmt 0 view .LVU103
 319 0172 2179     		ldrb	r1, [r4, #4]	@ zero_extendqisi2
  75:Core/Src/vcu.c ****         BMS[0].lowCell = (canRx[5]) / 100;
 320              		.loc 1 75 25 view .LVU104
 321 0174 A0FB0131 		umull	r3, r1, r0, r1
 322 0178 4909     		lsrs	r1, r1, #5
 323 017a D170     		strb	r1, [r2, #3]
  76:Core/Src/vcu.c ****         BMS[0].chargeState = canRx[6];
 324              		.loc 1 76 9 is_stmt 1 view .LVU105
  76:Core/Src/vcu.c ****         BMS[0].chargeState = canRx[6];
ARM GAS  /tmp/ccrGGCmS.s 			page 10


 325              		.loc 1 76 32 is_stmt 0 view .LVU106
 326 017c 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
  76:Core/Src/vcu.c ****         BMS[0].chargeState = canRx[6];
 327              		.loc 1 76 24 view .LVU107
 328 017e A0FB0313 		umull	r1, r3, r0, r3
 329 0182 5B09     		lsrs	r3, r3, #5
 330 0184 1371     		strb	r3, [r2, #4]
  77:Core/Src/vcu.c ****         BMS[0].soc = canRx[7];
 331              		.loc 1 77 9 is_stmt 1 view .LVU108
  77:Core/Src/vcu.c ****         BMS[0].soc = canRx[7];
 332              		.loc 1 77 28 is_stmt 0 view .LVU109
 333 0186 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 334 0188 1372     		strb	r3, [r2, #8]
  78:Core/Src/vcu.c ****         break;
 335              		.loc 1 78 9 is_stmt 1 view .LVU110
  78:Core/Src/vcu.c ****         break;
 336              		.loc 1 78 20 is_stmt 0 view .LVU111
 337 018a E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 338 018c 9371     		strb	r3, [r2, #6]
  79:Core/Src/vcu.c **** 
 339              		.loc 1 79 9 is_stmt 1 view .LVU112
 340 018e 53E7     		b	.L1
 341              	.LVL18:
 342              	.L8:
  83:Core/Src/vcu.c ****         BMS[1].temp = ((canRx[3] << 8) + canRx[2]) / 100; // canRx[3];
 343              		.loc 1 83 9 view .LVU113
  83:Core/Src/vcu.c ****         BMS[1].temp = ((canRx[3] << 8) + canRx[2]) / 100; // canRx[3];
 344              		.loc 1 83 30 is_stmt 0 view .LVU114
 345 0190 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  83:Core/Src/vcu.c ****         BMS[1].temp = ((canRx[3] << 8) + canRx[2]) / 100; // canRx[3];
 346              		.loc 1 83 47 view .LVU115
 347 0192 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  83:Core/Src/vcu.c ****         BMS[1].temp = ((canRx[3] << 8) + canRx[2]) / 100; // canRx[3];
 348              		.loc 1 83 40 view .LVU116
 349 0194 03EB0223 		add	r3, r3, r2, lsl #8
  83:Core/Src/vcu.c ****         BMS[1].temp = ((canRx[3] << 8) + canRx[2]) / 100; // canRx[3];
 350              		.loc 1 83 52 view .LVU117
 351 0198 1548     		ldr	r0, .L21+24
 352              	.LVL19:
  83:Core/Src/vcu.c ****         BMS[1].temp = ((canRx[3] << 8) + canRx[2]) / 100; // canRx[3];
 353              		.loc 1 83 52 view .LVU118
 354 019a 80FB0323 		smull	r2, r3, r0, r3
 355 019e 5B11     		asrs	r3, r3, #5
  83:Core/Src/vcu.c ****         BMS[1].temp = ((canRx[3] << 8) + canRx[2]) / 100; // canRx[3];
 356              		.loc 1 83 21 view .LVU119
 357 01a0 144A     		ldr	r2, .L21+28
 358 01a2 5381     		strh	r3, [r2, #10]	@ movhi
  84:Core/Src/vcu.c ****         BMS[1].highCell = (canRx[4]) / 100;
 359              		.loc 1 84 9 is_stmt 1 view .LVU120
  84:Core/Src/vcu.c ****         BMS[1].highCell = (canRx[4]) / 100;
 360              		.loc 1 84 30 is_stmt 0 view .LVU121
 361 01a4 C978     		ldrb	r1, [r1, #3]	@ zero_extendqisi2
 362              	.LVL20:
  84:Core/Src/vcu.c ****         BMS[1].highCell = (canRx[4]) / 100;
 363              		.loc 1 84 47 view .LVU122
 364 01a6 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
  84:Core/Src/vcu.c ****         BMS[1].highCell = (canRx[4]) / 100;
ARM GAS  /tmp/ccrGGCmS.s 			page 11


 365              		.loc 1 84 40 view .LVU123
 366 01a8 03EB0123 		add	r3, r3, r1, lsl #8
  84:Core/Src/vcu.c ****         BMS[1].highCell = (canRx[4]) / 100;
 367              		.loc 1 84 52 view .LVU124
 368 01ac 80FB0313 		smull	r1, r3, r0, r3
 369 01b0 5B11     		asrs	r3, r3, #5
  84:Core/Src/vcu.c ****         BMS[1].highCell = (canRx[4]) / 100;
 370              		.loc 1 84 21 view .LVU125
 371 01b2 1373     		strb	r3, [r2, #12]
  85:Core/Src/vcu.c ****         BMS[1].lowCell = (canRx[5]) / 100;
 372              		.loc 1 85 9 is_stmt 1 view .LVU126
  85:Core/Src/vcu.c ****         BMS[1].lowCell = (canRx[5]) / 100;
 373              		.loc 1 85 33 is_stmt 0 view .LVU127
 374 01b4 2179     		ldrb	r1, [r4, #4]	@ zero_extendqisi2
  85:Core/Src/vcu.c ****         BMS[1].lowCell = (canRx[5]) / 100;
 375              		.loc 1 85 25 view .LVU128
 376 01b6 A0FB0131 		umull	r3, r1, r0, r1
 377 01ba 4909     		lsrs	r1, r1, #5
 378 01bc 5173     		strb	r1, [r2, #13]
  86:Core/Src/vcu.c ****         BMS[1].chargeState = canRx[6];
 379              		.loc 1 86 9 is_stmt 1 view .LVU129
  86:Core/Src/vcu.c ****         BMS[1].chargeState = canRx[6];
 380              		.loc 1 86 32 is_stmt 0 view .LVU130
 381 01be 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
  86:Core/Src/vcu.c ****         BMS[1].chargeState = canRx[6];
 382              		.loc 1 86 24 view .LVU131
 383 01c0 A0FB0313 		umull	r1, r3, r0, r3
 384 01c4 5B09     		lsrs	r3, r3, #5
 385 01c6 9373     		strb	r3, [r2, #14]
  87:Core/Src/vcu.c ****         BMS[1].soc = canRx[7];
 386              		.loc 1 87 9 is_stmt 1 view .LVU132
  87:Core/Src/vcu.c ****         BMS[1].soc = canRx[7];
 387              		.loc 1 87 28 is_stmt 0 view .LVU133
 388 01c8 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 389 01ca 9374     		strb	r3, [r2, #18]
  88:Core/Src/vcu.c ****         break;
 390              		.loc 1 88 9 is_stmt 1 view .LVU134
  88:Core/Src/vcu.c ****         break;
 391              		.loc 1 88 20 is_stmt 0 view .LVU135
 392 01cc E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 393 01ce 1374     		strb	r3, [r2, #16]
  89:Core/Src/vcu.c **** 
 394              		.loc 1 89 9 is_stmt 1 view .LVU136
 395              		.loc 1 94 1 is_stmt 0 view .LVU137
 396 01d0 32E7     		b	.L1
 397              	.L22:
 398 01d2 00BFAFF3 		.align	3
 398      0080
 399              	.L21:
 400 01d8 48E17A14 		.word	343597384
 401 01dc AE47FD3F 		.word	1073563566
 402 01e0 00000000 		.word	charger
 403 01e4 00000000 		.word	ldu
 404 01e8 00000000 		.word	iboost
 405 01ec 95204F09 		.word	156180629
 406 01f0 1F85EB51 		.word	1374389535
 407 01f4 00000000 		.word	BMS
ARM GAS  /tmp/ccrGGCmS.s 			page 12


 408              		.cfi_endproc
 409              	.LFE68:
 411              		.section	.text.canIOset,"ax",%progbits
 412              		.align	1
 413              		.global	canIOset
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 417              		.fpu softvfp
 419              	canIOset:
 420              	.LVL21:
 421              	.LFB69:
  95:Core/Src/vcu.c **** 
  96:Core/Src/vcu.c **** //////////////// LDU DIO FUNCTIONS /////////////////////////////
  97:Core/Src/vcu.c **** void canIOset(int bit, int val)
  98:Core/Src/vcu.c **** {
 422              		.loc 1 98 1 is_stmt 1 view -0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		.loc 1 98 1 is_stmt 0 view .LVU139
 427 0000 08B5     		push	{r3, lr}
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 3, -8
 430              		.cfi_offset 14, -4
  99:Core/Src/vcu.c ****     if (val)
 431              		.loc 1 99 5 is_stmt 1 view .LVU140
 432              		.loc 1 99 8 is_stmt 0 view .LVU141
 433 0002 A1B1     		cbz	r1, .L24
 100:Core/Src/vcu.c ****     {
 101:Core/Src/vcu.c ****         vcu.dio |= (1U << (bit));
 434              		.loc 1 101 9 is_stmt 1 view .LVU142
 435              		.loc 1 101 17 is_stmt 0 view .LVU143
 436 0004 0E49     		ldr	r1, .L27
 437              	.LVL22:
 438              		.loc 1 101 17 view .LVU144
 439 0006 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 440              		.loc 1 101 24 view .LVU145
 441 0008 0122     		movs	r2, #1
 442 000a 02FA00F0 		lsl	r0, r2, r0
 443              	.LVL23:
 444              		.loc 1 101 17 view .LVU146
 445 000e 1843     		orrs	r0, r0, r3
 446 0010 C0B2     		uxtb	r0, r0
 447 0012 0870     		strb	r0, [r1]
 448              	.L25:
 102:Core/Src/vcu.c ****     }
 103:Core/Src/vcu.c ****     else
 104:Core/Src/vcu.c ****     {
 105:Core/Src/vcu.c ****         vcu.dio &= ~(1U << (bit));
 106:Core/Src/vcu.c ****     }
 107:Core/Src/vcu.c **** 
 108:Core/Src/vcu.c ****     txMsg.StdId = 0x113;
 449              		.loc 1 108 5 is_stmt 1 view .LVU147
 450              		.loc 1 108 17 is_stmt 0 view .LVU148
 451 0014 0B48     		ldr	r0, .L27+4
 452 0016 40F21313 		movw	r3, #275
ARM GAS  /tmp/ccrGGCmS.s 			page 13


 453 001a 0360     		str	r3, [r0]
 109:Core/Src/vcu.c ****     txMsg.DLC = 1;
 454              		.loc 1 109 5 is_stmt 1 view .LVU149
 455              		.loc 1 109 15 is_stmt 0 view .LVU150
 456 001c 0123     		movs	r3, #1
 457 001e 0361     		str	r3, [r0, #16]
 110:Core/Src/vcu.c ****     canTx[0] = vcu.dio;
 458              		.loc 1 110 5 is_stmt 1 view .LVU151
 459              		.loc 1 110 19 is_stmt 0 view .LVU152
 460 0020 074B     		ldr	r3, .L27
 461 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 462              		.loc 1 110 14 view .LVU153
 463 0024 0849     		ldr	r1, .L27+8
 464 0026 0B70     		strb	r3, [r1]
 111:Core/Src/vcu.c ****     c1tx(&txMsg, canTx);
 465              		.loc 1 111 5 is_stmt 1 view .LVU154
 466 0028 FFF7FEFF 		bl	c1tx
 467              	.LVL24:
 112:Core/Src/vcu.c **** }
 468              		.loc 1 112 1 is_stmt 0 view .LVU155
 469 002c 08BD     		pop	{r3, pc}
 470              	.LVL25:
 471              	.L24:
 105:Core/Src/vcu.c ****     }
 472              		.loc 1 105 9 is_stmt 1 view .LVU156
 105:Core/Src/vcu.c ****     }
 473              		.loc 1 105 17 is_stmt 0 view .LVU157
 474 002e 0449     		ldr	r1, .L27
 475              	.LVL26:
 105:Core/Src/vcu.c ****     }
 476              		.loc 1 105 17 view .LVU158
 477 0030 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 105:Core/Src/vcu.c ****     }
 478              		.loc 1 105 25 view .LVU159
 479 0032 0122     		movs	r2, #1
 480 0034 02FA00F0 		lsl	r0, r2, r0
 481              	.LVL27:
 105:Core/Src/vcu.c ****     }
 482              		.loc 1 105 17 view .LVU160
 483 0038 23EA0000 		bic	r0, r3, r0
 484 003c 0870     		strb	r0, [r1]
 485 003e E9E7     		b	.L25
 486              	.L28:
 487              		.align	2
 488              	.L27:
 489 0040 00000000 		.word	vcu
 490 0044 00000000 		.word	txMsg
 491 0048 00000000 		.word	canTx
 492              		.cfi_endproc
 493              	.LFE69:
 495              		.section	.text.canIOsend,"ax",%progbits
 496              		.align	1
 497              		.global	canIOsend
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 501              		.fpu softvfp
ARM GAS  /tmp/ccrGGCmS.s 			page 14


 503              	canIOsend:
 504              	.LFB70:
 113:Core/Src/vcu.c **** 
 114:Core/Src/vcu.c **** void canIOsend(void)
 115:Core/Src/vcu.c **** {
 505              		.loc 1 115 1 is_stmt 1 view -0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509 0000 08B5     		push	{r3, lr}
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 3, -8
 512              		.cfi_offset 14, -4
 116:Core/Src/vcu.c ****     txMsg.StdId = 0x113;
 513              		.loc 1 116 5 view .LVU162
 514              		.loc 1 116 17 is_stmt 0 view .LVU163
 515 0002 0648     		ldr	r0, .L31
 516 0004 40F21313 		movw	r3, #275
 517 0008 0360     		str	r3, [r0]
 117:Core/Src/vcu.c ****     txMsg.DLC = 1;
 518              		.loc 1 117 5 is_stmt 1 view .LVU164
 519              		.loc 1 117 15 is_stmt 0 view .LVU165
 520 000a 0123     		movs	r3, #1
 521 000c 0361     		str	r3, [r0, #16]
 118:Core/Src/vcu.c ****     canTx[0] = vcu.dio;
 522              		.loc 1 118 5 is_stmt 1 view .LVU166
 523              		.loc 1 118 19 is_stmt 0 view .LVU167
 524 000e 044B     		ldr	r3, .L31+4
 525 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 526              		.loc 1 118 14 view .LVU168
 527 0012 0449     		ldr	r1, .L31+8
 528 0014 0B70     		strb	r3, [r1]
 119:Core/Src/vcu.c ****     c1tx(&txMsg, canTx);
 529              		.loc 1 119 5 is_stmt 1 view .LVU169
 530 0016 FFF7FEFF 		bl	c1tx
 531              	.LVL28:
 120:Core/Src/vcu.c **** }
 532              		.loc 1 120 1 is_stmt 0 view .LVU170
 533 001a 08BD     		pop	{r3, pc}
 534              	.L32:
 535              		.align	2
 536              	.L31:
 537 001c 00000000 		.word	txMsg
 538 0020 00000000 		.word	vcu
 539 0024 00000000 		.word	canTx
 540              		.cfi_endproc
 541              	.LFE70:
 543              		.section	.text.vcuInit,"ax",%progbits
 544              		.align	1
 545              		.global	vcuInit
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 549              		.fpu softvfp
 551              	vcuInit:
 552              	.LFB73:
 121:Core/Src/vcu.c **** 
ARM GAS  /tmp/ccrGGCmS.s 			page 15


 122:Core/Src/vcu.c **** /////////////////////////////////////////////////////////////////////////
 123:Core/Src/vcu.c **** void vehicleComms(void)
 124:Core/Src/vcu.c **** {
 125:Core/Src/vcu.c ****     txMsg.StdId = 0x313;
 126:Core/Src/vcu.c ****     txMsg.DLC = 8;
 127:Core/Src/vcu.c ****     canTx[0] = vcu.state;
 128:Core/Src/vcu.c ****     canTx[1] = getResetCause();
 129:Core/Src/vcu.c ****     canTx[2] = taskTime.Task10ms & 0xFF;
 130:Core/Src/vcu.c ****     canTx[3] = (taskTime.Task10ms >> 8) & 0xFF;
 131:Core/Src/vcu.c ****     canTx[4] = taskTime.TaskLoop & 0xFF;
 132:Core/Src/vcu.c ****     canTx[5] = (taskTime.TaskLoop >> 8) & 0xFF;
 133:Core/Src/vcu.c ****     canTx[6] = taskTime.Task250ms & 0xFF;
 134:Core/Src/vcu.c ****     canTx[7] = (taskTime.Task250ms >> 8) & 0xFF;
 135:Core/Src/vcu.c ****     c1tx(&txMsg, canTx);
 136:Core/Src/vcu.c **** 
 137:Core/Src/vcu.c ****     txMsg.StdId = 0x314;
 138:Core/Src/vcu.c ****     txMsg.DLC = 8;
 139:Core/Src/vcu.c ****     canTx[0] = taskTime.TaskLoop_max & 0xFF;
 140:Core/Src/vcu.c ****     canTx[1] = (taskTime.TaskLoop_max >> 8) & 0xFF;
 141:Core/Src/vcu.c ****     canTx[2] = taskTime.Task10ms_max & 0xFF;
 142:Core/Src/vcu.c ****     canTx[3] = (taskTime.Task10ms_max >> 8) & 0xFF;
 143:Core/Src/vcu.c ****     canTx[4] = taskTime.Task100ms_max & 0xFF;
 144:Core/Src/vcu.c ****     canTx[5] = (taskTime.Task100ms_max >> 8) & 0xFF;
 145:Core/Src/vcu.c ****     canTx[6] = taskTime.Task250ms_max & 0xFF;
 146:Core/Src/vcu.c ****     canTx[7] = (taskTime.Task250ms_max >> 8) & 0xFF;
 147:Core/Src/vcu.c ****     c1tx(&txMsg, canTx);
 148:Core/Src/vcu.c **** }
 149:Core/Src/vcu.c **** /////////////////////////////////////////////////////////////////////////
 150:Core/Src/vcu.c **** void vcuState(void)
 151:Core/Src/vcu.c **** {
 152:Core/Src/vcu.c ****     switch (vcu.state)
 153:Core/Src/vcu.c ****     {
 154:Core/Src/vcu.c ****     case off:
 155:Core/Src/vcu.c **** 
 156:Core/Src/vcu.c ****         if (vcu.key == ON && charger.chargerStatus == CHRG_ENABLED)
 157:Core/Src/vcu.c ****         {
 158:Core/Src/vcu.c ****             vcu.state = charge_keyOn;
 159:Core/Src/vcu.c ****         }
 160:Core/Src/vcu.c ****         if (vcu.key == OFF && charger.chargerStatus == CHRG_ENABLED)
 161:Core/Src/vcu.c ****         {
 162:Core/Src/vcu.c ****             vcu.state = charge_keyOff;
 163:Core/Src/vcu.c ****         }
 164:Core/Src/vcu.c ****         if (vcu.key == ON && charger.chargerStatus == OFF)
 165:Core/Src/vcu.c ****         {
 166:Core/Src/vcu.c ****             vcu.state = on;
 167:Core/Src/vcu.c ****         }
 168:Core/Src/vcu.c ****         break;
 169:Core/Src/vcu.c **** 
 170:Core/Src/vcu.c ****     case on:
 171:Core/Src/vcu.c ****         canSet(IDLE_MODE, 1, 32);
 172:Core/Src/vcu.c ****         if (ldu.mode == 1)
 173:Core/Src/vcu.c ****         {
 174:Core/Src/vcu.c ****             vcu.state = idle;
 175:Core/Src/vcu.c ****         }
 176:Core/Src/vcu.c **** 
 177:Core/Src/vcu.c ****         if (vcu.key == OFF)
 178:Core/Src/vcu.c ****         {
ARM GAS  /tmp/ccrGGCmS.s 			page 16


 179:Core/Src/vcu.c ****             vcu.state = off;
 180:Core/Src/vcu.c ****         }
 181:Core/Src/vcu.c ****         if (charger.chargerStatus == 5)
 182:Core/Src/vcu.c ****         {
 183:Core/Src/vcu.c ****             vcu.state = charge_keyOn;
 184:Core/Src/vcu.c ****         }
 185:Core/Src/vcu.c ****         break;
 186:Core/Src/vcu.c **** 
 187:Core/Src/vcu.c ****     case idle:
 188:Core/Src/vcu.c ****         canSet(IDLE_MODE, 1, 32);
 189:Core/Src/vcu.c ****         if (ldu.dir != 2)
 190:Core/Src/vcu.c ****         {
 191:Core/Src/vcu.c ****             vcu.state = run;
 192:Core/Src/vcu.c ****         }
 193:Core/Src/vcu.c **** 
 194:Core/Src/vcu.c ****         if (vcu.key == OFF)
 195:Core/Src/vcu.c ****         {
 196:Core/Src/vcu.c ****             vcu.state = off;
 197:Core/Src/vcu.c ****         }
 198:Core/Src/vcu.c ****         break;
 199:Core/Src/vcu.c **** 
 200:Core/Src/vcu.c ****     case run:
 201:Core/Src/vcu.c ****         canSet(IDLE_MODE, 0, 32);
 202:Core/Src/vcu.c ****         canSet(FWEAK, 280, 32);
 203:Core/Src/vcu.c ****         canSet(FWEAKSTRT, 400, 32);
 204:Core/Src/vcu.c ****         canSet(FSLIP_MIN, 76, 1);  // 2.3*32
 205:Core/Src/vcu.c ****         canSet(FSLIP_MAX, 101, 1); // 3.15*32
 206:Core/Src/vcu.c ****         canSet(THROTRAMP, 15, 32);
 207:Core/Src/vcu.c ****         if (vcu.key == OFF)
 208:Core/Src/vcu.c ****         {
 209:Core/Src/vcu.c ****             vcu.state = off;
 210:Core/Src/vcu.c ****         }
 211:Core/Src/vcu.c **** 
 212:Core/Src/vcu.c ****         if (vcu.launchFlag)
 213:Core/Src/vcu.c ****         {
 214:Core/Src/vcu.c ****             vcu.state = launchMode;
 215:Core/Src/vcu.c ****         }
 216:Core/Src/vcu.c **** 
 217:Core/Src/vcu.c ****         if (vcu.burnFlag)
 218:Core/Src/vcu.c ****         {
 219:Core/Src/vcu.c ****             vcu.state = burnout;
 220:Core/Src/vcu.c ****         }
 221:Core/Src/vcu.c ****         break;
 222:Core/Src/vcu.c **** 
 223:Core/Src/vcu.c ****     case launchMode:
 224:Core/Src/vcu.c ****         canSet(FWEAK, 220, 32);
 225:Core/Src/vcu.c ****         canSet(FSLIP_MIN, 61, 1); // 1.9*32
 226:Core/Src/vcu.c ****         canSet(FSLIP_MAX, 77, 1); // 2.4*32
 227:Core/Src/vcu.c ****         if (vcu.launchFlag == 0)
 228:Core/Src/vcu.c ****         {
 229:Core/Src/vcu.c ****             vcu.state = run;
 230:Core/Src/vcu.c ****         }
 231:Core/Src/vcu.c ****         break;
 232:Core/Src/vcu.c **** 
 233:Core/Src/vcu.c ****     case burnout:
 234:Core/Src/vcu.c ****         canSet(FWEAK, 220, 32);
 235:Core/Src/vcu.c ****         canSet(FWEAKSTRT, 238, 32);
ARM GAS  /tmp/ccrGGCmS.s 			page 17


 236:Core/Src/vcu.c ****         canSet(FSLIP_MIN, 61, 1); // 1.9*32
 237:Core/Src/vcu.c ****         canSet(FSLIP_MAX, 77, 1); // 2.4*32
 238:Core/Src/vcu.c ****         int throttleramp;
 239:Core/Src/vcu.c ****         if (ldu.rpm < 2000)
 240:Core/Src/vcu.c ****         {
 241:Core/Src/vcu.c ****             throttleramp = 2;
 242:Core/Src/vcu.c ****         }
 243:Core/Src/vcu.c ****         else
 244:Core/Src/vcu.c ****         {
 245:Core/Src/vcu.c ****             throttleramp = MAP(ldu.rpm, 2000, 16000, 2, 30);
 246:Core/Src/vcu.c ****         }
 247:Core/Src/vcu.c ****         canSet(THROTRAMP, throttleramp, 32); // canSet(THROTRAMP, 5, 32);
 248:Core/Src/vcu.c ****         if (vcu.burnFlag == OFF)
 249:Core/Src/vcu.c ****         {
 250:Core/Src/vcu.c ****             vcu.state = run;
 251:Core/Src/vcu.c ****         }
 252:Core/Src/vcu.c ****         break;
 253:Core/Src/vcu.c **** 
 254:Core/Src/vcu.c ****     case charge_keyOn:
 255:Core/Src/vcu.c ****         if (vcu.key == OFF)
 256:Core/Src/vcu.c ****         {
 257:Core/Src/vcu.c ****             vcu.state = off;
 258:Core/Src/vcu.c ****         }
 259:Core/Src/vcu.c ****         break;
 260:Core/Src/vcu.c **** 
 261:Core/Src/vcu.c ****     default:
 262:Core/Src/vcu.c ****         break;
 263:Core/Src/vcu.c ****     }
 264:Core/Src/vcu.c **** }
 265:Core/Src/vcu.c **** 
 266:Core/Src/vcu.c **** void vcuInit(void)
 267:Core/Src/vcu.c **** {
 553              		.loc 1 267 1 is_stmt 1 view -0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              		@ link register save eliminated.
 268:Core/Src/vcu.c ****     vcu.state = off;
 558              		.loc 1 268 5 view .LVU172
 559              		.loc 1 268 15 is_stmt 0 view .LVU173
 560 0000 0D4A     		ldr	r2, .L34
 561 0002 0023     		movs	r3, #0
 562 0004 1371     		strb	r3, [r2, #4]
 269:Core/Src/vcu.c ****     vcu.dio = 0;
 563              		.loc 1 269 5 is_stmt 1 view .LVU174
 564              		.loc 1 269 13 is_stmt 0 view .LVU175
 565 0006 1370     		strb	r3, [r2]
 270:Core/Src/vcu.c ****     vcu.key = 0;
 566              		.loc 1 270 5 is_stmt 1 view .LVU176
 567              		.loc 1 270 13 is_stmt 0 view .LVU177
 568 0008 5370     		strb	r3, [r2, #1]
 271:Core/Src/vcu.c ****     vcu.launchFlag = 0;
 569              		.loc 1 271 5 is_stmt 1 view .LVU178
 570              		.loc 1 271 20 is_stmt 0 view .LVU179
 571 000a 5371     		strb	r3, [r2, #5]
 272:Core/Src/vcu.c ****     vcu.burnFlag = 0;
 572              		.loc 1 272 5 is_stmt 1 view .LVU180
ARM GAS  /tmp/ccrGGCmS.s 			page 18


 573              		.loc 1 272 18 is_stmt 0 view .LVU181
 574 000c 9371     		strb	r3, [r2, #6]
 273:Core/Src/vcu.c ****     iboost.pedal = 700;
 575              		.loc 1 273 5 is_stmt 1 view .LVU182
 576              		.loc 1 273 18 is_stmt 0 view .LVU183
 577 000e 0B4A     		ldr	r2, .L34+4
 578 0010 4FF42F71 		mov	r1, #700
 579 0014 1180     		strh	r1, [r2]	@ movhi
 274:Core/Src/vcu.c ****     ADC_data[0] = 4095; // LVREAD PIN
 580              		.loc 1 274 5 is_stmt 1 view .LVU184
 581              		.loc 1 274 17 is_stmt 0 view .LVU185
 582 0016 0A4A     		ldr	r2, .L34+8
 583 0018 40F6FF71 		movw	r1, #4095
 584 001c 1160     		str	r1, [r2]
 275:Core/Src/vcu.c ****     ADC_data[1] = 0;
 585              		.loc 1 275 5 is_stmt 1 view .LVU186
 586              		.loc 1 275 17 is_stmt 0 view .LVU187
 587 001e 5360     		str	r3, [r2, #4]
 276:Core/Src/vcu.c ****     ADC_data[2] = 0;
 588              		.loc 1 276 5 is_stmt 1 view .LVU188
 589              		.loc 1 276 17 is_stmt 0 view .LVU189
 590 0020 9360     		str	r3, [r2, #8]
 277:Core/Src/vcu.c ****     taskTime.TaskLoop = 0;
 591              		.loc 1 277 5 is_stmt 1 view .LVU190
 592              		.loc 1 277 23 is_stmt 0 view .LVU191
 593 0022 084A     		ldr	r2, .L34+12
 594 0024 1380     		strh	r3, [r2]	@ movhi
 278:Core/Src/vcu.c ****     taskTime.TaskLoop_max = 0;
 595              		.loc 1 278 5 is_stmt 1 view .LVU192
 596              		.loc 1 278 27 is_stmt 0 view .LVU193
 597 0026 5380     		strh	r3, [r2, #2]	@ movhi
 279:Core/Src/vcu.c ****     taskTime.Task10ms = 0;
 598              		.loc 1 279 5 is_stmt 1 view .LVU194
 599              		.loc 1 279 23 is_stmt 0 view .LVU195
 600 0028 1381     		strh	r3, [r2, #8]	@ movhi
 280:Core/Src/vcu.c ****     taskTime.Task10ms_max = 0;
 601              		.loc 1 280 5 is_stmt 1 view .LVU196
 602              		.loc 1 280 27 is_stmt 0 view .LVU197
 603 002a 5381     		strh	r3, [r2, #10]	@ movhi
 281:Core/Src/vcu.c ****     taskTime.Task100ms = 0;
 604              		.loc 1 281 5 is_stmt 1 view .LVU198
 605              		.loc 1 281 24 is_stmt 0 view .LVU199
 606 002c 1382     		strh	r3, [r2, #16]	@ movhi
 282:Core/Src/vcu.c ****     taskTime.Task100ms_max = 0;
 607              		.loc 1 282 5 is_stmt 1 view .LVU200
 608              		.loc 1 282 28 is_stmt 0 view .LVU201
 609 002e 5382     		strh	r3, [r2, #18]	@ movhi
 283:Core/Src/vcu.c ****     taskTime.Task250ms = 0;
 610              		.loc 1 283 5 is_stmt 1 view .LVU202
 611              		.loc 1 283 24 is_stmt 0 view .LVU203
 612 0030 1383     		strh	r3, [r2, #24]	@ movhi
 284:Core/Src/vcu.c ****     taskTime.Task250ms_max = 0;
 613              		.loc 1 284 5 is_stmt 1 view .LVU204
 614              		.loc 1 284 28 is_stmt 0 view .LVU205
 615 0032 5383     		strh	r3, [r2, #26]	@ movhi
 285:Core/Src/vcu.c **** }
 616              		.loc 1 285 1 view .LVU206
ARM GAS  /tmp/ccrGGCmS.s 			page 19


 617 0034 7047     		bx	lr
 618              	.L35:
 619 0036 00BF     		.align	2
 620              	.L34:
 621 0038 00000000 		.word	vcu
 622 003c 00000000 		.word	iboost
 623 0040 00000000 		.word	ADC_data
 624 0044 00000000 		.word	taskTime
 625              		.cfi_endproc
 626              	.LFE73:
 628              		.section	.text.ioHandler,"ax",%progbits
 629              		.align	1
 630              		.global	ioHandler
 631              		.syntax unified
 632              		.thumb
 633              		.thumb_func
 634              		.fpu softvfp
 636              	ioHandler:
 637              	.LFB74:
 286:Core/Src/vcu.c **** 
 287:Core/Src/vcu.c **** void ioHandler(void)
 288:Core/Src/vcu.c **** {
 638              		.loc 1 288 1 is_stmt 1 view -0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642 0000 08B5     		push	{r3, lr}
 643              		.cfi_def_cfa_offset 8
 644              		.cfi_offset 3, -8
 645              		.cfi_offset 14, -4
 289:Core/Src/vcu.c ****     ////////////////  Key Input ///////////////////////////////////////
 290:Core/Src/vcu.c ****     if (HAL_GPIO_ReadPin(SW12_GPIO_Port, SW12_Pin))
 646              		.loc 1 290 5 view .LVU208
 647              		.loc 1 290 9 is_stmt 0 view .LVU209
 648 0002 1021     		movs	r1, #16
 649 0004 2548     		ldr	r0, .L48
 650 0006 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 651              	.LVL29:
 652              		.loc 1 290 8 view .LVU210
 653 000a 20B3     		cbz	r0, .L37
 291:Core/Src/vcu.c ****     {
 292:Core/Src/vcu.c ****         vcu.key = ON;
 654              		.loc 1 292 9 is_stmt 1 view .LVU211
 655              		.loc 1 292 17 is_stmt 0 view .LVU212
 656 000c 244B     		ldr	r3, .L48+4
 657 000e 0122     		movs	r2, #1
 658 0010 5A70     		strb	r2, [r3, #1]
 659              	.L38:
 293:Core/Src/vcu.c ****     }
 294:Core/Src/vcu.c ****     else
 295:Core/Src/vcu.c ****     {
 296:Core/Src/vcu.c ****         vcu.key = OFF;
 297:Core/Src/vcu.c ****         vcu.dio = 0x00;
 298:Core/Src/vcu.c ****         ldu.mode = 0;
 299:Core/Src/vcu.c ****         if (charger.chargerStatus != CHRG_ENABLED)
 300:Core/Src/vcu.c ****         {
 301:Core/Src/vcu.c ****             vcu.state = off;
ARM GAS  /tmp/ccrGGCmS.s 			page 20


 302:Core/Src/vcu.c ****         }
 303:Core/Src/vcu.c ****     }
 304:Core/Src/vcu.c **** 
 305:Core/Src/vcu.c ****     //////////////////  Heater Switching ///////////////////////////////
 306:Core/Src/vcu.c ****     int heatRequest = HAL_GPIO_ReadPin(HEAT_REQ_GPIO_Port, HEAT_REQ_Pin);
 660              		.loc 1 306 5 is_stmt 1 view .LVU213
 661              		.loc 1 306 23 is_stmt 0 view .LVU214
 662 0012 2021     		movs	r1, #32
 663 0014 2148     		ldr	r0, .L48
 664 0016 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 665              	.LVL30:
 307:Core/Src/vcu.c **** 
 308:Core/Src/vcu.c ****     switch (vcu.state)
 666              		.loc 1 308 5 is_stmt 1 view .LVU215
 667              		.loc 1 308 16 is_stmt 0 view .LVU216
 668 001a 214B     		ldr	r3, .L48+4
 669 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 670              		.loc 1 308 5 view .LVU217
 671 001e 03F0FF02 		and	r2, r3, #255
 672 0022 33B3     		cbz	r3, .L39
 673 0024 022A     		cmp	r2, #2
 674 0026 24D0     		beq	.L39
 309:Core/Src/vcu.c ****     {
 310:Core/Src/vcu.c ****     case off:
 311:Core/Src/vcu.c ****     case charge_keyOff:
 312:Core/Src/vcu.c ****         HAL_GPIO_WritePin(HEAT_OUT_GPIO_Port, HEAT_OUT_Pin, OFF);
 313:Core/Src/vcu.c ****         break;
 314:Core/Src/vcu.c **** 
 315:Core/Src/vcu.c ****     default:
 316:Core/Src/vcu.c ****         if (heatRequest)
 675              		.loc 1 316 9 is_stmt 1 view .LVU218
 676              		.loc 1 316 12 is_stmt 0 view .LVU219
 677 0028 50B3     		cbz	r0, .L42
 317:Core/Src/vcu.c ****         {
 318:Core/Src/vcu.c ****             HAL_GPIO_WritePin(HEAT_OUT_GPIO_Port, HEAT_OUT_Pin, ON);
 678              		.loc 1 318 13 is_stmt 1 view .LVU220
 679 002a 0122     		movs	r2, #1
 680 002c 4FF40041 		mov	r1, #32768
 681 0030 1A48     		ldr	r0, .L48
 682              	.LVL31:
 683              		.loc 1 318 13 is_stmt 0 view .LVU221
 684 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 685              	.LVL32:
 686              	.L41:
 319:Core/Src/vcu.c ****         }
 320:Core/Src/vcu.c ****         else
 321:Core/Src/vcu.c ****         {
 322:Core/Src/vcu.c ****             HAL_GPIO_WritePin(HEAT_OUT_GPIO_Port, HEAT_OUT_Pin, OFF);
 323:Core/Src/vcu.c ****         }
 324:Core/Src/vcu.c ****         break;
 325:Core/Src/vcu.c ****         break;
 687              		.loc 1 325 9 is_stmt 1 view .LVU222
 326:Core/Src/vcu.c ****     }
 327:Core/Src/vcu.c **** 
 328:Core/Src/vcu.c ****     //////////////////  Power Steering  ///////////////////////////////
 329:Core/Src/vcu.c ****     switch (vcu.state)
 688              		.loc 1 329 5 view .LVU223
ARM GAS  /tmp/ccrGGCmS.s 			page 21


 689              		.loc 1 329 16 is_stmt 0 view .LVU224
 690 0036 1A4B     		ldr	r3, .L48+4
 691 0038 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 692              		.loc 1 329 5 view .LVU225
 693 003a 02F0FF03 		and	r3, r2, #255
 694 003e 32B3     		cbz	r2, .L43
 695 0040 043B     		subs	r3, r3, #4
 696 0042 DBB2     		uxtb	r3, r3
 697 0044 012B     		cmp	r3, #1
 698 0046 28D8     		bhi	.L36
 330:Core/Src/vcu.c ****     {
 331:Core/Src/vcu.c ****     case off:
 332:Core/Src/vcu.c ****         HAL_GPIO_WritePin(PS_INIT_GPIO_Port, PS_INIT_Pin, OFF);
 333:Core/Src/vcu.c ****         break;
 334:Core/Src/vcu.c ****     case run:
 335:Core/Src/vcu.c ****     case idle:
 336:Core/Src/vcu.c ****         HAL_GPIO_WritePin(PS_INIT_GPIO_Port, PS_INIT_Pin, ON);
 699              		.loc 1 336 9 is_stmt 1 view .LVU226
 700 0048 0122     		movs	r2, #1
 701 004a 4FF48041 		mov	r1, #16384
 702 004e 1348     		ldr	r0, .L48
 703 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 704              	.LVL33:
 337:Core/Src/vcu.c ****         break;
 705              		.loc 1 337 9 view .LVU227
 338:Core/Src/vcu.c **** 
 339:Core/Src/vcu.c ****     default:
 340:Core/Src/vcu.c ****         break;
 341:Core/Src/vcu.c ****     }
 342:Core/Src/vcu.c **** }
 706              		.loc 1 342 1 is_stmt 0 view .LVU228
 707 0054 21E0     		b	.L36
 708              	.L37:
 296:Core/Src/vcu.c ****         vcu.dio = 0x00;
 709              		.loc 1 296 9 is_stmt 1 view .LVU229
 296:Core/Src/vcu.c ****         vcu.dio = 0x00;
 710              		.loc 1 296 17 is_stmt 0 view .LVU230
 711 0056 124A     		ldr	r2, .L48+4
 712 0058 0023     		movs	r3, #0
 713 005a 5370     		strb	r3, [r2, #1]
 297:Core/Src/vcu.c ****         ldu.mode = 0;
 714              		.loc 1 297 9 is_stmt 1 view .LVU231
 297:Core/Src/vcu.c ****         ldu.mode = 0;
 715              		.loc 1 297 17 is_stmt 0 view .LVU232
 716 005c 1370     		strb	r3, [r2]
 298:Core/Src/vcu.c ****         if (charger.chargerStatus != CHRG_ENABLED)
 717              		.loc 1 298 9 is_stmt 1 view .LVU233
 298:Core/Src/vcu.c ****         if (charger.chargerStatus != CHRG_ENABLED)
 718              		.loc 1 298 18 is_stmt 0 view .LVU234
 719 005e 114A     		ldr	r2, .L48+8
 720 0060 5372     		strb	r3, [r2, #9]
 299:Core/Src/vcu.c ****         {
 721              		.loc 1 299 9 is_stmt 1 view .LVU235
 299:Core/Src/vcu.c ****         {
 722              		.loc 1 299 20 is_stmt 0 view .LVU236
 723 0062 114B     		ldr	r3, .L48+12
 724 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
ARM GAS  /tmp/ccrGGCmS.s 			page 22


 299:Core/Src/vcu.c ****         {
 725              		.loc 1 299 12 view .LVU237
 726 0066 052B     		cmp	r3, #5
 727 0068 D3D0     		beq	.L38
 301:Core/Src/vcu.c ****         }
 728              		.loc 1 301 13 is_stmt 1 view .LVU238
 301:Core/Src/vcu.c ****         }
 729              		.loc 1 301 23 is_stmt 0 view .LVU239
 730 006a 0D4B     		ldr	r3, .L48+4
 731 006c 0022     		movs	r2, #0
 732 006e 1A71     		strb	r2, [r3, #4]
 733 0070 CFE7     		b	.L38
 734              	.LVL34:
 735              	.L39:
 312:Core/Src/vcu.c ****         break;
 736              		.loc 1 312 9 is_stmt 1 view .LVU240
 737 0072 0022     		movs	r2, #0
 738 0074 4FF40041 		mov	r1, #32768
 739 0078 0848     		ldr	r0, .L48
 740              	.LVL35:
 312:Core/Src/vcu.c ****         break;
 741              		.loc 1 312 9 is_stmt 0 view .LVU241
 742 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 743              	.LVL36:
 313:Core/Src/vcu.c **** 
 744              		.loc 1 313 9 is_stmt 1 view .LVU242
 745 007e DAE7     		b	.L41
 746              	.LVL37:
 747              	.L42:
 322:Core/Src/vcu.c ****         }
 748              		.loc 1 322 13 view .LVU243
 749 0080 0022     		movs	r2, #0
 750 0082 4FF40041 		mov	r1, #32768
 751 0086 0548     		ldr	r0, .L48
 752              	.LVL38:
 322:Core/Src/vcu.c ****         }
 753              		.loc 1 322 13 is_stmt 0 view .LVU244
 754 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 755              	.LVL39:
 756 008c D3E7     		b	.L41
 757              	.L43:
 332:Core/Src/vcu.c ****         break;
 758              		.loc 1 332 9 is_stmt 1 view .LVU245
 759 008e 0022     		movs	r2, #0
 760 0090 4FF48041 		mov	r1, #16384
 761 0094 0148     		ldr	r0, .L48
 762 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 763              	.LVL40:
 333:Core/Src/vcu.c ****     case run:
 764              		.loc 1 333 9 view .LVU246
 765              	.L36:
 766              		.loc 1 342 1 is_stmt 0 view .LVU247
 767 009a 08BD     		pop	{r3, pc}
 768              	.L49:
 769              		.align	2
 770              	.L48:
 771 009c 000C0140 		.word	1073810432
ARM GAS  /tmp/ccrGGCmS.s 			page 23


 772 00a0 00000000 		.word	vcu
 773 00a4 00000000 		.word	ldu
 774 00a8 00000000 		.word	charger
 775              		.cfi_endproc
 776              	.LFE74:
 778              		.section	.text.canSet,"ax",%progbits
 779              		.align	1
 780              		.global	canSet
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu softvfp
 786              	canSet:
 787              	.LVL41:
 788              	.LFB76:
 343:Core/Src/vcu.c **** 
 344:Core/Src/vcu.c **** void regenHandler(void)
 345:Core/Src/vcu.c **** {
 346:Core/Src/vcu.c **** 
 347:Core/Src/vcu.c ****     int baseRegen = 5; // base throttle off regen value
 348:Core/Src/vcu.c ****     int maxRegen = 94; // maximum full brake pressure regen value
 349:Core/Src/vcu.c ****     int brkNomPedal;
 350:Core/Src/vcu.c ****     int regenRamp;
 351:Core/Src/vcu.c **** 
 352:Core/Src/vcu.c ****     if (iboost.pedal > 650)
 353:Core/Src/vcu.c ****     {
 354:Core/Src/vcu.c ****         brkNomPedal = -(maxRegen);
 355:Core/Src/vcu.c ****     }
 356:Core/Src/vcu.c ****     else
 357:Core/Src/vcu.c ****     {
 358:Core/Src/vcu.c ****         brkNomPedal = MAP(iboost.pedal, 1, 650, baseRegen, -(maxRegen));
 359:Core/Src/vcu.c ****         ; // maps brake pedal regen between base and max
 360:Core/Src/vcu.c ****     }
 361:Core/Src/vcu.c ****     canSet(BRAKE_NOM_PEDAL, brkNomPedal, 32);
 362:Core/Src/vcu.c **** 
 363:Core/Src/vcu.c ****     // regenramp
 364:Core/Src/vcu.c ****     if (ldu.rpm <= 10000)
 365:Core/Src/vcu.c ****     {
 366:Core/Src/vcu.c ****         regenRamp = MAP(ldu.rpm, 0, 10000, 6, 24); // mapped values alredy 32x for gain  was 2, 12
 367:Core/Src/vcu.c ****     }
 368:Core/Src/vcu.c ****     else
 369:Core/Src/vcu.c ****     {
 370:Core/Src/vcu.c ****         regenRamp = 24; // value already 32x for gain
 371:Core/Src/vcu.c ****         canSet(BRAKE_PEDAL_RAMP, regenRamp, 1);
 372:Core/Src/vcu.c ****     }
 373:Core/Src/vcu.c **** }
 374:Core/Src/vcu.c **** 
 375:Core/Src/vcu.c **** void canSet(uint8_t index, uint32_t value, uint8_t gain) // LDU param Index, unscaled value, value 
 376:Core/Src/vcu.c **** {
 789              		.loc 1 376 1 is_stmt 1 view -0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		.loc 1 376 1 is_stmt 0 view .LVU249
 794 0000 10B5     		push	{r4, lr}
 795              		.cfi_def_cfa_offset 8
 796              		.cfi_offset 4, -8
ARM GAS  /tmp/ccrGGCmS.s 			page 24


 797              		.cfi_offset 14, -4
 377:Core/Src/vcu.c ****     int val = value * gain;
 798              		.loc 1 377 5 is_stmt 1 view .LVU250
 799              		.loc 1 377 21 is_stmt 0 view .LVU251
 800 0002 01FB02F2 		mul	r2, r1, r2
 801              	.LVL42:
 378:Core/Src/vcu.c **** 
 379:Core/Src/vcu.c ****     txMsg.StdId = 0x601; // set parameter ID
 802              		.loc 1 379 5 is_stmt 1 view .LVU252
 803              		.loc 1 379 17 is_stmt 0 view .LVU253
 804 0006 0C4B     		ldr	r3, .L52
 805 0008 40F20161 		movw	r1, #1537
 806              	.LVL43:
 807              		.loc 1 379 17 view .LVU254
 808 000c 1960     		str	r1, [r3]
 380:Core/Src/vcu.c ****     txMsg.DLC = 8;
 809              		.loc 1 380 5 is_stmt 1 view .LVU255
 810              		.loc 1 380 15 is_stmt 0 view .LVU256
 811 000e 0821     		movs	r1, #8
 812 0010 1961     		str	r1, [r3, #16]
 381:Core/Src/vcu.c ****     canTx[0] = 0x40;
 813              		.loc 1 381 5 is_stmt 1 view .LVU257
 814              		.loc 1 381 14 is_stmt 0 view .LVU258
 815 0012 0A49     		ldr	r1, .L52+4
 816 0014 4024     		movs	r4, #64
 817 0016 0C70     		strb	r4, [r1]
 382:Core/Src/vcu.c ****     canTx[1] = 0x00;
 818              		.loc 1 382 5 is_stmt 1 view .LVU259
 819              		.loc 1 382 14 is_stmt 0 view .LVU260
 820 0018 0024     		movs	r4, #0
 821 001a 4C70     		strb	r4, [r1, #1]
 383:Core/Src/vcu.c ****     canTx[2] = 0x20;
 822              		.loc 1 383 5 is_stmt 1 view .LVU261
 823              		.loc 1 383 14 is_stmt 0 view .LVU262
 824 001c 2024     		movs	r4, #32
 825 001e 8C70     		strb	r4, [r1, #2]
 384:Core/Src/vcu.c ****     canTx[3] = index;
 826              		.loc 1 384 5 is_stmt 1 view .LVU263
 827              		.loc 1 384 14 is_stmt 0 view .LVU264
 828 0020 C870     		strb	r0, [r1, #3]
 385:Core/Src/vcu.c ****     canTx[4] = val & 0xFF;
 829              		.loc 1 385 5 is_stmt 1 view .LVU265
 830              		.loc 1 385 14 is_stmt 0 view .LVU266
 831 0022 0A71     		strb	r2, [r1, #4]
 386:Core/Src/vcu.c ****     canTx[5] = (val >> 8) & 0xFF;
 832              		.loc 1 386 5 is_stmt 1 view .LVU267
 833              		.loc 1 386 21 is_stmt 0 view .LVU268
 834 0024 1012     		asrs	r0, r2, #8
 835              	.LVL44:
 836              		.loc 1 386 14 view .LVU269
 837 0026 4871     		strb	r0, [r1, #5]
 387:Core/Src/vcu.c ****     canTx[6] = (val >> 16) & 0xFF;
 838              		.loc 1 387 5 is_stmt 1 view .LVU270
 839              		.loc 1 387 21 is_stmt 0 view .LVU271
 840 0028 1014     		asrs	r0, r2, #16
 841              		.loc 1 387 14 view .LVU272
 842 002a 8871     		strb	r0, [r1, #6]
ARM GAS  /tmp/ccrGGCmS.s 			page 25


 388:Core/Src/vcu.c ****     canTx[7] = (val >> 24) & 0xFF;
 843              		.loc 1 388 5 is_stmt 1 view .LVU273
 844              		.loc 1 388 28 is_stmt 0 view .LVU274
 845 002c 120E     		lsrs	r2, r2, #24
 846              	.LVL45:
 847              		.loc 1 388 14 view .LVU275
 848 002e CA71     		strb	r2, [r1, #7]
 389:Core/Src/vcu.c ****     c1tx(&txMsg, canTx);
 849              		.loc 1 389 5 is_stmt 1 view .LVU276
 850 0030 1846     		mov	r0, r3
 851 0032 FFF7FEFF 		bl	c1tx
 852              	.LVL46:
 390:Core/Src/vcu.c **** }
 853              		.loc 1 390 1 is_stmt 0 view .LVU277
 854 0036 10BD     		pop	{r4, pc}
 855              	.L53:
 856              		.align	2
 857              	.L52:
 858 0038 00000000 		.word	txMsg
 859 003c 00000000 		.word	canTx
 860              		.cfi_endproc
 861              	.LFE76:
 863              		.section	.text.vcuState,"ax",%progbits
 864              		.align	1
 865              		.global	vcuState
 866              		.syntax unified
 867              		.thumb
 868              		.thumb_func
 869              		.fpu softvfp
 871              	vcuState:
 872              	.LFB72:
 151:Core/Src/vcu.c ****     switch (vcu.state)
 873              		.loc 1 151 1 is_stmt 1 view -0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 0
 876              		@ frame_needed = 0, uses_anonymous_args = 0
 877 0000 08B5     		push	{r3, lr}
 878              		.cfi_def_cfa_offset 8
 879              		.cfi_offset 3, -8
 880              		.cfi_offset 14, -4
 152:Core/Src/vcu.c ****     {
 881              		.loc 1 152 5 view .LVU279
 152:Core/Src/vcu.c ****     {
 882              		.loc 1 152 16 is_stmt 0 view .LVU280
 883 0002 784B     		ldr	r3, .L78
 884 0004 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 885 0006 DBB2     		uxtb	r3, r3
 886 0008 072B     		cmp	r3, #7
 887 000a 1AD8     		bhi	.L54
 888 000c DFE813F0 		tbh	[pc, r3, lsl #1]
 889              	.L57:
 890 0010 0800     		.2byte	(.L63-.L57)/2
 891 0012 2E00     		.2byte	(.L62-.L57)/2
 892 0014 1900     		.2byte	(.L54-.L57)/2
 893 0016 E000     		.2byte	(.L61-.L57)/2
 894 0018 4A00     		.2byte	(.L60-.L57)/2
 895 001a 5F00     		.2byte	(.L59-.L57)/2
ARM GAS  /tmp/ccrGGCmS.s 			page 26


 896 001c 9300     		.2byte	(.L58-.L57)/2
 897 001e AB00     		.2byte	(.L56-.L57)/2
 898              		.p2align 1
 899              	.L63:
 900              	.LBB2:
 156:Core/Src/vcu.c ****         {
 901              		.loc 1 156 9 is_stmt 1 view .LVU281
 156:Core/Src/vcu.c ****         {
 902              		.loc 1 156 16 is_stmt 0 view .LVU282
 903 0020 704B     		ldr	r3, .L78
 904 0022 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 905 0024 DBB2     		uxtb	r3, r3
 156:Core/Src/vcu.c ****         {
 906              		.loc 1 156 12 view .LVU283
 907 0026 012B     		cmp	r3, #1
 908 0028 0CD0     		beq	.L74
 909              	.L64:
 160:Core/Src/vcu.c ****         {
 910              		.loc 1 160 9 is_stmt 1 view .LVU284
 160:Core/Src/vcu.c ****         {
 911              		.loc 1 160 16 is_stmt 0 view .LVU285
 912 002a 6E4B     		ldr	r3, .L78
 913 002c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 160:Core/Src/vcu.c ****         {
 914              		.loc 1 160 12 view .LVU286
 915 002e 1BB9     		cbnz	r3, .L65
 160:Core/Src/vcu.c ****         {
 916              		.loc 1 160 38 discriminator 1 view .LVU287
 917 0030 6D4B     		ldr	r3, .L78+4
 918 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 160:Core/Src/vcu.c ****         {
 919              		.loc 1 160 28 discriminator 1 view .LVU288
 920 0034 052B     		cmp	r3, #5
 921 0036 0DD0     		beq	.L75
 922              	.L65:
 164:Core/Src/vcu.c ****         {
 923              		.loc 1 164 9 is_stmt 1 view .LVU289
 164:Core/Src/vcu.c ****         {
 924              		.loc 1 164 16 is_stmt 0 view .LVU290
 925 0038 6A4B     		ldr	r3, .L78
 926 003a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 927 003c DBB2     		uxtb	r3, r3
 164:Core/Src/vcu.c ****         {
 928              		.loc 1 164 12 view .LVU291
 929 003e 012B     		cmp	r3, #1
 930 0040 0CD0     		beq	.L76
 931              	.L54:
 932              	.LBE2:
 264:Core/Src/vcu.c **** 
 933              		.loc 1 264 1 view .LVU292
 934 0042 08BD     		pop	{r3, pc}
 935              	.L74:
 936              	.LBB3:
 156:Core/Src/vcu.c ****         {
 937              		.loc 1 156 37 discriminator 1 view .LVU293
 938 0044 684B     		ldr	r3, .L78+4
 939 0046 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
ARM GAS  /tmp/ccrGGCmS.s 			page 27


 156:Core/Src/vcu.c ****         {
 940              		.loc 1 156 27 discriminator 1 view .LVU294
 941 0048 052B     		cmp	r3, #5
 942 004a EED1     		bne	.L64
 158:Core/Src/vcu.c ****         }
 943              		.loc 1 158 13 is_stmt 1 view .LVU295
 158:Core/Src/vcu.c ****         }
 944              		.loc 1 158 23 is_stmt 0 view .LVU296
 945 004c 654B     		ldr	r3, .L78
 946 004e 0322     		movs	r2, #3
 947 0050 1A71     		strb	r2, [r3, #4]
 948 0052 EAE7     		b	.L64
 949              	.L75:
 162:Core/Src/vcu.c ****         }
 950              		.loc 1 162 13 is_stmt 1 view .LVU297
 162:Core/Src/vcu.c ****         }
 951              		.loc 1 162 23 is_stmt 0 view .LVU298
 952 0054 634B     		ldr	r3, .L78
 953 0056 0222     		movs	r2, #2
 954 0058 1A71     		strb	r2, [r3, #4]
 955 005a EDE7     		b	.L65
 956              	.L76:
 164:Core/Src/vcu.c ****         {
 957              		.loc 1 164 37 discriminator 1 view .LVU299
 958 005c 624B     		ldr	r3, .L78+4
 959 005e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 164:Core/Src/vcu.c ****         {
 960              		.loc 1 164 27 discriminator 1 view .LVU300
 961 0060 002B     		cmp	r3, #0
 962 0062 EED1     		bne	.L54
 166:Core/Src/vcu.c ****         }
 963              		.loc 1 166 13 is_stmt 1 view .LVU301
 166:Core/Src/vcu.c ****         }
 964              		.loc 1 166 23 is_stmt 0 view .LVU302
 965 0064 5F4B     		ldr	r3, .L78
 966 0066 0122     		movs	r2, #1
 967 0068 1A71     		strb	r2, [r3, #4]
 968 006a EAE7     		b	.L54
 969              	.L62:
 171:Core/Src/vcu.c ****         if (ldu.mode == 1)
 970              		.loc 1 171 9 is_stmt 1 view .LVU303
 971 006c 2022     		movs	r2, #32
 972 006e 0121     		movs	r1, #1
 973 0070 4020     		movs	r0, #64
 974 0072 FFF7FEFF 		bl	canSet
 975              	.LVL47:
 172:Core/Src/vcu.c ****         {
 976              		.loc 1 172 9 view .LVU304
 172:Core/Src/vcu.c ****         {
 977              		.loc 1 172 16 is_stmt 0 view .LVU305
 978 0076 5D4B     		ldr	r3, .L78+8
 979 0078 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 980 007a DBB2     		uxtb	r3, r3
 172:Core/Src/vcu.c ****         {
 981              		.loc 1 172 12 view .LVU306
 982 007c 012B     		cmp	r3, #1
 983 007e 0DD0     		beq	.L77
ARM GAS  /tmp/ccrGGCmS.s 			page 28


 984              	.L66:
 177:Core/Src/vcu.c ****         {
 985              		.loc 1 177 9 is_stmt 1 view .LVU307
 177:Core/Src/vcu.c ****         {
 986              		.loc 1 177 16 is_stmt 0 view .LVU308
 987 0080 584B     		ldr	r3, .L78
 988 0082 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 177:Core/Src/vcu.c ****         {
 989              		.loc 1 177 12 view .LVU309
 990 0084 13B9     		cbnz	r3, .L67
 179:Core/Src/vcu.c ****         }
 991              		.loc 1 179 13 is_stmt 1 view .LVU310
 179:Core/Src/vcu.c ****         }
 992              		.loc 1 179 23 is_stmt 0 view .LVU311
 993 0086 574B     		ldr	r3, .L78
 994 0088 0022     		movs	r2, #0
 995 008a 1A71     		strb	r2, [r3, #4]
 996              	.L67:
 181:Core/Src/vcu.c ****         {
 997              		.loc 1 181 9 is_stmt 1 view .LVU312
 181:Core/Src/vcu.c ****         {
 998              		.loc 1 181 20 is_stmt 0 view .LVU313
 999 008c 564B     		ldr	r3, .L78+4
 1000 008e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 181:Core/Src/vcu.c ****         {
 1001              		.loc 1 181 12 view .LVU314
 1002 0090 052B     		cmp	r3, #5
 1003 0092 D6D1     		bne	.L54
 183:Core/Src/vcu.c ****         }
 1004              		.loc 1 183 13 is_stmt 1 view .LVU315
 183:Core/Src/vcu.c ****         }
 1005              		.loc 1 183 23 is_stmt 0 view .LVU316
 1006 0094 534B     		ldr	r3, .L78
 1007 0096 0322     		movs	r2, #3
 1008 0098 1A71     		strb	r2, [r3, #4]
 1009 009a D2E7     		b	.L54
 1010              	.L77:
 174:Core/Src/vcu.c ****         }
 1011              		.loc 1 174 13 is_stmt 1 view .LVU317
 174:Core/Src/vcu.c ****         }
 1012              		.loc 1 174 23 is_stmt 0 view .LVU318
 1013 009c 514B     		ldr	r3, .L78
 1014 009e 0422     		movs	r2, #4
 1015 00a0 1A71     		strb	r2, [r3, #4]
 1016 00a2 EDE7     		b	.L66
 1017              	.L60:
 188:Core/Src/vcu.c ****         if (ldu.dir != 2)
 1018              		.loc 1 188 9 is_stmt 1 view .LVU319
 1019 00a4 2022     		movs	r2, #32
 1020 00a6 0121     		movs	r1, #1
 1021 00a8 4020     		movs	r0, #64
 1022 00aa FFF7FEFF 		bl	canSet
 1023              	.LVL48:
 189:Core/Src/vcu.c ****         {
 1024              		.loc 1 189 9 view .LVU320
 189:Core/Src/vcu.c ****         {
 1025              		.loc 1 189 16 is_stmt 0 view .LVU321
ARM GAS  /tmp/ccrGGCmS.s 			page 29


 1026 00ae 4F4B     		ldr	r3, .L78+8
 1027 00b0 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1028 00b2 DBB2     		uxtb	r3, r3
 189:Core/Src/vcu.c ****         {
 1029              		.loc 1 189 12 view .LVU322
 1030 00b4 022B     		cmp	r3, #2
 1031 00b6 02D0     		beq	.L68
 191:Core/Src/vcu.c ****         }
 1032              		.loc 1 191 13 is_stmt 1 view .LVU323
 191:Core/Src/vcu.c ****         }
 1033              		.loc 1 191 23 is_stmt 0 view .LVU324
 1034 00b8 4A4B     		ldr	r3, .L78
 1035 00ba 0522     		movs	r2, #5
 1036 00bc 1A71     		strb	r2, [r3, #4]
 1037              	.L68:
 194:Core/Src/vcu.c ****         {
 1038              		.loc 1 194 9 is_stmt 1 view .LVU325
 194:Core/Src/vcu.c ****         {
 1039              		.loc 1 194 16 is_stmt 0 view .LVU326
 1040 00be 494B     		ldr	r3, .L78
 1041 00c0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 194:Core/Src/vcu.c ****         {
 1042              		.loc 1 194 12 view .LVU327
 1043 00c2 002B     		cmp	r3, #0
 1044 00c4 BDD1     		bne	.L54
 196:Core/Src/vcu.c ****         }
 1045              		.loc 1 196 13 is_stmt 1 view .LVU328
 196:Core/Src/vcu.c ****         }
 1046              		.loc 1 196 23 is_stmt 0 view .LVU329
 1047 00c6 474B     		ldr	r3, .L78
 1048 00c8 0022     		movs	r2, #0
 1049 00ca 1A71     		strb	r2, [r3, #4]
 1050 00cc B9E7     		b	.L54
 1051              	.L59:
 201:Core/Src/vcu.c ****         canSet(FWEAK, 280, 32);
 1052              		.loc 1 201 9 is_stmt 1 view .LVU330
 1053 00ce 2022     		movs	r2, #32
 1054 00d0 0021     		movs	r1, #0
 1055 00d2 4020     		movs	r0, #64
 1056 00d4 FFF7FEFF 		bl	canSet
 1057              	.LVL49:
 202:Core/Src/vcu.c ****         canSet(FWEAKSTRT, 400, 32);
 1058              		.loc 1 202 9 view .LVU331
 1059 00d8 2022     		movs	r2, #32
 1060 00da 4FF48C71 		mov	r1, #280
 1061 00de 0120     		movs	r0, #1
 1062 00e0 FFF7FEFF 		bl	canSet
 1063              	.LVL50:
 203:Core/Src/vcu.c ****         canSet(FSLIP_MIN, 76, 1);  // 2.3*32
 1064              		.loc 1 203 9 view .LVU332
 1065 00e4 2022     		movs	r2, #32
 1066 00e6 4FF4C871 		mov	r1, #400
 1067 00ea 0220     		movs	r0, #2
 1068 00ec FFF7FEFF 		bl	canSet
 1069              	.LVL51:
 204:Core/Src/vcu.c ****         canSet(FSLIP_MAX, 101, 1); // 3.15*32
 1070              		.loc 1 204 9 view .LVU333
ARM GAS  /tmp/ccrGGCmS.s 			page 30


 1071 00f0 0122     		movs	r2, #1
 1072 00f2 4C21     		movs	r1, #76
 1073 00f4 0520     		movs	r0, #5
 1074 00f6 FFF7FEFF 		bl	canSet
 1075              	.LVL52:
 205:Core/Src/vcu.c ****         canSet(THROTRAMP, 15, 32);
 1076              		.loc 1 205 9 view .LVU334
 1077 00fa 0122     		movs	r2, #1
 1078 00fc 6521     		movs	r1, #101
 1079 00fe 0620     		movs	r0, #6
 1080 0100 FFF7FEFF 		bl	canSet
 1081              	.LVL53:
 206:Core/Src/vcu.c ****         if (vcu.key == OFF)
 1082              		.loc 1 206 9 view .LVU335
 1083 0104 2022     		movs	r2, #32
 1084 0106 0F21     		movs	r1, #15
 1085 0108 3320     		movs	r0, #51
 1086 010a FFF7FEFF 		bl	canSet
 1087              	.LVL54:
 207:Core/Src/vcu.c ****         {
 1088              		.loc 1 207 9 view .LVU336
 207:Core/Src/vcu.c ****         {
 1089              		.loc 1 207 16 is_stmt 0 view .LVU337
 1090 010e 354B     		ldr	r3, .L78
 1091 0110 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 207:Core/Src/vcu.c ****         {
 1092              		.loc 1 207 12 view .LVU338
 1093 0112 13B9     		cbnz	r3, .L69
 209:Core/Src/vcu.c ****         }
 1094              		.loc 1 209 13 is_stmt 1 view .LVU339
 209:Core/Src/vcu.c ****         }
 1095              		.loc 1 209 23 is_stmt 0 view .LVU340
 1096 0114 334B     		ldr	r3, .L78
 1097 0116 0022     		movs	r2, #0
 1098 0118 1A71     		strb	r2, [r3, #4]
 1099              	.L69:
 212:Core/Src/vcu.c ****         {
 1100              		.loc 1 212 9 is_stmt 1 view .LVU341
 212:Core/Src/vcu.c ****         {
 1101              		.loc 1 212 16 is_stmt 0 view .LVU342
 1102 011a 324B     		ldr	r3, .L78
 1103 011c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 212:Core/Src/vcu.c ****         {
 1104              		.loc 1 212 12 view .LVU343
 1105 011e 13B1     		cbz	r3, .L70
 214:Core/Src/vcu.c ****         }
 1106              		.loc 1 214 13 is_stmt 1 view .LVU344
 214:Core/Src/vcu.c ****         }
 1107              		.loc 1 214 23 is_stmt 0 view .LVU345
 1108 0120 304B     		ldr	r3, .L78
 1109 0122 0622     		movs	r2, #6
 1110 0124 1A71     		strb	r2, [r3, #4]
 1111              	.L70:
 217:Core/Src/vcu.c ****         {
 1112              		.loc 1 217 9 is_stmt 1 view .LVU346
 217:Core/Src/vcu.c ****         {
 1113              		.loc 1 217 16 is_stmt 0 view .LVU347
ARM GAS  /tmp/ccrGGCmS.s 			page 31


 1114 0126 2F4B     		ldr	r3, .L78
 1115 0128 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 217:Core/Src/vcu.c ****         {
 1116              		.loc 1 217 12 view .LVU348
 1117 012a 002B     		cmp	r3, #0
 1118 012c 89D0     		beq	.L54
 219:Core/Src/vcu.c ****         }
 1119              		.loc 1 219 13 is_stmt 1 view .LVU349
 219:Core/Src/vcu.c ****         }
 1120              		.loc 1 219 23 is_stmt 0 view .LVU350
 1121 012e 2D4B     		ldr	r3, .L78
 1122 0130 0722     		movs	r2, #7
 1123 0132 1A71     		strb	r2, [r3, #4]
 1124 0134 85E7     		b	.L54
 1125              	.L58:
 224:Core/Src/vcu.c ****         canSet(FSLIP_MIN, 61, 1); // 1.9*32
 1126              		.loc 1 224 9 is_stmt 1 view .LVU351
 1127 0136 2022     		movs	r2, #32
 1128 0138 DC21     		movs	r1, #220
 1129 013a 0120     		movs	r0, #1
 1130 013c FFF7FEFF 		bl	canSet
 1131              	.LVL55:
 225:Core/Src/vcu.c ****         canSet(FSLIP_MAX, 77, 1); // 2.4*32
 1132              		.loc 1 225 9 view .LVU352
 1133 0140 0122     		movs	r2, #1
 1134 0142 3D21     		movs	r1, #61
 1135 0144 0520     		movs	r0, #5
 1136 0146 FFF7FEFF 		bl	canSet
 1137              	.LVL56:
 226:Core/Src/vcu.c ****         if (vcu.launchFlag == 0)
 1138              		.loc 1 226 9 view .LVU353
 1139 014a 0122     		movs	r2, #1
 1140 014c 4D21     		movs	r1, #77
 1141 014e 0620     		movs	r0, #6
 1142 0150 FFF7FEFF 		bl	canSet
 1143              	.LVL57:
 227:Core/Src/vcu.c ****         {
 1144              		.loc 1 227 9 view .LVU354
 227:Core/Src/vcu.c ****         {
 1145              		.loc 1 227 16 is_stmt 0 view .LVU355
 1146 0154 234B     		ldr	r3, .L78
 1147 0156 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 227:Core/Src/vcu.c ****         {
 1148              		.loc 1 227 12 view .LVU356
 1149 0158 002B     		cmp	r3, #0
 1150 015a 7FF472AF 		bne	.L54
 229:Core/Src/vcu.c ****         }
 1151              		.loc 1 229 13 is_stmt 1 view .LVU357
 229:Core/Src/vcu.c ****         }
 1152              		.loc 1 229 23 is_stmt 0 view .LVU358
 1153 015e 214B     		ldr	r3, .L78
 1154 0160 0522     		movs	r2, #5
 1155 0162 1A71     		strb	r2, [r3, #4]
 1156 0164 6DE7     		b	.L54
 1157              	.L56:
 234:Core/Src/vcu.c ****         canSet(FWEAKSTRT, 238, 32);
 1158              		.loc 1 234 9 is_stmt 1 view .LVU359
ARM GAS  /tmp/ccrGGCmS.s 			page 32


 1159 0166 2022     		movs	r2, #32
 1160 0168 DC21     		movs	r1, #220
 1161 016a 0120     		movs	r0, #1
 1162 016c FFF7FEFF 		bl	canSet
 1163              	.LVL58:
 235:Core/Src/vcu.c ****         canSet(FSLIP_MIN, 61, 1); // 1.9*32
 1164              		.loc 1 235 9 view .LVU360
 1165 0170 2022     		movs	r2, #32
 1166 0172 EE21     		movs	r1, #238
 1167 0174 0220     		movs	r0, #2
 1168 0176 FFF7FEFF 		bl	canSet
 1169              	.LVL59:
 236:Core/Src/vcu.c ****         canSet(FSLIP_MAX, 77, 1); // 2.4*32
 1170              		.loc 1 236 9 view .LVU361
 1171 017a 0122     		movs	r2, #1
 1172 017c 3D21     		movs	r1, #61
 1173 017e 0520     		movs	r0, #5
 1174 0180 FFF7FEFF 		bl	canSet
 1175              	.LVL60:
 237:Core/Src/vcu.c ****         int throttleramp;
 1176              		.loc 1 237 9 view .LVU362
 1177 0184 0122     		movs	r2, #1
 1178 0186 4D21     		movs	r1, #77
 1179 0188 0620     		movs	r0, #6
 1180 018a FFF7FEFF 		bl	canSet
 1181              	.LVL61:
 238:Core/Src/vcu.c ****         if (ldu.rpm < 2000)
 1182              		.loc 1 238 9 view .LVU363
 239:Core/Src/vcu.c ****         {
 1183              		.loc 1 239 9 view .LVU364
 239:Core/Src/vcu.c ****         {
 1184              		.loc 1 239 16 is_stmt 0 view .LVU365
 1185 018e 174B     		ldr	r3, .L78+8
 1186 0190 1B88     		ldrh	r3, [r3]
 1187 0192 9BB2     		uxth	r3, r3
 239:Core/Src/vcu.c ****         {
 1188              		.loc 1 239 12 view .LVU366
 1189 0194 B3F5FA6F 		cmp	r3, #2000
 1190 0198 18D3     		bcc	.L72
 245:Core/Src/vcu.c ****         }
 1191              		.loc 1 245 13 is_stmt 1 view .LVU367
 245:Core/Src/vcu.c ****         }
 1192              		.loc 1 245 28 is_stmt 0 view .LVU368
 1193 019a 144B     		ldr	r3, .L78+8
 1194 019c 1B88     		ldrh	r3, [r3]
 1195 019e 9BB2     		uxth	r3, r3
 1196 01a0 A3F5FA63 		sub	r3, r3, #2000
 1197 01a4 124A     		ldr	r2, .L78+12
 1198 01a6 82FB0312 		smull	r1, r2, r2, r3
 1199 01aa D917     		asrs	r1, r3, #31
 1200 01ac C1EB6211 		rsb	r1, r1, r2, asr #5
 245:Core/Src/vcu.c ****         }
 1201              		.loc 1 245 26 view .LVU369
 1202 01b0 0231     		adds	r1, r1, #2
 1203              	.LVL62:
 1204              	.L71:
 247:Core/Src/vcu.c ****         if (vcu.burnFlag == OFF)
ARM GAS  /tmp/ccrGGCmS.s 			page 33


 1205              		.loc 1 247 9 is_stmt 1 view .LVU370
 1206 01b2 2022     		movs	r2, #32
 1207 01b4 3320     		movs	r0, #51
 1208 01b6 FFF7FEFF 		bl	canSet
 1209              	.LVL63:
 248:Core/Src/vcu.c ****         {
 1210              		.loc 1 248 9 view .LVU371
 248:Core/Src/vcu.c ****         {
 1211              		.loc 1 248 16 is_stmt 0 view .LVU372
 1212 01ba 0A4B     		ldr	r3, .L78
 1213 01bc 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 248:Core/Src/vcu.c ****         {
 1214              		.loc 1 248 12 view .LVU373
 1215 01be 002B     		cmp	r3, #0
 1216 01c0 7FF43FAF 		bne	.L54
 250:Core/Src/vcu.c ****         }
 1217              		.loc 1 250 13 is_stmt 1 view .LVU374
 250:Core/Src/vcu.c ****         }
 1218              		.loc 1 250 23 is_stmt 0 view .LVU375
 1219 01c4 074B     		ldr	r3, .L78
 1220 01c6 0522     		movs	r2, #5
 1221 01c8 1A71     		strb	r2, [r3, #4]
 1222 01ca 3AE7     		b	.L54
 1223              	.L72:
 241:Core/Src/vcu.c ****         }
 1224              		.loc 1 241 26 view .LVU376
 1225 01cc 0221     		movs	r1, #2
 1226 01ce F0E7     		b	.L71
 1227              	.L61:
 255:Core/Src/vcu.c ****         {
 1228              		.loc 1 255 9 is_stmt 1 view .LVU377
 255:Core/Src/vcu.c ****         {
 1229              		.loc 1 255 16 is_stmt 0 view .LVU378
 1230 01d0 044B     		ldr	r3, .L78
 1231 01d2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 255:Core/Src/vcu.c ****         {
 1232              		.loc 1 255 12 view .LVU379
 1233 01d4 002B     		cmp	r3, #0
 1234 01d6 7FF434AF 		bne	.L54
 257:Core/Src/vcu.c ****         }
 1235              		.loc 1 257 13 is_stmt 1 view .LVU380
 257:Core/Src/vcu.c ****         }
 1236              		.loc 1 257 23 is_stmt 0 view .LVU381
 1237 01da 024B     		ldr	r3, .L78
 1238 01dc 0022     		movs	r2, #0
 1239 01de 1A71     		strb	r2, [r3, #4]
 1240              	.LBE3:
 264:Core/Src/vcu.c **** 
 1241              		.loc 1 264 1 view .LVU382
 1242 01e0 2FE7     		b	.L54
 1243              	.L79:
 1244 01e2 00BF     		.align	2
 1245              	.L78:
 1246 01e4 00000000 		.word	vcu
 1247 01e8 00000000 		.word	charger
 1248 01ec 00000000 		.word	ldu
 1249 01f0 D34D6210 		.word	274877907
ARM GAS  /tmp/ccrGGCmS.s 			page 34


 1250              		.cfi_endproc
 1251              	.LFE72:
 1253              		.section	.text.regenHandler,"ax",%progbits
 1254              		.align	1
 1255              		.global	regenHandler
 1256              		.syntax unified
 1257              		.thumb
 1258              		.thumb_func
 1259              		.fpu softvfp
 1261              	regenHandler:
 1262              	.LFB75:
 345:Core/Src/vcu.c **** 
 1263              		.loc 1 345 1 is_stmt 1 view -0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267 0000 08B5     		push	{r3, lr}
 1268              		.cfi_def_cfa_offset 8
 1269              		.cfi_offset 3, -8
 1270              		.cfi_offset 14, -4
 347:Core/Src/vcu.c ****     int maxRegen = 94; // maximum full brake pressure regen value
 1271              		.loc 1 347 5 view .LVU384
 1272              	.LVL64:
 348:Core/Src/vcu.c ****     int brkNomPedal;
 1273              		.loc 1 348 5 view .LVU385
 349:Core/Src/vcu.c ****     int regenRamp;
 1274              		.loc 1 349 5 view .LVU386
 350:Core/Src/vcu.c **** 
 1275              		.loc 1 350 5 view .LVU387
 352:Core/Src/vcu.c ****     {
 1276              		.loc 1 352 5 view .LVU388
 352:Core/Src/vcu.c ****     {
 1277              		.loc 1 352 15 is_stmt 0 view .LVU389
 1278 0002 164B     		ldr	r3, .L86
 1279 0004 1B88     		ldrh	r3, [r3]
 1280 0006 9BB2     		uxth	r3, r3
 352:Core/Src/vcu.c ****     {
 1281              		.loc 1 352 8 view .LVU390
 1282 0008 40F28A22 		movw	r2, #650
 1283 000c 9342     		cmp	r3, r2
 1284 000e 1CD8     		bhi	.L84
 358:Core/Src/vcu.c ****         ; // maps brake pedal regen between base and max
 1285              		.loc 1 358 9 is_stmt 1 view .LVU391
 358:Core/Src/vcu.c ****         ; // maps brake pedal regen between base and max
 1286              		.loc 1 358 23 is_stmt 0 view .LVU392
 1287 0010 124B     		ldr	r3, .L86
 1288 0012 1B88     		ldrh	r3, [r3]
 1289 0014 9BB2     		uxth	r3, r3
 1290 0016 591E     		subs	r1, r3, #1
 1291 0018 6FF06203 		mvn	r3, #98
 1292 001c 03FB01F3 		mul	r3, r3, r1
 1293 0020 0F4A     		ldr	r2, .L86+4
 1294 0022 82FB0312 		smull	r1, r2, r2, r3
 1295 0026 D917     		asrs	r1, r3, #31
 1296 0028 C1EB2221 		rsb	r1, r1, r2, asr #8
 358:Core/Src/vcu.c ****         ; // maps brake pedal regen between base and max
 1297              		.loc 1 358 21 view .LVU393
ARM GAS  /tmp/ccrGGCmS.s 			page 35


 1298 002c 0531     		adds	r1, r1, #5
 1299              	.LVL65:
 1300              	.L81:
 359:Core/Src/vcu.c ****     }
 1301              		.loc 1 359 9 is_stmt 1 view .LVU394
 361:Core/Src/vcu.c **** 
 1302              		.loc 1 361 5 view .LVU395
 1303 002e 2022     		movs	r2, #32
 1304 0030 3720     		movs	r0, #55
 1305 0032 FFF7FEFF 		bl	canSet
 1306              	.LVL66:
 364:Core/Src/vcu.c ****     {
 1307              		.loc 1 364 5 view .LVU396
 364:Core/Src/vcu.c ****     {
 1308              		.loc 1 364 12 is_stmt 0 view .LVU397
 1309 0036 0B4B     		ldr	r3, .L86+8
 1310 0038 1B88     		ldrh	r3, [r3]
 1311 003a 9BB2     		uxth	r3, r3
 364:Core/Src/vcu.c ****     {
 1312              		.loc 1 364 8 view .LVU398
 1313 003c 42F21072 		movw	r2, #10000
 1314 0040 9342     		cmp	r3, r2
 1315 0042 05D8     		bhi	.L82
 366:Core/Src/vcu.c ****     }
 1316              		.loc 1 366 9 is_stmt 1 view .LVU399
 366:Core/Src/vcu.c ****     }
 1317              		.loc 1 366 21 is_stmt 0 view .LVU400
 1318 0044 074B     		ldr	r3, .L86+8
 1319 0046 1B88     		ldrh	r3, [r3]
 1320              	.LVL67:
 1321              	.L80:
 373:Core/Src/vcu.c **** 
 1322              		.loc 1 373 1 view .LVU401
 1323 0048 08BD     		pop	{r3, pc}
 1324              	.L84:
 354:Core/Src/vcu.c ****     }
 1325              		.loc 1 354 21 view .LVU402
 1326 004a 6FF05D01 		mvn	r1, #93
 1327 004e EEE7     		b	.L81
 1328              	.L82:
 370:Core/Src/vcu.c ****         canSet(BRAKE_PEDAL_RAMP, regenRamp, 1);
 1329              		.loc 1 370 9 is_stmt 1 view .LVU403
 1330              	.LVL68:
 371:Core/Src/vcu.c ****     }
 1331              		.loc 1 371 9 view .LVU404
 1332 0050 0122     		movs	r2, #1
 1333 0052 1821     		movs	r1, #24
 1334 0054 3820     		movs	r0, #56
 1335 0056 FFF7FEFF 		bl	canSet
 1336              	.LVL69:
 373:Core/Src/vcu.c **** 
 1337              		.loc 1 373 1 is_stmt 0 view .LVU405
 1338 005a F5E7     		b	.L80
 1339              	.L87:
 1340              		.align	2
 1341              	.L86:
 1342 005c 00000000 		.word	iboost
ARM GAS  /tmp/ccrGGCmS.s 			page 36


 1343 0060 43DFFA64 		.word	1694162755
 1344 0064 00000000 		.word	ldu
 1345              		.cfi_endproc
 1346              	.LFE75:
 1348              		.section	.text.throttleHandler,"ax",%progbits
 1349              		.align	1
 1350              		.global	throttleHandler
 1351              		.syntax unified
 1352              		.thumb
 1353              		.thumb_func
 1354              		.fpu softvfp
 1356              	throttleHandler:
 1357              	.LFB77:
 391:Core/Src/vcu.c **** 
 392:Core/Src/vcu.c **** void throttleHandler(void)
 393:Core/Src/vcu.c **** {
 1358              		.loc 1 393 1 is_stmt 1 view -0
 1359              		.cfi_startproc
 1360              		@ args = 0, pretend = 0, frame = 0
 1361              		@ frame_needed = 0, uses_anonymous_args = 0
 1362 0000 08B5     		push	{r3, lr}
 1363              		.cfi_def_cfa_offset 8
 1364              		.cfi_offset 3, -8
 1365              		.cfi_offset 14, -4
 394:Core/Src/vcu.c ****     ///////// idle throttle ///////////////////
 395:Core/Src/vcu.c ****     int idleThrotMax;
 1366              		.loc 1 395 5 view .LVU407
 396:Core/Src/vcu.c ****     int idleThrot;
 1367              		.loc 1 396 5 view .LVU408
 397:Core/Src/vcu.c **** 
 398:Core/Src/vcu.c ****     if (ldu.dir == FWD)
 1368              		.loc 1 398 5 view .LVU409
 1369              		.loc 1 398 12 is_stmt 0 view .LVU410
 1370 0002 234B     		ldr	r3, .L99
 1371 0004 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1372 0006 DBB2     		uxtb	r3, r3
 1373              		.loc 1 398 8 view .LVU411
 1374 0008 FF2B     		cmp	r3, #255
 1375 000a 1DD0     		beq	.L96
 399:Core/Src/vcu.c ****     {
 400:Core/Src/vcu.c ****         idleThrotMax = 22;
 401:Core/Src/vcu.c ****     }
 402:Core/Src/vcu.c ****     else
 403:Core/Src/vcu.c ****     {
 404:Core/Src/vcu.c ****         idleThrotMax = 18;
 1376              		.loc 1 404 22 view .LVU412
 1377 000c 1221     		movs	r1, #18
 1378              	.L89:
 1379              	.LVL70:
 405:Core/Src/vcu.c ****     }
 406:Core/Src/vcu.c **** 
 407:Core/Src/vcu.c ****     if (iboost.pedal > 400)
 1380              		.loc 1 407 5 is_stmt 1 view .LVU413
 1381              		.loc 1 407 15 is_stmt 0 view .LVU414
 1382 000e 214B     		ldr	r3, .L99+4
 1383 0010 1B88     		ldrh	r3, [r3]
 1384 0012 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccrGGCmS.s 			page 37


 1385              		.loc 1 407 8 view .LVU415
 1386 0014 B3F5C87F 		cmp	r3, #400
 1387 0018 18D9     		bls	.L90
 408:Core/Src/vcu.c ****     {
 409:Core/Src/vcu.c ****         canSet(IDLE_THROT_LIM, 0, 32);
 1388              		.loc 1 409 9 is_stmt 1 view .LVU416
 1389 001a 2022     		movs	r2, #32
 1390 001c 0021     		movs	r1, #0
 1391              	.LVL71:
 1392              		.loc 1 409 9 is_stmt 0 view .LVU417
 1393 001e 3F20     		movs	r0, #63
 1394 0020 FFF7FEFF 		bl	canSet
 1395              	.LVL72:
 1396              	.L91:
 410:Core/Src/vcu.c ****     }
 411:Core/Src/vcu.c ****     else
 412:Core/Src/vcu.c ****     {
 413:Core/Src/vcu.c ****         idleThrot = MAP(iboost.pedal, 1, 400, idleThrotMax, 0);
 414:Core/Src/vcu.c ****         canSet(IDLE_THROT_LIM, idleThrot, 32);
 415:Core/Src/vcu.c ****     }
 416:Core/Src/vcu.c **** 
 417:Core/Src/vcu.c ****     ///////// Launch Control Enable ///////////////
 418:Core/Src/vcu.c **** 
 419:Core/Src/vcu.c ****     if (ldu.pot >= 4050 && ldu.brake == ON)
 1397              		.loc 1 419 5 is_stmt 1 view .LVU418
 1398              		.loc 1 419 12 is_stmt 0 view .LVU419
 1399 0024 1A4B     		ldr	r3, .L99
 1400 0026 DB89     		ldrh	r3, [r3, #14]
 1401 0028 9BB2     		uxth	r3, r3
 1402              		.loc 1 419 8 view .LVU420
 1403 002a 40F6D172 		movw	r2, #4049
 1404 002e 9342     		cmp	r3, r2
 1405 0030 04D9     		bls	.L92
 1406              		.loc 1 419 31 discriminator 1 view .LVU421
 1407 0032 174B     		ldr	r3, .L99
 1408 0034 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1409 0036 DBB2     		uxtb	r3, r3
 1410              		.loc 1 419 25 discriminator 1 view .LVU422
 1411 0038 012B     		cmp	r3, #1
 1412 003a 1BD0     		beq	.L97
 1413              	.L92:
 420:Core/Src/vcu.c ****     {
 421:Core/Src/vcu.c ****         vcu.launchFlag = ON;
 422:Core/Src/vcu.c ****     }
 423:Core/Src/vcu.c ****     if (vcu.launchFlag == ON && ldu.pot < 1000)
 1414              		.loc 1 423 5 is_stmt 1 view .LVU423
 1415              		.loc 1 423 12 is_stmt 0 view .LVU424
 1416 003c 164B     		ldr	r3, .L99+8
 1417 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1418 0040 DBB2     		uxtb	r3, r3
 1419              		.loc 1 423 8 view .LVU425
 1420 0042 012B     		cmp	r3, #1
 1421 0044 1AD0     		beq	.L98
 1422              	.L88:
 424:Core/Src/vcu.c ****     {
 425:Core/Src/vcu.c ****         vcu.launchFlag = OFF;
 426:Core/Src/vcu.c ****     }
ARM GAS  /tmp/ccrGGCmS.s 			page 38


 427:Core/Src/vcu.c **** }
 1423              		.loc 1 427 1 view .LVU426
 1424 0046 08BD     		pop	{r3, pc}
 1425              	.L96:
 400:Core/Src/vcu.c ****     }
 1426              		.loc 1 400 22 view .LVU427
 1427 0048 1621     		movs	r1, #22
 1428 004a E0E7     		b	.L89
 1429              	.LVL73:
 1430              	.L90:
 413:Core/Src/vcu.c ****         canSet(IDLE_THROT_LIM, idleThrot, 32);
 1431              		.loc 1 413 9 is_stmt 1 view .LVU428
 413:Core/Src/vcu.c ****         canSet(IDLE_THROT_LIM, idleThrot, 32);
 1432              		.loc 1 413 21 is_stmt 0 view .LVU429
 1433 004c 114B     		ldr	r3, .L99+4
 1434 004e 1B88     		ldrh	r3, [r3]
 1435 0050 9BB2     		uxth	r3, r3
 1436 0052 5A1E     		subs	r2, r3, #1
 1437 0054 4B42     		rsbs	r3, r1, #0
 1438 0056 03FB02F3 		mul	r3, r3, r2
 1439 005a 104A     		ldr	r2, .L99+12
 1440 005c 82FB0302 		smull	r0, r2, r2, r3
 1441 0060 1A44     		add	r2, r2, r3
 1442 0062 DB17     		asrs	r3, r3, #31
 1443 0064 C3EB2223 		rsb	r3, r3, r2, asr #8
 1444              	.LVL74:
 414:Core/Src/vcu.c ****     }
 1445              		.loc 1 414 9 is_stmt 1 view .LVU430
 1446 0068 2022     		movs	r2, #32
 1447 006a 1944     		add	r1, r1, r3
 1448              	.LVL75:
 414:Core/Src/vcu.c ****     }
 1449              		.loc 1 414 9 is_stmt 0 view .LVU431
 1450 006c 3F20     		movs	r0, #63
 1451 006e FFF7FEFF 		bl	canSet
 1452              	.LVL76:
 414:Core/Src/vcu.c ****     }
 1453              		.loc 1 414 9 view .LVU432
 1454 0072 D7E7     		b	.L91
 1455              	.L97:
 421:Core/Src/vcu.c ****     }
 1456              		.loc 1 421 9 is_stmt 1 view .LVU433
 421:Core/Src/vcu.c ****     }
 1457              		.loc 1 421 24 is_stmt 0 view .LVU434
 1458 0074 084B     		ldr	r3, .L99+8
 1459 0076 0122     		movs	r2, #1
 1460 0078 5A71     		strb	r2, [r3, #5]
 1461 007a DFE7     		b	.L92
 1462              	.L98:
 423:Core/Src/vcu.c ****     {
 1463              		.loc 1 423 36 discriminator 1 view .LVU435
 1464 007c 044B     		ldr	r3, .L99
 1465 007e DB89     		ldrh	r3, [r3, #14]
 1466 0080 9BB2     		uxth	r3, r3
 423:Core/Src/vcu.c ****     {
 1467              		.loc 1 423 30 discriminator 1 view .LVU436
 1468 0082 B3F57A7F 		cmp	r3, #1000
ARM GAS  /tmp/ccrGGCmS.s 			page 39


 1469 0086 DED2     		bcs	.L88
 425:Core/Src/vcu.c ****     }
 1470              		.loc 1 425 9 is_stmt 1 view .LVU437
 425:Core/Src/vcu.c ****     }
 1471              		.loc 1 425 24 is_stmt 0 view .LVU438
 1472 0088 034B     		ldr	r3, .L99+8
 1473 008a 0022     		movs	r2, #0
 1474 008c 5A71     		strb	r2, [r3, #5]
 1475              		.loc 1 427 1 view .LVU439
 1476 008e DAE7     		b	.L88
 1477              	.L100:
 1478              		.align	2
 1479              	.L99:
 1480 0090 00000000 		.word	ldu
 1481 0094 00000000 		.word	iboost
 1482 0098 00000000 		.word	vcu
 1483 009c 112940A4 		.word	-1539299055
 1484              		.cfi_endproc
 1485              	.LFE77:
 1487              		.section	.text.brakeHandler,"ax",%progbits
 1488              		.align	1
 1489              		.global	brakeHandler
 1490              		.syntax unified
 1491              		.thumb
 1492              		.thumb_func
 1493              		.fpu softvfp
 1495              	brakeHandler:
 1496              	.LFB78:
 428:Core/Src/vcu.c **** 
 429:Core/Src/vcu.c **** void brakeHandler(void)
 430:Core/Src/vcu.c **** {
 1497              		.loc 1 430 1 is_stmt 1 view -0
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 0
 1500              		@ frame_needed = 0, uses_anonymous_args = 0
 1501 0000 08B5     		push	{r3, lr}
 1502              		.cfi_def_cfa_offset 8
 1503              		.cfi_offset 3, -8
 1504              		.cfi_offset 14, -4
 431:Core/Src/vcu.c ****     if (vcu.state != burnout && iboost.pedal > 15)
 1505              		.loc 1 431 5 view .LVU441
 1506              		.loc 1 431 12 is_stmt 0 view .LVU442
 1507 0002 0A4B     		ldr	r3, .L106
 1508 0004 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1509 0006 DBB2     		uxtb	r3, r3
 1510              		.loc 1 431 8 view .LVU443
 1511 0008 072B     		cmp	r3, #7
 1512 000a 04D0     		beq	.L102
 1513              		.loc 1 431 39 discriminator 1 view .LVU444
 1514 000c 084B     		ldr	r3, .L106+4
 1515 000e 1B88     		ldrh	r3, [r3]
 1516 0010 9BB2     		uxth	r3, r3
 1517              		.loc 1 431 30 discriminator 1 view .LVU445
 1518 0012 0F2B     		cmp	r3, #15
 1519 0014 04D8     		bhi	.L105
 1520              	.L102:
 432:Core/Src/vcu.c ****     {
ARM GAS  /tmp/ccrGGCmS.s 			page 40


 433:Core/Src/vcu.c ****         canIOset(brake, ON);
 434:Core/Src/vcu.c ****     }
 435:Core/Src/vcu.c ****     else
 436:Core/Src/vcu.c ****     {
 437:Core/Src/vcu.c ****         canIOset(brake, OFF);
 1521              		.loc 1 437 9 is_stmt 1 view .LVU446
 1522 0016 0021     		movs	r1, #0
 1523 0018 0220     		movs	r0, #2
 1524 001a FFF7FEFF 		bl	canIOset
 1525              	.LVL77:
 1526              	.L101:
 438:Core/Src/vcu.c ****     }
 439:Core/Src/vcu.c **** }
 1527              		.loc 1 439 1 is_stmt 0 view .LVU447
 1528 001e 08BD     		pop	{r3, pc}
 1529              	.L105:
 433:Core/Src/vcu.c ****     }
 1530              		.loc 1 433 9 is_stmt 1 view .LVU448
 1531 0020 0121     		movs	r1, #1
 1532 0022 0220     		movs	r0, #2
 1533 0024 FFF7FEFF 		bl	canIOset
 1534              	.LVL78:
 1535 0028 F9E7     		b	.L101
 1536              	.L107:
 1537 002a 00BF     		.align	2
 1538              	.L106:
 1539 002c 00000000 		.word	vcu
 1540 0030 00000000 		.word	iboost
 1541              		.cfi_endproc
 1542              	.LFE78:
 1544              		.section	.text.getResetCause,"ax",%progbits
 1545              		.align	1
 1546              		.global	getResetCause
 1547              		.syntax unified
 1548              		.thumb
 1549              		.thumb_func
 1550              		.fpu softvfp
 1552              	getResetCause:
 1553              	.LFB79:
 440:Core/Src/vcu.c **** 
 441:Core/Src/vcu.c **** uint8_t getResetCause(void)
 442:Core/Src/vcu.c **** {
 1554              		.loc 1 442 1 view -0
 1555              		.cfi_startproc
 1556              		@ args = 0, pretend = 0, frame = 0
 1557              		@ frame_needed = 0, uses_anonymous_args = 0
 1558              		@ link register save eliminated.
 443:Core/Src/vcu.c ****     uint8_t reset_cause;
 1559              		.loc 1 443 5 view .LVU450
 444:Core/Src/vcu.c **** 
 445:Core/Src/vcu.c ****     if (__HAL_RCC_GET_FLAG(RCC_FLAG_LPWRRST))
 1560              		.loc 1 445 5 view .LVU451
 1561              		.loc 1 445 9 is_stmt 0 view .LVU452
 1562 0000 154B     		ldr	r3, .L117
 1563 0002 5B6A     		ldr	r3, [r3, #36]
 1564              		.loc 1 445 8 view .LVU453
 1565 0004 002B     		cmp	r3, #0
ARM GAS  /tmp/ccrGGCmS.s 			page 41


 1566 0006 1CDB     		blt	.L110
 446:Core/Src/vcu.c ****     {
 447:Core/Src/vcu.c ****         reset_cause = RESET_CAUSE_LOW_POWER_RESET;
 448:Core/Src/vcu.c ****     }
 449:Core/Src/vcu.c ****     else if (__HAL_RCC_GET_FLAG(RCC_FLAG_WWDGRST))
 1567              		.loc 1 449 10 is_stmt 1 view .LVU454
 1568              		.loc 1 449 14 is_stmt 0 view .LVU455
 1569 0008 134B     		ldr	r3, .L117
 1570 000a 5B6A     		ldr	r3, [r3, #36]
 1571              		.loc 1 449 13 view .LVU456
 1572 000c 13F0804F 		tst	r3, #1073741824
 1573 0010 19D1     		bne	.L111
 450:Core/Src/vcu.c ****     {
 451:Core/Src/vcu.c ****         reset_cause = RESET_CAUSE_WINDOW_WATCHDOG_RESET;
 452:Core/Src/vcu.c ****     }
 453:Core/Src/vcu.c ****     else if (__HAL_RCC_GET_FLAG(RCC_FLAG_IWDGRST))
 1574              		.loc 1 453 10 is_stmt 1 view .LVU457
 1575              		.loc 1 453 14 is_stmt 0 view .LVU458
 1576 0012 114B     		ldr	r3, .L117
 1577 0014 5B6A     		ldr	r3, [r3, #36]
 1578              		.loc 1 453 13 view .LVU459
 1579 0016 13F0005F 		tst	r3, #536870912
 1580 001a 16D1     		bne	.L112
 454:Core/Src/vcu.c ****     {
 455:Core/Src/vcu.c ****         reset_cause = RESET_CAUSE_INDEPENDENT_WATCHDOG_RESET;
 456:Core/Src/vcu.c ****     }
 457:Core/Src/vcu.c ****     else if (__HAL_RCC_GET_FLAG(RCC_FLAG_SFTRST))
 1581              		.loc 1 457 10 is_stmt 1 view .LVU460
 1582              		.loc 1 457 14 is_stmt 0 view .LVU461
 1583 001c 0E4B     		ldr	r3, .L117
 1584 001e 5B6A     		ldr	r3, [r3, #36]
 1585              		.loc 1 457 13 view .LVU462
 1586 0020 13F0805F 		tst	r3, #268435456
 1587 0024 13D1     		bne	.L113
 458:Core/Src/vcu.c ****     {
 459:Core/Src/vcu.c ****         // This reset is induced by calling the ARM CMSIS
 460:Core/Src/vcu.c ****         // `NVIC_SystemReset()` function!
 461:Core/Src/vcu.c ****         reset_cause = RESET_CAUSE_SOFTWARE_RESET;
 462:Core/Src/vcu.c ****     }
 463:Core/Src/vcu.c ****     else if (__HAL_RCC_GET_FLAG(RCC_FLAG_PORRST))
 1588              		.loc 1 463 10 is_stmt 1 view .LVU463
 1589              		.loc 1 463 14 is_stmt 0 view .LVU464
 1590 0026 0C4B     		ldr	r3, .L117
 1591 0028 5B6A     		ldr	r3, [r3, #36]
 1592              		.loc 1 463 13 view .LVU465
 1593 002a 13F0006F 		tst	r3, #134217728
 1594 002e 10D1     		bne	.L114
 464:Core/Src/vcu.c ****     {
 465:Core/Src/vcu.c ****         reset_cause = RESET_CAUSE_POWER_ON_POWER_DOWN_RESET;
 466:Core/Src/vcu.c ****     }
 467:Core/Src/vcu.c ****     else if (__HAL_RCC_GET_FLAG(RCC_FLAG_PINRST))
 1595              		.loc 1 467 10 is_stmt 1 view .LVU466
 1596              		.loc 1 467 14 is_stmt 0 view .LVU467
 1597 0030 094B     		ldr	r3, .L117
 1598 0032 5B6A     		ldr	r3, [r3, #36]
 1599              		.loc 1 467 13 view .LVU468
 1600 0034 13F0806F 		tst	r3, #67108864
ARM GAS  /tmp/ccrGGCmS.s 			page 42


 1601 0038 01D1     		bne	.L116
 468:Core/Src/vcu.c ****     {
 469:Core/Src/vcu.c ****         reset_cause = RESET_CAUSE_EXTERNAL_RESET_PIN_RESET;
 470:Core/Src/vcu.c ****     }
 471:Core/Src/vcu.c ****     // Needs to come *after* checking the `RCC_FLAG_PORRST` flag in order to
 472:Core/Src/vcu.c ****     // ensure first that the reset cause is NOT a POR/PDR reset. See note
 473:Core/Src/vcu.c ****     // below.
 474:Core/Src/vcu.c ****     /* else if (__HAL_RCC_GET_FLAG(RCC_FLAG_BORRST))
 475:Core/Src/vcu.c ****      {
 476:Core/Src/vcu.c ****          reset_cause = RESET_CAUSE_BROWNOUT_RESET;
 477:Core/Src/vcu.c ****      }*/
 478:Core/Src/vcu.c ****     else
 479:Core/Src/vcu.c ****     {
 480:Core/Src/vcu.c ****         reset_cause = RESET_CAUSE_UNKNOWN;
 1602              		.loc 1 480 21 view .LVU469
 1603 003a 0020     		movs	r0, #0
 1604              	.LVL79:
 481:Core/Src/vcu.c ****     }
 482:Core/Src/vcu.c **** 
 483:Core/Src/vcu.c ****     // Clear all the reset flags or else they will remain set during future
 484:Core/Src/vcu.c ****     // resets until system power is fully removed.
 485:Core/Src/vcu.c ****     //__HAL_RCC_CLEAR_RESET_FLAGS();
 486:Core/Src/vcu.c **** 
 487:Core/Src/vcu.c ****     return reset_cause;
 1605              		.loc 1 487 5 is_stmt 1 view .LVU470
 488:Core/Src/vcu.c **** }
 1606              		.loc 1 488 1 is_stmt 0 view .LVU471
 1607 003c 7047     		bx	lr
 1608              	.LVL80:
 1609              	.L116:
 469:Core/Src/vcu.c ****     }
 1610              		.loc 1 469 21 view .LVU472
 1611 003e 0620     		movs	r0, #6
 1612 0040 7047     		bx	lr
 1613              	.L110:
 447:Core/Src/vcu.c ****     }
 1614              		.loc 1 447 21 view .LVU473
 1615 0042 0120     		movs	r0, #1
 1616 0044 7047     		bx	lr
 1617              	.L111:
 451:Core/Src/vcu.c ****     }
 1618              		.loc 1 451 21 view .LVU474
 1619 0046 0220     		movs	r0, #2
 1620 0048 7047     		bx	lr
 1621              	.L112:
 455:Core/Src/vcu.c ****     }
 1622              		.loc 1 455 21 view .LVU475
 1623 004a 0320     		movs	r0, #3
 1624 004c 7047     		bx	lr
 1625              	.L113:
 461:Core/Src/vcu.c ****     }
 1626              		.loc 1 461 21 view .LVU476
 1627 004e 0420     		movs	r0, #4
 1628 0050 7047     		bx	lr
 1629              	.L114:
 465:Core/Src/vcu.c ****     }
 1630              		.loc 1 465 21 view .LVU477
ARM GAS  /tmp/ccrGGCmS.s 			page 43


 1631 0052 0520     		movs	r0, #5
 1632 0054 7047     		bx	lr
 1633              	.L118:
 1634 0056 00BF     		.align	2
 1635              	.L117:
 1636 0058 00100240 		.word	1073876992
 1637              		.cfi_endproc
 1638              	.LFE79:
 1640              		.section	.text.vehicleComms,"ax",%progbits
 1641              		.align	1
 1642              		.global	vehicleComms
 1643              		.syntax unified
 1644              		.thumb
 1645              		.thumb_func
 1646              		.fpu softvfp
 1648              	vehicleComms:
 1649              	.LFB71:
 124:Core/Src/vcu.c ****     txMsg.StdId = 0x313;
 1650              		.loc 1 124 1 is_stmt 1 view -0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 0
 1653              		@ frame_needed = 0, uses_anonymous_args = 0
 1654 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1655              		.cfi_def_cfa_offset 24
 1656              		.cfi_offset 3, -24
 1657              		.cfi_offset 4, -20
 1658              		.cfi_offset 5, -16
 1659              		.cfi_offset 6, -12
 1660              		.cfi_offset 7, -8
 1661              		.cfi_offset 14, -4
 125:Core/Src/vcu.c ****     txMsg.DLC = 8;
 1662              		.loc 1 125 5 view .LVU479
 125:Core/Src/vcu.c ****     txMsg.DLC = 8;
 1663              		.loc 1 125 17 is_stmt 0 view .LVU480
 1664 0002 1B4E     		ldr	r6, .L121
 1665 0004 40F21333 		movw	r3, #787
 1666 0008 3360     		str	r3, [r6]
 126:Core/Src/vcu.c ****     canTx[0] = vcu.state;
 1667              		.loc 1 126 5 is_stmt 1 view .LVU481
 126:Core/Src/vcu.c ****     canTx[0] = vcu.state;
 1668              		.loc 1 126 15 is_stmt 0 view .LVU482
 1669 000a 0827     		movs	r7, #8
 1670 000c 3761     		str	r7, [r6, #16]
 127:Core/Src/vcu.c ****     canTx[1] = getResetCause();
 1671              		.loc 1 127 5 is_stmt 1 view .LVU483
 127:Core/Src/vcu.c ****     canTx[1] = getResetCause();
 1672              		.loc 1 127 19 is_stmt 0 view .LVU484
 1673 000e 194B     		ldr	r3, .L121+4
 1674 0010 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 127:Core/Src/vcu.c ****     canTx[1] = getResetCause();
 1675              		.loc 1 127 14 view .LVU485
 1676 0012 194C     		ldr	r4, .L121+8
 1677 0014 2370     		strb	r3, [r4]
 128:Core/Src/vcu.c ****     canTx[2] = taskTime.Task10ms & 0xFF;
 1678              		.loc 1 128 5 is_stmt 1 view .LVU486
 128:Core/Src/vcu.c ****     canTx[2] = taskTime.Task10ms & 0xFF;
 1679              		.loc 1 128 16 is_stmt 0 view .LVU487
ARM GAS  /tmp/ccrGGCmS.s 			page 44


 1680 0016 FFF7FEFF 		bl	getResetCause
 1681              	.LVL81:
 128:Core/Src/vcu.c ****     canTx[2] = taskTime.Task10ms & 0xFF;
 1682              		.loc 1 128 14 view .LVU488
 1683 001a 6070     		strb	r0, [r4, #1]
 129:Core/Src/vcu.c ****     canTx[3] = (taskTime.Task10ms >> 8) & 0xFF;
 1684              		.loc 1 129 5 is_stmt 1 view .LVU489
 129:Core/Src/vcu.c ****     canTx[3] = (taskTime.Task10ms >> 8) & 0xFF;
 1685              		.loc 1 129 24 is_stmt 0 view .LVU490
 1686 001c 174D     		ldr	r5, .L121+12
 1687 001e 2B89     		ldrh	r3, [r5, #8]
 129:Core/Src/vcu.c ****     canTx[3] = (taskTime.Task10ms >> 8) & 0xFF;
 1688              		.loc 1 129 14 view .LVU491
 1689 0020 A370     		strb	r3, [r4, #2]
 130:Core/Src/vcu.c ****     canTx[4] = taskTime.TaskLoop & 0xFF;
 1690              		.loc 1 130 5 is_stmt 1 view .LVU492
 130:Core/Src/vcu.c ****     canTx[4] = taskTime.TaskLoop & 0xFF;
 1691              		.loc 1 130 14 is_stmt 0 view .LVU493
 1692 0022 FB40     		lsrs	r3, r3, r7
 1693 0024 E370     		strb	r3, [r4, #3]
 131:Core/Src/vcu.c ****     canTx[5] = (taskTime.TaskLoop >> 8) & 0xFF;
 1694              		.loc 1 131 5 is_stmt 1 view .LVU494
 131:Core/Src/vcu.c ****     canTx[5] = (taskTime.TaskLoop >> 8) & 0xFF;
 1695              		.loc 1 131 24 is_stmt 0 view .LVU495
 1696 0026 2B88     		ldrh	r3, [r5]
 131:Core/Src/vcu.c ****     canTx[5] = (taskTime.TaskLoop >> 8) & 0xFF;
 1697              		.loc 1 131 14 view .LVU496
 1698 0028 2371     		strb	r3, [r4, #4]
 132:Core/Src/vcu.c ****     canTx[6] = taskTime.Task250ms & 0xFF;
 1699              		.loc 1 132 5 is_stmt 1 view .LVU497
 132:Core/Src/vcu.c ****     canTx[6] = taskTime.Task250ms & 0xFF;
 1700              		.loc 1 132 14 is_stmt 0 view .LVU498
 1701 002a FB40     		lsrs	r3, r3, r7
 1702 002c 6371     		strb	r3, [r4, #5]
 133:Core/Src/vcu.c ****     canTx[7] = (taskTime.Task250ms >> 8) & 0xFF;
 1703              		.loc 1 133 5 is_stmt 1 view .LVU499
 133:Core/Src/vcu.c ****     canTx[7] = (taskTime.Task250ms >> 8) & 0xFF;
 1704              		.loc 1 133 24 is_stmt 0 view .LVU500
 1705 002e 2B8B     		ldrh	r3, [r5, #24]
 133:Core/Src/vcu.c ****     canTx[7] = (taskTime.Task250ms >> 8) & 0xFF;
 1706              		.loc 1 133 14 view .LVU501
 1707 0030 A371     		strb	r3, [r4, #6]
 134:Core/Src/vcu.c ****     c1tx(&txMsg, canTx);
 1708              		.loc 1 134 5 is_stmt 1 view .LVU502
 134:Core/Src/vcu.c ****     c1tx(&txMsg, canTx);
 1709              		.loc 1 134 14 is_stmt 0 view .LVU503
 1710 0032 FB40     		lsrs	r3, r3, r7
 1711 0034 E371     		strb	r3, [r4, #7]
 135:Core/Src/vcu.c **** 
 1712              		.loc 1 135 5 is_stmt 1 view .LVU504
 1713 0036 2146     		mov	r1, r4
 1714 0038 3046     		mov	r0, r6
 1715 003a FFF7FEFF 		bl	c1tx
 1716              	.LVL82:
 137:Core/Src/vcu.c ****     txMsg.DLC = 8;
 1717              		.loc 1 137 5 view .LVU505
 137:Core/Src/vcu.c ****     txMsg.DLC = 8;
ARM GAS  /tmp/ccrGGCmS.s 			page 45


 1718              		.loc 1 137 17 is_stmt 0 view .LVU506
 1719 003e 4FF44573 		mov	r3, #788
 1720 0042 3360     		str	r3, [r6]
 138:Core/Src/vcu.c ****     canTx[0] = taskTime.TaskLoop_max & 0xFF;
 1721              		.loc 1 138 5 is_stmt 1 view .LVU507
 138:Core/Src/vcu.c ****     canTx[0] = taskTime.TaskLoop_max & 0xFF;
 1722              		.loc 1 138 15 is_stmt 0 view .LVU508
 1723 0044 3761     		str	r7, [r6, #16]
 139:Core/Src/vcu.c ****     canTx[1] = (taskTime.TaskLoop_max >> 8) & 0xFF;
 1724              		.loc 1 139 5 is_stmt 1 view .LVU509
 139:Core/Src/vcu.c ****     canTx[1] = (taskTime.TaskLoop_max >> 8) & 0xFF;
 1725              		.loc 1 139 24 is_stmt 0 view .LVU510
 1726 0046 6B88     		ldrh	r3, [r5, #2]
 139:Core/Src/vcu.c ****     canTx[1] = (taskTime.TaskLoop_max >> 8) & 0xFF;
 1727              		.loc 1 139 14 view .LVU511
 1728 0048 2370     		strb	r3, [r4]
 140:Core/Src/vcu.c ****     canTx[2] = taskTime.Task10ms_max & 0xFF;
 1729              		.loc 1 140 5 is_stmt 1 view .LVU512
 140:Core/Src/vcu.c ****     canTx[2] = taskTime.Task10ms_max & 0xFF;
 1730              		.loc 1 140 14 is_stmt 0 view .LVU513
 1731 004a FB40     		lsrs	r3, r3, r7
 1732 004c 6370     		strb	r3, [r4, #1]
 141:Core/Src/vcu.c ****     canTx[3] = (taskTime.Task10ms_max >> 8) & 0xFF;
 1733              		.loc 1 141 5 is_stmt 1 view .LVU514
 141:Core/Src/vcu.c ****     canTx[3] = (taskTime.Task10ms_max >> 8) & 0xFF;
 1734              		.loc 1 141 24 is_stmt 0 view .LVU515
 1735 004e 6B89     		ldrh	r3, [r5, #10]
 141:Core/Src/vcu.c ****     canTx[3] = (taskTime.Task10ms_max >> 8) & 0xFF;
 1736              		.loc 1 141 14 view .LVU516
 1737 0050 A370     		strb	r3, [r4, #2]
 142:Core/Src/vcu.c ****     canTx[4] = taskTime.Task100ms_max & 0xFF;
 1738              		.loc 1 142 5 is_stmt 1 view .LVU517
 142:Core/Src/vcu.c ****     canTx[4] = taskTime.Task100ms_max & 0xFF;
 1739              		.loc 1 142 14 is_stmt 0 view .LVU518
 1740 0052 FB40     		lsrs	r3, r3, r7
 1741 0054 E370     		strb	r3, [r4, #3]
 143:Core/Src/vcu.c ****     canTx[5] = (taskTime.Task100ms_max >> 8) & 0xFF;
 1742              		.loc 1 143 5 is_stmt 1 view .LVU519
 143:Core/Src/vcu.c ****     canTx[5] = (taskTime.Task100ms_max >> 8) & 0xFF;
 1743              		.loc 1 143 24 is_stmt 0 view .LVU520
 1744 0056 6B8A     		ldrh	r3, [r5, #18]
 143:Core/Src/vcu.c ****     canTx[5] = (taskTime.Task100ms_max >> 8) & 0xFF;
 1745              		.loc 1 143 14 view .LVU521
 1746 0058 2371     		strb	r3, [r4, #4]
 144:Core/Src/vcu.c ****     canTx[6] = taskTime.Task250ms_max & 0xFF;
 1747              		.loc 1 144 5 is_stmt 1 view .LVU522
 144:Core/Src/vcu.c ****     canTx[6] = taskTime.Task250ms_max & 0xFF;
 1748              		.loc 1 144 14 is_stmt 0 view .LVU523
 1749 005a FB40     		lsrs	r3, r3, r7
 1750 005c 6371     		strb	r3, [r4, #5]
 145:Core/Src/vcu.c ****     canTx[7] = (taskTime.Task250ms_max >> 8) & 0xFF;
 1751              		.loc 1 145 5 is_stmt 1 view .LVU524
 145:Core/Src/vcu.c ****     canTx[7] = (taskTime.Task250ms_max >> 8) & 0xFF;
 1752              		.loc 1 145 24 is_stmt 0 view .LVU525
 1753 005e 6B8B     		ldrh	r3, [r5, #26]
 145:Core/Src/vcu.c ****     canTx[7] = (taskTime.Task250ms_max >> 8) & 0xFF;
 1754              		.loc 1 145 14 view .LVU526
ARM GAS  /tmp/ccrGGCmS.s 			page 46


 1755 0060 A371     		strb	r3, [r4, #6]
 146:Core/Src/vcu.c ****     c1tx(&txMsg, canTx);
 1756              		.loc 1 146 5 is_stmt 1 view .LVU527
 146:Core/Src/vcu.c ****     c1tx(&txMsg, canTx);
 1757              		.loc 1 146 14 is_stmt 0 view .LVU528
 1758 0062 FB40     		lsrs	r3, r3, r7
 1759 0064 E371     		strb	r3, [r4, #7]
 147:Core/Src/vcu.c **** }
 1760              		.loc 1 147 5 is_stmt 1 view .LVU529
 1761 0066 2146     		mov	r1, r4
 1762 0068 3046     		mov	r0, r6
 1763 006a FFF7FEFF 		bl	c1tx
 1764              	.LVL83:
 148:Core/Src/vcu.c **** /////////////////////////////////////////////////////////////////////////
 1765              		.loc 1 148 1 is_stmt 0 view .LVU530
 1766 006e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1767              	.L122:
 1768              		.align	2
 1769              	.L121:
 1770 0070 00000000 		.word	txMsg
 1771 0074 00000000 		.word	vcu
 1772 0078 00000000 		.word	canTx
 1773 007c 00000000 		.word	taskTime
 1774              		.cfi_endproc
 1775              	.LFE71:
 1777              		.section	.text.taskCheck,"ax",%progbits
 1778              		.align	1
 1779              		.global	taskCheck
 1780              		.syntax unified
 1781              		.thumb
 1782              		.thumb_func
 1783              		.fpu softvfp
 1785              	taskCheck:
 1786              	.LFB80:
 489:Core/Src/vcu.c **** 
 490:Core/Src/vcu.c **** void taskCheck(void)
 491:Core/Src/vcu.c **** {
 1787              		.loc 1 491 1 is_stmt 1 view -0
 1788              		.cfi_startproc
 1789              		@ args = 0, pretend = 0, frame = 0
 1790              		@ frame_needed = 0, uses_anonymous_args = 0
 1791 0000 08B5     		push	{r3, lr}
 1792              		.cfi_def_cfa_offset 8
 1793              		.cfi_offset 3, -8
 1794              		.cfi_offset 14, -4
 492:Core/Src/vcu.c ****     uint32_t timeNow = HAL_GetTick();
 1795              		.loc 1 492 5 view .LVU532
 1796              		.loc 1 492 24 is_stmt 0 view .LVU533
 1797 0002 FFF7FEFF 		bl	HAL_GetTick
 1798              	.LVL84:
 493:Core/Src/vcu.c ****     taskTime.TaskLoop_max = timeNow - taskTime.TaskLoop_lastRun;
 1799              		.loc 1 493 5 is_stmt 1 view .LVU534
 1800              		.loc 1 493 37 is_stmt 0 view .LVU535
 1801 0006 80B2     		uxth	r0, r0
 1802              	.LVL85:
 1803              		.loc 1 493 47 view .LVU536
 1804 0008 064B     		ldr	r3, .L125
ARM GAS  /tmp/ccrGGCmS.s 			page 47


 1805 000a 5A68     		ldr	r2, [r3, #4]
 1806              		.loc 1 493 37 view .LVU537
 1807 000c 821A     		subs	r2, r0, r2
 1808              		.loc 1 493 27 view .LVU538
 1809 000e 5A80     		strh	r2, [r3, #2]	@ movhi
 494:Core/Src/vcu.c ****     taskTime.Task10ms_max = timeNow - taskTime.Task10ms_lastRun;
 1810              		.loc 1 494 5 is_stmt 1 view .LVU539
 1811              		.loc 1 494 47 is_stmt 0 view .LVU540
 1812 0010 DA68     		ldr	r2, [r3, #12]
 1813              		.loc 1 494 37 view .LVU541
 1814 0012 821A     		subs	r2, r0, r2
 1815              		.loc 1 494 27 view .LVU542
 1816 0014 5A81     		strh	r2, [r3, #10]	@ movhi
 495:Core/Src/vcu.c ****     taskTime.Task100ms_max = timeNow - taskTime.Task100ms_lastRun;
 1817              		.loc 1 495 5 is_stmt 1 view .LVU543
 1818              		.loc 1 495 48 is_stmt 0 view .LVU544
 1819 0016 5A69     		ldr	r2, [r3, #20]
 1820              		.loc 1 495 38 view .LVU545
 1821 0018 821A     		subs	r2, r0, r2
 1822              		.loc 1 495 28 view .LVU546
 1823 001a 5A82     		strh	r2, [r3, #18]	@ movhi
 496:Core/Src/vcu.c ****     taskTime.Task250ms_max = timeNow - taskTime.Task250ms_lastRun;
 1824              		.loc 1 496 5 is_stmt 1 view .LVU547
 1825              		.loc 1 496 48 is_stmt 0 view .LVU548
 1826 001c DA69     		ldr	r2, [r3, #28]
 1827              		.loc 1 496 38 view .LVU549
 1828 001e 801A     		subs	r0, r0, r2
 1829              		.loc 1 496 28 view .LVU550
 1830 0020 5883     		strh	r0, [r3, #26]	@ movhi
 497:Core/Src/vcu.c **** 
 498:Core/Src/vcu.c **** }...
 1831              		.loc 1 498 1 view .LVU551
 1832 0022 08BD     		pop	{r3, pc}
 1833              	.L126:
 1834              		.align	2
 1835              	.L125:
 1836 0024 00000000 		.word	taskTime
 1837              		.cfi_endproc
 1838              	.LFE80:
 1840              		.comm	taskTime,32,4
 1841              		.comm	BMS,20,4
 1842              		.comm	charger,3,4
 1843              		.comm	vcu,7,4
 1844              		.comm	iboost,2,4
 1845              		.comm	ldu,18,4
 1846              		.comm	tempdata,4,4
 1847              		.comm	ADC_data,12,4
 1848              		.comm	canDebug,4,4
 1849              		.comm	txCycle2,4,4
 1850              		.comm	txCycle,4,4
 1851              		.comm	canTx2,8,4
 1852              		.comm	canTx,8,4
 1853              		.comm	canMailbox2,4,4
 1854              		.comm	canMailbox,4,4
 1855              		.comm	canRx2,8,4
 1856              		.comm	canRx,8,4
 1857              		.comm	txMsgExt2,24,4
ARM GAS  /tmp/ccrGGCmS.s 			page 48


 1858              		.comm	txMsg2,24,4
 1859              		.comm	rxMsg2,28,4
 1860              		.comm	txMsgExt,24,4
 1861              		.comm	txMsg,24,4
 1862              		.comm	rxMsg,28,4
 1863              		.comm	sf5,40,4
 1864              		.comm	sf4,40,4
 1865              		.comm	sf3,40,4
 1866              		.comm	sf2,40,4
 1867              		.comm	sf,40,4
 1868              		.comm	hcan2,40,4
 1869              		.comm	hcan1,40,4
 1870              		.comm	LIDAR,8,4
 1871              		.comm	tenderActive,1,1
 1872              		.comm	time_now,4,4
 1873              		.comm	period,4,4
 1874              		.comm	DCDC,4,4
 1875              		.comm	te,12,4
 1876              		.text
 1877              	.Letext0:
 1878              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1879              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
 1880              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1881              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
 1882              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1883              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 1884              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1885              		.file 9 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1886              		.file 10 "/usr/include/newlib/sys/_types.h"
 1887              		.file 11 "/usr/include/newlib/sys/reent.h"
 1888              		.file 12 "/usr/include/newlib/sys/lock.h"
 1889              		.file 13 "Core/Inc/encoder.h"
 1890              		.file 14 "Core/Inc/dcdc.h"
 1891              		.file 15 "Core/Inc/lidar.h"
 1892              		.file 16 "Core/Inc/can_setup.h"
 1893              		.file 17 "Core/Inc/vcu.h"
 1894              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
ARM GAS  /tmp/ccrGGCmS.s 			page 49


DEFINED SYMBOLS
                            *ABS*:0000000000000000 vcu.c
     /tmp/ccrGGCmS.s:19     .text.decodeCAN:0000000000000000 $t
     /tmp/ccrGGCmS.s:27     .text.decodeCAN:0000000000000000 decodeCAN
     /tmp/ccrGGCmS.s:91     .text.decodeCAN:0000000000000048 $d
     /tmp/ccrGGCmS.s:96     .text.decodeCAN:000000000000005c $t
     /tmp/ccrGGCmS.s:400    .text.decodeCAN:00000000000001d8 $d
                            *COM*:0000000000000003 charger
                            *COM*:0000000000000012 ldu
                            *COM*:0000000000000002 iboost
                            *COM*:0000000000000014 BMS
     /tmp/ccrGGCmS.s:412    .text.canIOset:0000000000000000 $t
     /tmp/ccrGGCmS.s:419    .text.canIOset:0000000000000000 canIOset
     /tmp/ccrGGCmS.s:489    .text.canIOset:0000000000000040 $d
                            *COM*:0000000000000007 vcu
                            *COM*:0000000000000018 txMsg
                            *COM*:0000000000000008 canTx
     /tmp/ccrGGCmS.s:496    .text.canIOsend:0000000000000000 $t
     /tmp/ccrGGCmS.s:503    .text.canIOsend:0000000000000000 canIOsend
     /tmp/ccrGGCmS.s:537    .text.canIOsend:000000000000001c $d
     /tmp/ccrGGCmS.s:544    .text.vcuInit:0000000000000000 $t
     /tmp/ccrGGCmS.s:551    .text.vcuInit:0000000000000000 vcuInit
     /tmp/ccrGGCmS.s:621    .text.vcuInit:0000000000000038 $d
                            *COM*:000000000000000c ADC_data
                            *COM*:0000000000000020 taskTime
     /tmp/ccrGGCmS.s:629    .text.ioHandler:0000000000000000 $t
     /tmp/ccrGGCmS.s:636    .text.ioHandler:0000000000000000 ioHandler
     /tmp/ccrGGCmS.s:771    .text.ioHandler:000000000000009c $d
     /tmp/ccrGGCmS.s:779    .text.canSet:0000000000000000 $t
     /tmp/ccrGGCmS.s:786    .text.canSet:0000000000000000 canSet
     /tmp/ccrGGCmS.s:858    .text.canSet:0000000000000038 $d
     /tmp/ccrGGCmS.s:864    .text.vcuState:0000000000000000 $t
     /tmp/ccrGGCmS.s:871    .text.vcuState:0000000000000000 vcuState
     /tmp/ccrGGCmS.s:890    .text.vcuState:0000000000000010 $d
     /tmp/ccrGGCmS.s:898    .text.vcuState:0000000000000020 $t
     /tmp/ccrGGCmS.s:1246   .text.vcuState:00000000000001e4 $d
     /tmp/ccrGGCmS.s:1254   .text.regenHandler:0000000000000000 $t
     /tmp/ccrGGCmS.s:1261   .text.regenHandler:0000000000000000 regenHandler
     /tmp/ccrGGCmS.s:1342   .text.regenHandler:000000000000005c $d
     /tmp/ccrGGCmS.s:1349   .text.throttleHandler:0000000000000000 $t
     /tmp/ccrGGCmS.s:1356   .text.throttleHandler:0000000000000000 throttleHandler
     /tmp/ccrGGCmS.s:1480   .text.throttleHandler:0000000000000090 $d
     /tmp/ccrGGCmS.s:1488   .text.brakeHandler:0000000000000000 $t
     /tmp/ccrGGCmS.s:1495   .text.brakeHandler:0000000000000000 brakeHandler
     /tmp/ccrGGCmS.s:1539   .text.brakeHandler:000000000000002c $d
     /tmp/ccrGGCmS.s:1545   .text.getResetCause:0000000000000000 $t
     /tmp/ccrGGCmS.s:1552   .text.getResetCause:0000000000000000 getResetCause
     /tmp/ccrGGCmS.s:1636   .text.getResetCause:0000000000000058 $d
     /tmp/ccrGGCmS.s:1641   .text.vehicleComms:0000000000000000 $t
     /tmp/ccrGGCmS.s:1648   .text.vehicleComms:0000000000000000 vehicleComms
     /tmp/ccrGGCmS.s:1770   .text.vehicleComms:0000000000000070 $d
     /tmp/ccrGGCmS.s:1778   .text.taskCheck:0000000000000000 $t
     /tmp/ccrGGCmS.s:1785   .text.taskCheck:0000000000000000 taskCheck
     /tmp/ccrGGCmS.s:1836   .text.taskCheck:0000000000000024 $d
                            *COM*:0000000000000004 tempdata
                            *COM*:0000000000000004 canDebug
                            *COM*:0000000000000004 txCycle2
ARM GAS  /tmp/ccrGGCmS.s 			page 50


                            *COM*:0000000000000004 txCycle
                            *COM*:0000000000000008 canTx2
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000008 canRx2
                            *COM*:0000000000000008 canRx
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000018 txMsg2
                            *COM*:000000000000001c rxMsg2
                            *COM*:0000000000000018 txMsgExt
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000028 sf3
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000028 hcan2
                            *COM*:0000000000000028 hcan1
                            *COM*:0000000000000008 LIDAR
                            *COM*:0000000000000001 tenderActive
                            *COM*:0000000000000004 time_now
                            *COM*:0000000000000004 period
                            *COM*:0000000000000004 DCDC
                            *COM*:000000000000000c te

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_dmul
__aeabi_d2uiz
c1tx
HAL_GPIO_ReadPin
HAL_GPIO_WritePin
HAL_GetTick
