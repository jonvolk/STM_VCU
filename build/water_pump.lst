ARM GAS  /tmp/ccNFJQom.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"water_pump.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.wpInit,"ax",%progbits
  16              		.align	1
  17              		.global	wpInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	wpInit:
  24              	.LFB67:
  25              		.file 1 "Core/Src/water_pump.c"
   1:Core/Src/water_pump.c **** #include "water_pump.h"
   2:Core/Src/water_pump.c **** 
   3:Core/Src/water_pump.c **** void wpHandler(void)
   4:Core/Src/water_pump.c **** {
   5:Core/Src/water_pump.c ****     switch (vcu.state)
   6:Core/Src/water_pump.c ****     {
   7:Core/Src/water_pump.c ****     case run:
   8:Core/Src/water_pump.c ****         if (ldu.dir == FWD || ldu.dir == REV)
   9:Core/Src/water_pump.c ****         {
  10:Core/Src/water_pump.c ****             int throttleDuty = MAP(ldu.pot, 870, 4095, 100, 100);
  11:Core/Src/water_pump.c ****             int tempDuty = MAP(ldu.hsTemp, 0, 85, 100, 100);
  12:Core/Src/water_pump.c **** 
  13:Core/Src/water_pump.c ****             if (tempDuty > throttleDuty)
  14:Core/Src/water_pump.c ****             {
  15:Core/Src/water_pump.c ****                 wpDuty(tempDuty);
  16:Core/Src/water_pump.c ****             }
  17:Core/Src/water_pump.c ****             else
  18:Core/Src/water_pump.c ****             {
  19:Core/Src/water_pump.c ****                 wpDuty(throttleDuty);
  20:Core/Src/water_pump.c ****             }
  21:Core/Src/water_pump.c ****         }
  22:Core/Src/water_pump.c **** 
  23:Core/Src/water_pump.c **** 
  24:Core/Src/water_pump.c ****         
  25:Core/Src/water_pump.c ****         else
  26:Core/Src/water_pump.c ****         {
  27:Core/Src/water_pump.c ****             wpDuty(0);
  28:Core/Src/water_pump.c ****         }
  29:Core/Src/water_pump.c **** 
  30:Core/Src/water_pump.c ****         break;
  31:Core/Src/water_pump.c **** 
  32:Core/Src/water_pump.c ****     case charge_keyOff:
  33:Core/Src/water_pump.c ****     case charge_keyOn:
ARM GAS  /tmp/ccNFJQom.s 			page 2


  34:Core/Src/water_pump.c ****         wpDuty(100);   
  35:Core/Src/water_pump.c ****         break;
  36:Core/Src/water_pump.c **** 
  37:Core/Src/water_pump.c ****     case off:
  38:Core/Src/water_pump.c ****         wpDuty(0);
  39:Core/Src/water_pump.c ****     default:
  40:Core/Src/water_pump.c ****         break;
  41:Core/Src/water_pump.c ****     }
  42:Core/Src/water_pump.c **** }
  43:Core/Src/water_pump.c **** 
  44:Core/Src/water_pump.c **** void wpInit(void)
  45:Core/Src/water_pump.c **** {
  26              		.loc 1 45 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32              	.LBB2:
  46:Core/Src/water_pump.c ****     for (size_t i = 0; i < 100; i++)
  33              		.loc 1 46 0
  34 0000 0023     		movs	r3, #0
  35 0002 04E0     		b	.L2
  36              	.LVL1:
  37              	.L3:
  47:Core/Src/water_pump.c ****     {
  48:Core/Src/water_pump.c ****         waterPWM[i] = 0;
  38              		.loc 1 48 0 discriminator 3
  39 0004 0021     		movs	r1, #0
  40 0006 034A     		ldr	r2, .L4
  41 0008 42F82310 		str	r1, [r2, r3, lsl #2]
  46:Core/Src/water_pump.c ****     for (size_t i = 0; i < 100; i++)
  42              		.loc 1 46 0 discriminator 3
  43 000c 0133     		adds	r3, r3, #1
  44              	.LVL2:
  45              	.L2:
  46:Core/Src/water_pump.c ****     for (size_t i = 0; i < 100; i++)
  46              		.loc 1 46 0 is_stmt 0 discriminator 1
  47 000e 632B     		cmp	r3, #99
  48 0010 F8D9     		bls	.L3
  49              	.LBE2:
  49:Core/Src/water_pump.c ****     }
  50:Core/Src/water_pump.c **** }
  50              		.loc 1 50 0 is_stmt 1
  51 0012 7047     		bx	lr
  52              	.L5:
  53              		.align	2
  54              	.L4:
  55 0014 00000000 		.word	waterPWM
  56              		.cfi_endproc
  57              	.LFE67:
  59              		.section	.text.wpDuty,"ax",%progbits
  60              		.align	1
  61              		.global	wpDuty
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
ARM GAS  /tmp/ccNFJQom.s 			page 3


  65              		.fpu softvfp
  67              	wpDuty:
  68              	.LFB68:
  51:Core/Src/water_pump.c **** 
  52:Core/Src/water_pump.c **** void wpDuty(volatile int duty)
  53:Core/Src/water_pump.c **** {
  69              		.loc 1 53 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 8
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.LVL3:
  75 0000 82B0     		sub	sp, sp, #8
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 8
  78 0002 0190     		str	r0, [sp, #4]
  79              	.LVL4:
  80              	.LBB3:
  54:Core/Src/water_pump.c ****     for (size_t i = 0; i < duty; i++)
  81              		.loc 1 54 0
  82 0004 0023     		movs	r3, #0
  83 0006 04E0     		b	.L7
  84              	.LVL5:
  85              	.L8:
  55:Core/Src/water_pump.c ****     {
  56:Core/Src/water_pump.c ****         waterPWM[i] = (uint32_t)WP_Pin;
  86              		.loc 1 56 0 discriminator 3
  87 0008 4021     		movs	r1, #64
  88 000a 094A     		ldr	r2, .L12
  89 000c 42F82310 		str	r1, [r2, r3, lsl #2]
  54:Core/Src/water_pump.c ****     for (size_t i = 0; i < duty; i++)
  90              		.loc 1 54 0 discriminator 3
  91 0010 0133     		adds	r3, r3, #1
  92              	.LVL6:
  93              	.L7:
  54:Core/Src/water_pump.c ****     for (size_t i = 0; i < duty; i++)
  94              		.loc 1 54 0 is_stmt 0 discriminator 1
  95 0012 019A     		ldr	r2, [sp, #4]
  96 0014 9342     		cmp	r3, r2
  97 0016 F7D3     		bcc	.L8
  98              	.LBE3:
  99              	.LBB4:
  57:Core/Src/water_pump.c ****     }
  58:Core/Src/water_pump.c **** 
  59:Core/Src/water_pump.c ****     for (size_t i = duty; i < 100; i++)
 100              		.loc 1 59 0 is_stmt 1
 101 0018 019B     		ldr	r3, [sp, #4]
 102              	.LVL7:
 103 001a 05E0     		b	.L9
 104              	.L10:
  60:Core/Src/water_pump.c ****     {
  61:Core/Src/water_pump.c ****         waterPWM[i] = (uint32_t)WP_Pin << 16U;
 105              		.loc 1 61 0 discriminator 3
 106 001c 4FF48001 		mov	r1, #4194304
 107 0020 034A     		ldr	r2, .L12
 108 0022 42F82310 		str	r1, [r2, r3, lsl #2]
  59:Core/Src/water_pump.c ****     {
ARM GAS  /tmp/ccNFJQom.s 			page 4


 109              		.loc 1 59 0 discriminator 3
 110 0026 0133     		adds	r3, r3, #1
 111              	.LVL8:
 112              	.L9:
  59:Core/Src/water_pump.c ****     {
 113              		.loc 1 59 0 is_stmt 0 discriminator 1
 114 0028 632B     		cmp	r3, #99
 115 002a F7D9     		bls	.L10
 116              	.LBE4:
  62:Core/Src/water_pump.c ****     }
  63:Core/Src/water_pump.c **** }...
 117              		.loc 1 63 0 is_stmt 1
 118 002c 02B0     		add	sp, sp, #8
 119              	.LCFI1:
 120              		.cfi_def_cfa_offset 0
 121              		@ sp needed
 122 002e 7047     		bx	lr
 123              	.L13:
 124              		.align	2
 125              	.L12:
 126 0030 00000000 		.word	waterPWM
 127              		.cfi_endproc
 128              	.LFE68:
 130              		.section	.text.wpHandler,"ax",%progbits
 131              		.align	1
 132              		.global	wpHandler
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu softvfp
 138              	wpHandler:
 139              	.LFB66:
   4:Core/Src/water_pump.c **** {
 140              		.loc 1 4 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 08B5     		push	{r3, lr}
 145              	.LCFI2:
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 3, -8
 148              		.cfi_offset 14, -4
   5:Core/Src/water_pump.c ****     switch (vcu.state)
 149              		.loc 1 5 0
 150 0002 134B     		ldr	r3, .L23
 151 0004 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 152 0006 DBB2     		uxtb	r3, r3
 153 0008 052B     		cmp	r3, #5
 154 000a 20D8     		bhi	.L14
 155 000c DFE803F0 		tbb	[pc, r3]
 156              	.L17:
 157 0010 1C       		.byte	(.L16-.L17)/2
 158 0011 1F       		.byte	(.L14-.L17)/2
 159 0012 18       		.byte	(.L18-.L17)/2
 160 0013 18       		.byte	(.L18-.L17)/2
 161 0014 1F       		.byte	(.L14-.L17)/2
 162 0015 03       		.byte	(.L19-.L17)/2
ARM GAS  /tmp/ccNFJQom.s 			page 5


 163              		.p2align 1
 164              	.L19:
   8:Core/Src/water_pump.c ****         if (ldu.dir == FWD || ldu.dir == REV)
 165              		.loc 1 8 0
 166 0016 0F4B     		ldr	r3, .L23+4
 167 0018 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 168 001a DBB2     		uxtb	r3, r3
 169 001c FF2B     		cmp	r3, #255
 170 001e 08D0     		beq	.L20
   8:Core/Src/water_pump.c ****         if (ldu.dir == FWD || ldu.dir == REV)
 171              		.loc 1 8 0 is_stmt 0 discriminator 1
 172 0020 0C4B     		ldr	r3, .L23+4
 173 0022 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 174 0024 DBB2     		uxtb	r3, r3
 175 0026 032B     		cmp	r3, #3
 176 0028 03D0     		beq	.L20
  27:Core/Src/water_pump.c ****             wpDuty(0);
 177              		.loc 1 27 0 is_stmt 1
 178 002a 0020     		movs	r0, #0
 179 002c FFF7FEFF 		bl	wpDuty
 180              	.LVL9:
 181 0030 08BD     		pop	{r3, pc}
 182              	.L20:
 183              	.LBB5:
  10:Core/Src/water_pump.c ****             int throttleDuty = MAP(ldu.pot, 870, 4095, 100, 100);
 184              		.loc 1 10 0
 185 0032 084B     		ldr	r3, .L23+4
 186 0034 DA89     		ldrh	r2, [r3, #14]
 187              	.LVL10:
  11:Core/Src/water_pump.c ****             int tempDuty = MAP(ldu.hsTemp, 0, 85, 100, 100);
 188              		.loc 1 11 0
 189 0036 9B88     		ldrh	r3, [r3, #4]
 190              	.LVL11:
  19:Core/Src/water_pump.c ****                 wpDuty(throttleDuty);
 191              		.loc 1 19 0
 192 0038 6420     		movs	r0, #100
 193 003a FFF7FEFF 		bl	wpDuty
 194              	.LVL12:
 195 003e 08BD     		pop	{r3, pc}
 196              	.LVL13:
 197              	.L18:
 198              	.LBE5:
  34:Core/Src/water_pump.c ****         wpDuty(100);   
 199              		.loc 1 34 0
 200 0040 6420     		movs	r0, #100
 201 0042 FFF7FEFF 		bl	wpDuty
 202              	.LVL14:
  35:Core/Src/water_pump.c ****         break;
 203              		.loc 1 35 0
 204 0046 08BD     		pop	{r3, pc}
 205              	.L16:
  38:Core/Src/water_pump.c ****         wpDuty(0);
 206              		.loc 1 38 0
 207 0048 0020     		movs	r0, #0
 208 004a FFF7FEFF 		bl	wpDuty
 209              	.LVL15:
 210              	.L14:
ARM GAS  /tmp/ccNFJQom.s 			page 6


 211 004e 08BD     		pop	{r3, pc}
 212              	.L24:
 213              		.align	2
 214              	.L23:
 215 0050 00000000 		.word	vcu
 216 0054 00000000 		.word	ldu
 217              		.cfi_endproc
 218              	.LFE66:
 220              		.comm	waterPWM,400,4
 221              		.comm	BMS,20,4
 222              		.comm	charger,3,4
 223              		.comm	vcu,7,4
 224              		.comm	iboost,2,4
 225              		.comm	ldu,18,4
 226              		.comm	tempdata,4,4
 227              		.comm	ADC_data,12,4
 228              		.comm	canDebug,4,4
 229              		.comm	txCycle2,4,4
 230              		.comm	txCycle,4,4
 231              		.comm	canTx2,8,4
 232              		.comm	canTx,8,4
 233              		.comm	canMailbox2,4,4
 234              		.comm	canMailbox,4,4
 235              		.comm	canRx2,8,4
 236              		.comm	canRx,8,4
 237              		.comm	txMsgExt2,24,4
 238              		.comm	txMsg2,24,4
 239              		.comm	rxMsg2,28,4
 240              		.comm	txMsgExt,24,4
 241              		.comm	txMsg,24,4
 242              		.comm	rxMsg,28,4
 243              		.comm	sf5,40,4
 244              		.comm	sf4,40,4
 245              		.comm	sf3,40,4
 246              		.comm	sf2,40,4
 247              		.comm	sf,40,4
 248              		.comm	hcan2,40,4
 249              		.comm	hcan1,40,4
 250              		.comm	LIDAR,8,4
 251              		.comm	tenderActive,1,1
 252              		.comm	time_now,4,4
 253              		.comm	period,4,4
 254              		.comm	DCDC,4,4
 255              		.comm	te,12,4
 256              		.text
 257              	.Letext0:
 258              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 259              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 260              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 261              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 262              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
 263              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 264              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 265              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 266              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 267              		.file 11 "/usr/include/newlib/sys/lock.h"
 268              		.file 12 "/usr/include/newlib/sys/_types.h"
ARM GAS  /tmp/ccNFJQom.s 			page 7


 269              		.file 13 "/usr/include/newlib/sys/reent.h"
 270              		.file 14 "Core/Inc/encoder.h"
 271              		.file 15 "Core/Inc/dcdc.h"
 272              		.file 16 "Core/Inc/lidar.h"
 273              		.file 17 "Core/Inc/can_setup.h"
 274              		.file 18 "Core/Inc/vcu.h"
 275              		.file 19 "Core/Inc/water_pump.h"
ARM GAS  /tmp/ccNFJQom.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 water_pump.c
     /tmp/ccNFJQom.s:16     .text.wpInit:0000000000000000 $t
     /tmp/ccNFJQom.s:23     .text.wpInit:0000000000000000 wpInit
     /tmp/ccNFJQom.s:55     .text.wpInit:0000000000000014 $d
                            *COM*:0000000000000190 waterPWM
     /tmp/ccNFJQom.s:60     .text.wpDuty:0000000000000000 $t
     /tmp/ccNFJQom.s:67     .text.wpDuty:0000000000000000 wpDuty
     /tmp/ccNFJQom.s:126    .text.wpDuty:0000000000000030 $d
     /tmp/ccNFJQom.s:131    .text.wpHandler:0000000000000000 $t
     /tmp/ccNFJQom.s:138    .text.wpHandler:0000000000000000 wpHandler
     /tmp/ccNFJQom.s:157    .text.wpHandler:0000000000000010 $d
     /tmp/ccNFJQom.s:163    .text.wpHandler:0000000000000016 $t
     /tmp/ccNFJQom.s:215    .text.wpHandler:0000000000000050 $d
                            *COM*:0000000000000007 vcu
                            *COM*:0000000000000012 ldu
                            *COM*:0000000000000014 BMS
                            *COM*:0000000000000003 charger
                            *COM*:0000000000000002 iboost
                            *COM*:0000000000000004 tempdata
                            *COM*:000000000000000c ADC_data
                            *COM*:0000000000000004 canDebug
                            *COM*:0000000000000004 txCycle2
                            *COM*:0000000000000004 txCycle
                            *COM*:0000000000000008 canTx2
                            *COM*:0000000000000008 canTx
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000008 canRx2
                            *COM*:0000000000000008 canRx
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000018 txMsg2
                            *COM*:000000000000001c rxMsg2
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000018 txMsg
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000028 sf3
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000028 hcan2
                            *COM*:0000000000000028 hcan1
                            *COM*:0000000000000008 LIDAR
                            *COM*:0000000000000001 tenderActive
                            *COM*:0000000000000004 time_now
                            *COM*:0000000000000004 period
                            *COM*:0000000000000004 DCDC
                            *COM*:000000000000000c te
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
