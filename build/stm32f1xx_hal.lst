ARM GAS  /tmp/ccjISXYN.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_MspInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB67:
  25              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @file    stm32f1xx_hal.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @verbatim
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The HAL contains two APIs' categories:
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @endverbatim
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @attention
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
ARM GAS  /tmp/ccjISXYN.s 			page 2


  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #include "stm32f1xx_hal.h"
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @addtogroup STM32F1xx_HAL_Driver
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private define ------------------------------------------------------------*/
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  * @brief STM32F1xx HAL Driver version number V1.1.7
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB1   (0x01U) /*!< [23:16] sub1 version */
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB2   (0x07U) /*!< [15:8]  sub2 version */
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION         ((__STM32F1xx_HAL_VERSION_MAIN << 24)\
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB1 << 16)\
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB2 << 8 )\
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_RC))
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __IO uint32_t uwTick;
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
ARM GAS  /tmp/ccjISXYN.s 			page 3


  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****               ##### Initialization and de-initialization functions #####
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    [..]  This section provides functions allowing to:
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           and the backup domain when enabled.
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) de-Initializes common part of the HAL.
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           Tick interrupt priority.
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              handled in milliseconds basis.
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             ISR process will be blocked.
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         HAL function), it performs the following:
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configure the Flash prefetch.
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Set NVIC Group Priority to 4.
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           "stm32f1xx_hal_msp.c" to do the global low level hardware initialization
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         to have correct HAL operation.
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F101x6) || defined(STM32F101xB) || defined(STM32F101xE) || defined(STM32F101xG) ||
 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F102x6) || defined(STM32F102xB) || \
ARM GAS  /tmp/ccjISXYN.s 			page 4


 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) ||
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F105xC) || defined(STM32F107xC)
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Prefetch buffer is not available on value line devices */
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif /* PREFETCH_ENABLE */
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Set Interrupt Group Priority */
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Init the low level hardware */
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspInit();
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the systick.
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        of time base.
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is optional.
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* De-Init the low level hardware */
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspDeInit();
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Initialize the MSP.
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspInit(void)
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  26              		.loc 1 201 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccjISXYN.s 			page 5


  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 7047     		bx	lr
  32              		.cfi_endproc
  33              	.LFE67:
  35              		.section	.text.HAL_MspDeInit,"ax",%progbits
  36              		.align	1
  37              		.weak	HAL_MspDeInit
  38              		.syntax unified
  39              		.thumb
  40              		.thumb_func
  41              		.fpu softvfp
  43              	HAL_MspDeInit:
  44              	.LFB68:
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  DeInitializes the MSP.
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspDeInit(void)
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  45              		.loc 1 212 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50 0000 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE68:
  54              		.section	.text.HAL_DeInit,"ax",%progbits
  55              		.align	1
  56              		.global	HAL_DeInit
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	HAL_DeInit:
  63              	.LFB66:
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
  64              		.loc 1 176 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
  68              		.loc 1 176 0
  69 0000 10B5     		push	{r4, lr}
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 4, -8
  72              		.cfi_offset 14, -4
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  73              		.loc 1 178 0
  74 0002 074B     		ldr	r3, .L5
  75 0004 4FF0FF32 		mov	r2, #-1
ARM GAS  /tmp/ccjISXYN.s 			page 6


  76 0008 DA60     		str	r2, [r3, #12]
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  77              		.loc 1 179 0
  78 000a 0024     		movs	r4, #0
  79 000c 1C61     		str	r4, [r3, #16]
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  80              		.loc 1 181 0
  81 000e DA60     		str	r2, [r3, #12]
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  82              		.loc 1 182 0
  83 0010 DC60     		str	r4, [r3, #12]
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  84              		.loc 1 185 0
  85 0012 9A62     		str	r2, [r3, #40]
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
  86              		.loc 1 186 0
  87 0014 9C62     		str	r4, [r3, #40]
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  88              		.loc 1 190 0
  89 0016 FFF7FEFF 		bl	HAL_MspDeInit
  90              	.LVL0:
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  91              		.loc 1 194 0
  92 001a 2046     		mov	r0, r4
  93 001c 10BD     		pop	{r4, pc}
  94              	.L6:
  95 001e 00BF     		.align	2
  96              	.L5:
  97 0020 00100240 		.word	1073876992
  98              		.cfi_endproc
  99              	.LFE66:
 101              		.section	.text.HAL_InitTick,"ax",%progbits
 102              		.align	1
 103              		.weak	HAL_InitTick
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu softvfp
 109              	HAL_InitTick:
 110              	.LFB69:
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function configures the source of the time base.
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        Tick interrupt priority.
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
ARM GAS  /tmp/ccjISXYN.s 			page 7


 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementation  in user file.
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 111              		.loc 1 235 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              	.LVL1:
 116 0000 10B5     		push	{r4, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
 119              		.cfi_offset 14, -4
 120 0002 0446     		mov	r4, r0
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 121              		.loc 1 237 0
 122 0004 0E4B     		ldr	r3, .L13
 123 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 124              	.LVL2:
 125 0008 4FF47A73 		mov	r3, #1000
 126 000c B3FBF0F3 		udiv	r3, r3, r0
 127 0010 0C4A     		ldr	r2, .L13+4
 128 0012 1068     		ldr	r0, [r2]
 129 0014 B0FBF3F0 		udiv	r0, r0, r3
 130 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 131              	.LVL3:
 132 001c 68B9     		cbnz	r0, .L9
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     return HAL_ERROR;
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure the SysTick IRQ priority */
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 133              		.loc 1 243 0
 134 001e 0F2C     		cmp	r4, #15
 135 0020 01D9     		bls	.L12
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     uwTickPrio = TickPriority;
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   else
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     return HAL_ERROR;
 136              		.loc 1 250 0
 137 0022 0120     		movs	r0, #1
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 138              		.loc 1 255 0
 139 0024 10BD     		pop	{r4, pc}
 140              	.LVL4:
 141              	.L12:
ARM GAS  /tmp/ccjISXYN.s 			page 8


 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     uwTickPrio = TickPriority;
 142              		.loc 1 245 0
 143 0026 0022     		movs	r2, #0
 144 0028 2146     		mov	r1, r4
 145 002a 4FF0FF30 		mov	r0, #-1
 146 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 147              	.LVL5:
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 148              		.loc 1 246 0
 149 0032 054B     		ldr	r3, .L13+8
 150 0034 1C60     		str	r4, [r3]
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 151              		.loc 1 254 0
 152 0036 0020     		movs	r0, #0
 153 0038 10BD     		pop	{r4, pc}
 154              	.LVL6:
 155              	.L9:
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 156              		.loc 1 239 0
 157 003a 0120     		movs	r0, #1
 158 003c 10BD     		pop	{r4, pc}
 159              	.LVL7:
 160              	.L14:
 161 003e 00BF     		.align	2
 162              	.L13:
 163 0040 00000000 		.word	.LANCHOR0
 164 0044 00000000 		.word	SystemCoreClock
 165 0048 00000000 		.word	.LANCHOR1
 166              		.cfi_endproc
 167              	.LFE69:
 169              		.section	.text.HAL_Init,"ax",%progbits
 170              		.align	1
 171              		.global	HAL_Init
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu softvfp
 177              	HAL_Init:
 178              	.LFB65:
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 179              		.loc 1 143 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 08B5     		push	{r3, lr}
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 3, -8
 186              		.cfi_offset 14, -4
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 187              		.loc 1 152 0
 188 0002 074A     		ldr	r2, .L17
 189 0004 1368     		ldr	r3, [r2]
 190 0006 43F01003 		orr	r3, r3, #16
 191 000a 1360     		str	r3, [r2]
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 192              		.loc 1 157 0
 193 000c 0320     		movs	r0, #3
ARM GAS  /tmp/ccjISXYN.s 			page 9


 194 000e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 195              	.LVL8:
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 196              		.loc 1 160 0
 197 0012 0020     		movs	r0, #0
 198 0014 FFF7FEFF 		bl	HAL_InitTick
 199              	.LVL9:
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 200              		.loc 1 163 0
 201 0018 FFF7FEFF 		bl	HAL_MspInit
 202              	.LVL10:
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 203              		.loc 1 167 0
 204 001c 0020     		movs	r0, #0
 205 001e 08BD     		pop	{r3, pc}
 206              	.L18:
 207              		.align	2
 208              	.L17:
 209 0020 00200240 		.word	1073881088
 210              		.cfi_endproc
 211              	.LFE65:
 213              		.section	.text.HAL_IncTick,"ax",%progbits
 214              		.align	1
 215              		.weak	HAL_IncTick
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu softvfp
 221              	HAL_IncTick:
 222              	.LFB70:
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *  @brief    HAL Control functions
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                       ##### HAL Control functions #####
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]  This section provides functions allowing to:
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a tick value in millisecond
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a blocking delay in millisecond
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Suspend the time base source interrupt
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Resume the time base source interrupt
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the HAL API driver version
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device identifier
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device revision identifier
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
ARM GAS  /tmp/ccjISXYN.s 			page 10


 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        used as application time base.
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       in SysTick ISR.
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      implementations in user file.
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_IncTick(void)
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 223              		.loc 1 294 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uwTick += uwTickFreq;
 228              		.loc 1 295 0
 229 0000 034A     		ldr	r2, .L20
 230 0002 1168     		ldr	r1, [r2]
 231 0004 034B     		ldr	r3, .L20+4
 232 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 233 0008 0B44     		add	r3, r3, r1
 234 000a 1360     		str	r3, [r2]
 235 000c 7047     		bx	lr
 236              	.L21:
 237 000e 00BF     		.align	2
 238              	.L20:
 239 0010 00000000 		.word	uwTick
 240 0014 00000000 		.word	.LANCHOR0
 241              		.cfi_endproc
 242              	.LFE70:
 244              		.section	.text.HAL_GetTick,"ax",%progbits
 245              		.align	1
 246              		.weak	HAL_GetTick
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 250              		.fpu softvfp
 252              	HAL_GetTick:
 253              	.LFB71:
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Provides a tick value in millisecond.
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note  This function is declared as __weak to be overwritten in case of other
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick value
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 254              		.loc 1 305 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
ARM GAS  /tmp/ccjISXYN.s 			page 11


 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTick;
 259              		.loc 1 306 0
 260 0000 014B     		ldr	r3, .L23
 261 0002 1868     		ldr	r0, [r3]
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 262              		.loc 1 307 0
 263 0004 7047     		bx	lr
 264              	.L24:
 265 0006 00BF     		.align	2
 266              	.L23:
 267 0008 00000000 		.word	uwTick
 268              		.cfi_endproc
 269              	.LFE71:
 271              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 272              		.align	1
 273              		.global	HAL_GetTickPrio
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu softvfp
 279              	HAL_GetTickPrio:
 280              	.LFB72:
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function returns a tick priority.
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick priority
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 281              		.loc 1 314 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTickPrio;
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 286              		.loc 1 316 0
 287 0000 014B     		ldr	r3, .L26
 288 0002 1868     		ldr	r0, [r3]
 289 0004 7047     		bx	lr
 290              	.L27:
 291 0006 00BF     		.align	2
 292              	.L26:
 293 0008 00000000 		.word	.LANCHOR1
 294              		.cfi_endproc
 295              	.LFE72:
 297              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 298              		.align	1
 299              		.global	HAL_SetTickFreq
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu softvfp
 305              	HAL_SetTickFreq:
 306              	.LFB73:
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
ARM GAS  /tmp/ccjISXYN.s 			page 12


 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Set new tick Freq.
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval status
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 307              		.loc 1 323 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              	.LVL11:
 312 0000 10B5     		push	{r4, lr}
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 4, -8
 315              		.cfi_offset 14, -4
 316              	.LVL12:
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (uwTickFreq != Freq)
 317              		.loc 1 329 0
 318 0002 084B     		ldr	r3, .L32
 319 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 320 0006 8442     		cmp	r4, r0
 321 0008 0AD0     		beq	.L30
 322              	.LVL13:
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     /* Back up uwTickFreq frequency */
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     prevTickFreq = uwTickFreq;
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     uwTickFreq = Freq;
 323              		.loc 1 335 0
 324 000a 1870     		strb	r0, [r3]
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     /* Apply the new tick Freq  */
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 325              		.loc 1 338 0
 326 000c 064B     		ldr	r3, .L32+4
 327 000e 1868     		ldr	r0, [r3]
 328              	.LVL14:
 329 0010 FFF7FEFF 		bl	HAL_InitTick
 330              	.LVL15:
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     if (status != HAL_OK)
 331              		.loc 1 340 0
 332 0014 0346     		mov	r3, r0
 333 0016 08B1     		cbz	r0, .L29
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     {
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       /* Restore previous tick frequency */
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       uwTickFreq = prevTickFreq;
 334              		.loc 1 343 0
 335 0018 024A     		ldr	r2, .L32
 336 001a 1470     		strb	r4, [r2]
 337              	.LVL16:
 338              	.L29:
ARM GAS  /tmp/ccjISXYN.s 			page 13


 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     }
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return status;
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 339              		.loc 1 348 0
 340 001c 1846     		mov	r0, r3
 341 001e 10BD     		pop	{r4, pc}
 342              	.LVL17:
 343              	.L30:
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 344              		.loc 1 324 0
 345 0020 0023     		movs	r3, #0
 346 0022 FBE7     		b	.L29
 347              	.L33:
 348              		.align	2
 349              	.L32:
 350 0024 00000000 		.word	.LANCHOR0
 351 0028 00000000 		.word	.LANCHOR1
 352              		.cfi_endproc
 353              	.LFE73:
 355              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 356              		.align	1
 357              		.global	HAL_GetTickFreq
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 361              		.fpu softvfp
 363              	HAL_GetTickFreq:
 364              	.LFB74:
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Return tick frequency.
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick period in Hz
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 365              		.loc 1 355 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTickFreq;
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 370              		.loc 1 357 0
 371 0000 014B     		ldr	r3, .L35
 372 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 373 0004 7047     		bx	lr
 374              	.L36:
 375 0006 00BF     		.align	2
 376              	.L35:
 377 0008 00000000 		.word	.LANCHOR0
 378              		.cfi_endproc
 379              	.LFE74:
 381              		.section	.text.HAL_Delay,"ax",%progbits
 382              		.align	1
 383              		.weak	HAL_Delay
ARM GAS  /tmp/ccjISXYN.s 			page 14


 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu softvfp
 389              	HAL_Delay:
 390              	.LFB75:
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        on variable incremented.
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is incremented.
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 391              		.loc 1 371 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              	.LVL18:
 396 0000 38B5     		push	{r3, r4, r5, lr}
 397              		.cfi_def_cfa_offset 16
 398              		.cfi_offset 3, -16
 399              		.cfi_offset 4, -12
 400              		.cfi_offset 5, -8
 401              		.cfi_offset 14, -4
 402 0002 0446     		mov	r4, r0
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 403              		.loc 1 372 0
 404 0004 FFF7FEFF 		bl	HAL_GetTick
 405              	.LVL19:
 406 0008 0546     		mov	r5, r0
 407              	.LVL20:
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t wait = Delay;
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 408              		.loc 1 376 0
 409 000a B4F1FF3F 		cmp	r4, #-1
 410 000e 02D0     		beq	.L39
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 411              		.loc 1 378 0
 412 0010 044B     		ldr	r3, .L41
 413 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 414 0014 1C44     		add	r4, r4, r3
 415              	.LVL21:
 416              	.L39:
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 417              		.loc 1 381 0 discriminator 1
ARM GAS  /tmp/ccjISXYN.s 			page 15


 418 0016 FFF7FEFF 		bl	HAL_GetTick
 419              	.LVL22:
 420 001a 401B     		subs	r0, r0, r5
 421 001c 8442     		cmp	r4, r0
 422 001e FAD8     		bhi	.L39
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 423              		.loc 1 384 0
 424 0020 38BD     		pop	{r3, r4, r5, pc}
 425              	.LVL23:
 426              	.L42:
 427 0022 00BF     		.align	2
 428              	.L41:
 429 0024 00000000 		.word	.LANCHOR0
 430              		.cfi_endproc
 431              	.LFE75:
 433              		.section	.text.HAL_SuspendTick,"ax",%progbits
 434              		.align	1
 435              		.weak	HAL_SuspendTick
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu softvfp
 441              	HAL_SuspendTick:
 442              	.LFB76:
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Suspend Tick increment.
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is suspended.
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_SuspendTick(void)
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 443              		.loc 1 397 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Disable SysTick Interrupt */
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 448              		.loc 1 399 0
 449 0000 024A     		ldr	r2, .L44
 450 0002 1368     		ldr	r3, [r2]
 451 0004 23F00203 		bic	r3, r3, #2
 452 0008 1360     		str	r3, [r2]
 453 000a 7047     		bx	lr
 454              	.L45:
 455              		.align	2
 456              	.L44:
 457 000c 10E000E0 		.word	-536813552
 458              		.cfi_endproc
ARM GAS  /tmp/ccjISXYN.s 			page 16


 459              	.LFE76:
 461              		.section	.text.HAL_ResumeTick,"ax",%progbits
 462              		.align	1
 463              		.weak	HAL_ResumeTick
 464              		.syntax unified
 465              		.thumb
 466              		.thumb_func
 467              		.fpu softvfp
 469              	HAL_ResumeTick:
 470              	.LFB77:
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Resume Tick increment.
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is resumed.
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_ResumeTick(void)
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 471              		.loc 1 413 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Enable SysTick Interrupt */
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 476              		.loc 1 415 0
 477 0000 024A     		ldr	r2, .L47
 478 0002 1368     		ldr	r3, [r2]
 479 0004 43F00203 		orr	r3, r3, #2
 480 0008 1360     		str	r3, [r2]
 481 000a 7047     		bx	lr
 482              	.L48:
 483              		.align	2
 484              	.L47:
 485 000c 10E000E0 		.word	-536813552
 486              		.cfi_endproc
 487              	.LFE77:
 489              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 490              		.align	1
 491              		.global	HAL_GetHalVersion
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 495              		.fpu softvfp
 497              	HAL_GetHalVersion:
 498              	.LFB78:
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the HAL revision
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval version 0xXYZR (8bits for each decimal, R for RC)
ARM GAS  /tmp/ccjISXYN.s 			page 17


 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 499              		.loc 1 423 0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503              		@ link register save eliminated.
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return __STM32F1xx_HAL_VERSION;
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 504              		.loc 1 425 0
 505 0000 0048     		ldr	r0, .L50
 506 0002 7047     		bx	lr
 507              	.L51:
 508              		.align	2
 509              	.L50:
 510 0004 00070101 		.word	16844544
 511              		.cfi_endproc
 512              	.LFE78:
 514              		.section	.text.HAL_GetREVID,"ax",%progbits
 515              		.align	1
 516              		.global	HAL_GetREVID
 517              		.syntax unified
 518              		.thumb
 519              		.thumb_func
 520              		.fpu softvfp
 522              	HAL_GetREVID:
 523              	.LFB79:
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Returns the device revision identifier.
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device revision identifier
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetREVID(void)
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 524              		.loc 1 439 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return ((DBGMCU->IDCODE) >> DBGMCU_IDCODE_REV_ID_Pos);
 529              		.loc 1 440 0
 530 0000 014B     		ldr	r3, .L53
 531 0002 1868     		ldr	r0, [r3]
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 532              		.loc 1 441 0
 533 0004 000C     		lsrs	r0, r0, #16
 534 0006 7047     		bx	lr
 535              	.L54:
 536              		.align	2
ARM GAS  /tmp/ccjISXYN.s 			page 18


 537              	.L53:
 538 0008 002004E0 		.word	-536600576
 539              		.cfi_endproc
 540              	.LFE79:
 542              		.section	.text.HAL_GetDEVID,"ax",%progbits
 543              		.align	1
 544              		.global	HAL_GetDEVID
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 548              		.fpu softvfp
 550              	HAL_GetDEVID:
 551              	.LFB80:
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the device identifier.
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetDEVID(void)
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 552              		.loc 1 455 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return ((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 557              		.loc 1 456 0
 558 0000 024B     		ldr	r3, .L56
 559 0002 1868     		ldr	r0, [r3]
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 560              		.loc 1 457 0
 561 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 562 0008 7047     		bx	lr
 563              	.L57:
 564 000a 00BF     		.align	2
 565              	.L56:
 566 000c 002004E0 		.word	-536600576
 567              		.cfi_endproc
 568              	.LFE80:
 570              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 571              		.align	1
 572              		.global	HAL_GetUIDw0
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu softvfp
 578              	HAL_GetUIDw0:
 579              	.LFB81:
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
ARM GAS  /tmp/ccjISXYN.s 			page 19


 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 580              		.loc 1 464 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 585              		.loc 1 466 0
 586 0000 014B     		ldr	r3, .L59
 587 0002 1868     		ldr	r0, [r3]
 588 0004 7047     		bx	lr
 589              	.L60:
 590 0006 00BF     		.align	2
 591              	.L59:
 592 0008 E8F7FF1F 		.word	536868840
 593              		.cfi_endproc
 594              	.LFE81:
 596              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 597              		.align	1
 598              		.global	HAL_GetUIDw1
 599              		.syntax unified
 600              		.thumb
 601              		.thumb_func
 602              		.fpu softvfp
 604              	HAL_GetUIDw1:
 605              	.LFB82:
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 606              		.loc 1 473 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 0
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610              		@ link register save eliminated.
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 611              		.loc 1 475 0
 612 0000 014B     		ldr	r3, .L62
 613 0002 1868     		ldr	r0, [r3]
 614 0004 7047     		bx	lr
 615              	.L63:
 616 0006 00BF     		.align	2
 617              	.L62:
 618 0008 ECF7FF1F 		.word	536868844
 619              		.cfi_endproc
 620              	.LFE82:
 622              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 623              		.align	1
ARM GAS  /tmp/ccjISXYN.s 			page 20


 624              		.global	HAL_GetUIDw2
 625              		.syntax unified
 626              		.thumb
 627              		.thumb_func
 628              		.fpu softvfp
 630              	HAL_GetUIDw2:
 631              	.LFB83:
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 632              		.loc 1 482 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              		@ link register save eliminated.
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 637              		.loc 1 484 0
 638 0000 014B     		ldr	r3, .L65
 639 0002 1868     		ldr	r0, [r3]
 640 0004 7047     		bx	lr
 641              	.L66:
 642 0006 00BF     		.align	2
 643              	.L65:
 644 0008 F0F7FF1F 		.word	536868848
 645              		.cfi_endproc
 646              	.LFE83:
 648              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 649              		.align	1
 650              		.global	HAL_DBGMCU_EnableDBGSleepMode
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 654              		.fpu softvfp
 656              	HAL_DBGMCU_EnableDBGSleepMode:
 657              	.LFB84:
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 658              		.loc 1 491 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 663              		.loc 1 492 0
 664 0000 024A     		ldr	r2, .L68
 665 0002 5368     		ldr	r3, [r2, #4]
 666 0004 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/ccjISXYN.s 			page 21


 667 0008 5360     		str	r3, [r2, #4]
 668 000a 7047     		bx	lr
 669              	.L69:
 670              		.align	2
 671              	.L68:
 672 000c 002004E0 		.word	-536600576
 673              		.cfi_endproc
 674              	.LFE84:
 676              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 677              		.align	1
 678              		.global	HAL_DBGMCU_DisableDBGSleepMode
 679              		.syntax unified
 680              		.thumb
 681              		.thumb_func
 682              		.fpu softvfp
 684              	HAL_DBGMCU_DisableDBGSleepMode:
 685              	.LFB85:
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 686              		.loc 1 507 0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690              		@ link register save eliminated.
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 691              		.loc 1 508 0
 692 0000 024A     		ldr	r2, .L71
 693 0002 5368     		ldr	r3, [r2, #4]
 694 0004 23F00103 		bic	r3, r3, #1
 695 0008 5360     		str	r3, [r2, #4]
 696 000a 7047     		bx	lr
 697              	.L72:
 698              		.align	2
 699              	.L71:
 700 000c 002004E0 		.word	-536600576
 701              		.cfi_endproc
 702              	.LFE85:
 704              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 705              		.align	1
 706              		.global	HAL_DBGMCU_EnableDBGStopMode
 707              		.syntax unified
 708              		.thumb
 709              		.thumb_func
 710              		.fpu softvfp
ARM GAS  /tmp/ccjISXYN.s 			page 22


 712              	HAL_DBGMCU_EnableDBGStopMode:
 713              	.LFB86:
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 714              		.loc 1 537 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 719              		.loc 1 538 0
 720 0000 024A     		ldr	r2, .L74
 721 0002 5368     		ldr	r3, [r2, #4]
 722 0004 43F00203 		orr	r3, r3, #2
 723 0008 5360     		str	r3, [r2, #4]
 724 000a 7047     		bx	lr
 725              	.L75:
 726              		.align	2
 727              	.L74:
 728 000c 002004E0 		.word	-536600576
 729              		.cfi_endproc
 730              	.LFE86:
 732              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 733              		.align	1
 734              		.global	HAL_DBGMCU_DisableDBGStopMode
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 738              		.fpu softvfp
 740              	HAL_DBGMCU_DisableDBGStopMode:
ARM GAS  /tmp/ccjISXYN.s 			page 23


 741              	.LFB87:
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 742              		.loc 1 553 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 747              		.loc 1 554 0
 748 0000 024A     		ldr	r2, .L77
 749 0002 5368     		ldr	r3, [r2, #4]
 750 0004 23F00203 		bic	r3, r3, #2
 751 0008 5360     		str	r3, [r2, #4]
 752 000a 7047     		bx	lr
 753              	.L78:
 754              		.align	2
 755              	.L77:
 756 000c 002004E0 		.word	-536600576
 757              		.cfi_endproc
 758              	.LFE87:
 760              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 761              		.align	1
 762              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 766              		.fpu softvfp
 768              	HAL_DBGMCU_EnableDBGStandbyMode:
 769              	.LFB88:
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
ARM GAS  /tmp/ccjISXYN.s 			page 24


 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 770              		.loc 1 569 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 775              		.loc 1 570 0
 776 0000 024A     		ldr	r2, .L80
 777 0002 5368     		ldr	r3, [r2, #4]
 778 0004 43F00403 		orr	r3, r3, #4
 779 0008 5360     		str	r3, [r2, #4]
 780 000a 7047     		bx	lr
 781              	.L81:
 782              		.align	2
 783              	.L80:
 784 000c 002004E0 		.word	-536600576
 785              		.cfi_endproc
 786              	.LFE88:
 788              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 789              		.align	1
 790              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 794              		.fpu softvfp
 796              	HAL_DBGMCU_DisableDBGStandbyMode:
 797              	.LFB89:
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 798              		.loc 1 585 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              		@ link register save eliminated.
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 803              		.loc 1 586 0
 804 0000 024A     		ldr	r2, .L83
 805 0002 5368     		ldr	r3, [r2, #4]
 806 0004 23F00403 		bic	r3, r3, #4
 807 0008 5360     		str	r3, [r2, #4]
 808 000a 7047     		bx	lr
 809              	.L84:
 810              		.align	2
ARM GAS  /tmp/ccjISXYN.s 			page 25


 811              	.L83:
 812 000c 002004E0 		.word	-536600576
 813              		.cfi_endproc
 814              	.LFE89:
 816              		.global	uwTickFreq
 817              		.global	uwTickPrio
 818              		.comm	uwTick,4,4
 819              		.section	.data.uwTickFreq,"aw",%progbits
 820              		.set	.LANCHOR0,. + 0
 823              	uwTickFreq:
 824 0000 01       		.byte	1
 825              		.section	.data.uwTickPrio,"aw",%progbits
 826              		.align	2
 827              		.set	.LANCHOR1,. + 0
 830              	uwTickPrio:
 831 0000 10000000 		.word	16
 832              		.text
 833              	.Letext0:
 834              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 835              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 836              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 837              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 838              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
 839              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 840              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 841              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccjISXYN.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal.c
     /tmp/ccjISXYN.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccjISXYN.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccjISXYN.s:36     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccjISXYN.s:43     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccjISXYN.s:55     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccjISXYN.s:62     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccjISXYN.s:97     .text.HAL_DeInit:0000000000000020 $d
     /tmp/ccjISXYN.s:102    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccjISXYN.s:109    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccjISXYN.s:163    .text.HAL_InitTick:0000000000000040 $d
     /tmp/ccjISXYN.s:170    .text.HAL_Init:0000000000000000 $t
     /tmp/ccjISXYN.s:177    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccjISXYN.s:209    .text.HAL_Init:0000000000000020 $d
     /tmp/ccjISXYN.s:214    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccjISXYN.s:221    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccjISXYN.s:239    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccjISXYN.s:245    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccjISXYN.s:252    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccjISXYN.s:267    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccjISXYN.s:272    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccjISXYN.s:279    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccjISXYN.s:293    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccjISXYN.s:298    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccjISXYN.s:305    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccjISXYN.s:350    .text.HAL_SetTickFreq:0000000000000024 $d
     /tmp/ccjISXYN.s:356    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccjISXYN.s:363    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccjISXYN.s:377    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccjISXYN.s:382    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccjISXYN.s:389    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccjISXYN.s:429    .text.HAL_Delay:0000000000000024 $d
     /tmp/ccjISXYN.s:434    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccjISXYN.s:441    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccjISXYN.s:457    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccjISXYN.s:462    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccjISXYN.s:469    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccjISXYN.s:485    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccjISXYN.s:490    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccjISXYN.s:497    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccjISXYN.s:510    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccjISXYN.s:515    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccjISXYN.s:522    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccjISXYN.s:538    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccjISXYN.s:543    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccjISXYN.s:550    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccjISXYN.s:566    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccjISXYN.s:571    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccjISXYN.s:578    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccjISXYN.s:592    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccjISXYN.s:597    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccjISXYN.s:604    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccjISXYN.s:618    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccjISXYN.s:623    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccjISXYN.s:630    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
ARM GAS  /tmp/ccjISXYN.s 			page 27


     /tmp/ccjISXYN.s:644    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/ccjISXYN.s:649    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccjISXYN.s:656    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccjISXYN.s:672    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/ccjISXYN.s:677    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccjISXYN.s:684    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccjISXYN.s:700    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/ccjISXYN.s:705    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccjISXYN.s:712    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccjISXYN.s:728    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccjISXYN.s:733    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccjISXYN.s:740    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccjISXYN.s:756    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccjISXYN.s:761    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccjISXYN.s:768    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccjISXYN.s:784    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccjISXYN.s:789    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccjISXYN.s:796    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccjISXYN.s:812    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccjISXYN.s:823    .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccjISXYN.s:830    .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccjISXYN.s:826    .data.uwTickPrio:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
