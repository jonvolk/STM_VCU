ARM GAS  /tmp/ccCNUOP5.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"can_setup.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_CAN_RxFifo0MsgPendingCallback
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_CAN_RxFifo0MsgPendingCallback:
  25              	.LVL0:
  26              	.LFB68:
  27              		.file 1 "Core/Src/can_setup.c"
   1:Core/Src/can_setup.c **** #include <can_setup.h>
   2:Core/Src/can_setup.c **** #include "btld_jump.h"
   3:Core/Src/can_setup.c **** 
   4:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
   5:Core/Src/can_setup.c **** 
   6:Core/Src/can_setup.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan1)
   7:Core/Src/can_setup.c **** {
  28              		.loc 1 7 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 7 1 is_stmt 0 view .LVU1
  33 0000 00B5     		push	{lr}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 8BB0     		sub	sp, sp, #44
  37              		.cfi_def_cfa_offset 48
   8:Core/Src/can_setup.c **** 
   9:Core/Src/can_setup.c ****     CAN_RxHeaderTypeDef rxMsg;
  38              		.loc 1 9 5 is_stmt 1 view .LVU2
  10:Core/Src/can_setup.c ****     uint8_t canRx[8];
  39              		.loc 1 10 5 view .LVU3
  11:Core/Src/can_setup.c **** 
  12:Core/Src/can_setup.c ****     if (HAL_CAN_GetRxMessage(hcan1, CAN_RX_FIFO0, &rxMsg, canRx) != HAL_OK)
  40              		.loc 1 12 5 view .LVU4
  41              		.loc 1 12 9 is_stmt 0 view .LVU5
  42 0004 01AB     		add	r3, sp, #4
  43 0006 03AA     		add	r2, sp, #12
  44 0008 0021     		movs	r1, #0
  45 000a FFF7FEFF 		bl	HAL_CAN_GetRxMessage
  46              	.LVL1:
ARM GAS  /tmp/ccCNUOP5.s 			page 2


  47              		.loc 1 12 8 view .LVU6
  48 000e 70B9     		cbnz	r0, .L4
  49              	.L2:
  13:Core/Src/can_setup.c ****     {
  14:Core/Src/can_setup.c ****         Error_Handler();
  15:Core/Src/can_setup.c ****     }
  16:Core/Src/can_setup.c ****     // do stuff
  17:Core/Src/can_setup.c ****     jumpToBootloader(&rxMsg,canRx);
  50              		.loc 1 17 5 is_stmt 1 view .LVU7
  51 0010 01A9     		add	r1, sp, #4
  52 0012 03A8     		add	r0, sp, #12
  53 0014 FFF7FEFF 		bl	jumpToBootloader
  54              	.LVL2:
  18:Core/Src/can_setup.c ****     decodeCAN(&rxMsg, canRx);
  55              		.loc 1 18 5 view .LVU8
  56 0018 01A9     		add	r1, sp, #4
  57 001a 03A8     		add	r0, sp, #12
  58 001c FFF7FEFF 		bl	decodeCAN
  59              	.LVL3:
  19:Core/Src/can_setup.c ****     getLidar(&rxMsg, canRx);
  60              		.loc 1 19 5 view .LVU9
  61 0020 01A9     		add	r1, sp, #4
  62 0022 03A8     		add	r0, sp, #12
  63 0024 FFF7FEFF 		bl	getLidar
  64              	.LVL4:
  20:Core/Src/can_setup.c **** }
  65              		.loc 1 20 1 is_stmt 0 view .LVU10
  66 0028 0BB0     		add	sp, sp, #44
  67              		.cfi_remember_state
  68              		.cfi_def_cfa_offset 4
  69              		@ sp needed
  70 002a 5DF804FB 		ldr	pc, [sp], #4
  71              	.L4:
  72              		.cfi_restore_state
  14:Core/Src/can_setup.c ****     }
  73              		.loc 1 14 9 is_stmt 1 view .LVU11
  74 002e FFF7FEFF 		bl	Error_Handler
  75              	.LVL5:
  76 0032 EDE7     		b	.L2
  77              		.cfi_endproc
  78              	.LFE68:
  80              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
  81              		.align	1
  82              		.global	HAL_CAN_RxFifo1MsgPendingCallback
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu softvfp
  88              	HAL_CAN_RxFifo1MsgPendingCallback:
  89              	.LVL6:
  90              	.LFB69:
  21:Core/Src/can_setup.c **** 
  22:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  23:Core/Src/can_setup.c **** 
  24:Core/Src/can_setup.c **** void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan2)
  25:Core/Src/can_setup.c **** {
  91              		.loc 1 25 1 view -0
ARM GAS  /tmp/ccCNUOP5.s 			page 3


  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 40
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		.loc 1 25 1 is_stmt 0 view .LVU13
  96 0000 00B5     		push	{lr}
  97              		.cfi_def_cfa_offset 4
  98              		.cfi_offset 14, -4
  99 0002 8BB0     		sub	sp, sp, #44
 100              		.cfi_def_cfa_offset 48
  26:Core/Src/can_setup.c **** 
  27:Core/Src/can_setup.c ****     CAN_RxHeaderTypeDef rxMsg2;
 101              		.loc 1 27 5 is_stmt 1 view .LVU14
  28:Core/Src/can_setup.c ****     uint8_t canRx2[8];
 102              		.loc 1 28 5 view .LVU15
  29:Core/Src/can_setup.c **** 
  30:Core/Src/can_setup.c ****     if (HAL_CAN_GetRxMessage(hcan2, CAN_RX_FIFO1, &rxMsg2, canRx2) != HAL_OK)
 103              		.loc 1 30 5 view .LVU16
 104              		.loc 1 30 9 is_stmt 0 view .LVU17
 105 0004 01AB     		add	r3, sp, #4
 106 0006 03AA     		add	r2, sp, #12
 107 0008 0121     		movs	r1, #1
 108 000a FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 109              	.LVL7:
 110              		.loc 1 30 8 view .LVU18
 111 000e 50B9     		cbnz	r0, .L8
 112              	.L6:
  31:Core/Src/can_setup.c ****     {
  32:Core/Src/can_setup.c ****         Error_Handler();
  33:Core/Src/can_setup.c ****     }
  34:Core/Src/can_setup.c ****     // do stuff
  35:Core/Src/can_setup.c ****     getData(&rxMsg2, canRx2);
 113              		.loc 1 35 5 is_stmt 1 view .LVU19
 114 0010 01A9     		add	r1, sp, #4
 115 0012 03A8     		add	r0, sp, #12
 116 0014 FFF7FEFF 		bl	getData
 117              	.LVL8:
  36:Core/Src/can_setup.c ****     getEvent(&rxMsg2, canRx2);
 118              		.loc 1 36 5 view .LVU20
 119 0018 01A9     		add	r1, sp, #4
 120 001a 03A8     		add	r0, sp, #12
 121 001c FFF7FEFF 		bl	getEvent
 122              	.LVL9:
  37:Core/Src/can_setup.c **** }
 123              		.loc 1 37 1 is_stmt 0 view .LVU21
 124 0020 0BB0     		add	sp, sp, #44
 125              		.cfi_remember_state
 126              		.cfi_def_cfa_offset 4
 127              		@ sp needed
 128 0022 5DF804FB 		ldr	pc, [sp], #4
 129              	.L8:
 130              		.cfi_restore_state
  32:Core/Src/can_setup.c ****     }
 131              		.loc 1 32 9 is_stmt 1 view .LVU22
 132 0026 FFF7FEFF 		bl	Error_Handler
 133              	.LVL10:
 134 002a F1E7     		b	.L6
 135              		.cfi_endproc
ARM GAS  /tmp/ccCNUOP5.s 			page 4


 136              	.LFE69:
 138              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 139              		.align	1
 140              		.global	HAL_CAN_ErrorCallback
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu softvfp
 146              	HAL_CAN_ErrorCallback:
 147              	.LVL11:
 148              	.LFB70:
  38:Core/Src/can_setup.c **** 
  39:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  40:Core/Src/can_setup.c **** void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
  41:Core/Src/can_setup.c **** {
 149              		.loc 1 41 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
  42:Core/Src/can_setup.c **** }
 154              		.loc 1 42 1 view .LVU24
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE70:
 159              		.section	.text.canSettings,"ax",%progbits
 160              		.align	1
 161              		.global	canSettings
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu softvfp
 167              	canSettings:
 168              	.LFB71:
  43:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  44:Core/Src/can_setup.c **** void canSettings(void)
  45:Core/Src/can_setup.c **** {
 169              		.loc 1 45 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173 0000 10B5     		push	{r4, lr}
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 4, -8
 176              		.cfi_offset 14, -4
  46:Core/Src/can_setup.c **** 
  47:Core/Src/can_setup.c ****     txMsg.IDE = CAN_ID_STD;
 177              		.loc 1 47 5 view .LVU26
 178              		.loc 1 47 15 is_stmt 0 view .LVU27
 179 0002 6A4A     		ldr	r2, .L30
 180 0004 0023     		movs	r3, #0
 181 0006 9360     		str	r3, [r2, #8]
  48:Core/Src/can_setup.c ****     txMsg.RTR = CAN_RTR_DATA;
 182              		.loc 1 48 5 is_stmt 1 view .LVU28
 183              		.loc 1 48 15 is_stmt 0 view .LVU29
 184 0008 D360     		str	r3, [r2, #12]
  49:Core/Src/can_setup.c ****     txMsg.TransmitGlobalTime = DISABLE;
ARM GAS  /tmp/ccCNUOP5.s 			page 5


 185              		.loc 1 49 5 is_stmt 1 view .LVU30
 186              		.loc 1 49 30 is_stmt 0 view .LVU31
 187 000a 1375     		strb	r3, [r2, #20]
  50:Core/Src/can_setup.c **** 
  51:Core/Src/can_setup.c ****     txMsgExt.IDE = CAN_ID_EXT;
 188              		.loc 1 51 5 is_stmt 1 view .LVU32
 189              		.loc 1 51 18 is_stmt 0 view .LVU33
 190 000c 684A     		ldr	r2, .L30+4
 191 000e 0421     		movs	r1, #4
 192 0010 9160     		str	r1, [r2, #8]
  52:Core/Src/can_setup.c ****     txMsgExt.RTR = CAN_RTR_DATA;
 193              		.loc 1 52 5 is_stmt 1 view .LVU34
 194              		.loc 1 52 18 is_stmt 0 view .LVU35
 195 0012 D360     		str	r3, [r2, #12]
  53:Core/Src/can_setup.c ****     txMsgExt.TransmitGlobalTime = DISABLE;
 196              		.loc 1 53 5 is_stmt 1 view .LVU36
 197              		.loc 1 53 33 is_stmt 0 view .LVU37
 198 0014 1375     		strb	r3, [r2, #20]
  54:Core/Src/can_setup.c **** 
  55:Core/Src/can_setup.c ****     sf.FilterBank = 0; // CAN1 Filter bank starts at 0
 199              		.loc 1 55 5 is_stmt 1 view .LVU38
 200              		.loc 1 55 19 is_stmt 0 view .LVU39
 201 0016 6749     		ldr	r1, .L30+8
 202 0018 4B61     		str	r3, [r1, #20]
  56:Core/Src/can_setup.c ****     sf.FilterMode = CAN_FILTERMODE_IDLIST;
 203              		.loc 1 56 5 is_stmt 1 view .LVU40
 204              		.loc 1 56 19 is_stmt 0 view .LVU41
 205 001a 0122     		movs	r2, #1
 206 001c 8A61     		str	r2, [r1, #24]
  57:Core/Src/can_setup.c ****     sf.FilterScale = CAN_FILTERSCALE_16BIT;
 207              		.loc 1 57 5 is_stmt 1 view .LVU42
 208              		.loc 1 57 20 is_stmt 0 view .LVU43
 209 001e CB61     		str	r3, [r1, #28]
  58:Core/Src/can_setup.c ****     sf.FilterIdLow = 0x1D6 << 5;      // DCDC DATA
 210              		.loc 1 58 5 is_stmt 1 view .LVU44
 211              		.loc 1 58 20 is_stmt 0 view .LVU45
 212 0020 4FF46B50 		mov	r0, #15040
 213 0024 4860     		str	r0, [r1, #4]
  59:Core/Src/can_setup.c ****     sf.FilterIdHigh = 0x04F << 5;     // LDU DIR BRAKE
 214              		.loc 1 59 5 is_stmt 1 view .LVU46
 215              		.loc 1 59 21 is_stmt 0 view .LVU47
 216 0026 4FF41E60 		mov	r0, #2528
 217 002a 0860     		str	r0, [r1]
  60:Core/Src/can_setup.c ****     sf.FilterMaskIdLow = 0x113 << 5;  // LDU POT1 POT2
 218              		.loc 1 60 5 is_stmt 1 view .LVU48
 219              		.loc 1 60 24 is_stmt 0 view .LVU49
 220 002c 42F26020 		movw	r0, #8800
 221 0030 C860     		str	r0, [r1, #12]
  61:Core/Src/can_setup.c ****     sf.FilterMaskIdHigh = 0x131 << 5; // LDU DIO
 222              		.loc 1 61 5 is_stmt 1 view .LVU50
 223              		.loc 1 61 25 is_stmt 0 view .LVU51
 224 0032 42F22060 		movw	r0, #9760
 225 0036 8860     		str	r0, [r1, #8]
  62:Core/Src/can_setup.c ****     sf.FilterFIFOAssignment = CAN_RX_FIFO0;
 226              		.loc 1 62 5 is_stmt 1 view .LVU52
 227              		.loc 1 62 29 is_stmt 0 view .LVU53
 228 0038 0B61     		str	r3, [r1, #16]
ARM GAS  /tmp/ccCNUOP5.s 			page 6


  63:Core/Src/can_setup.c ****     sf.SlaveStartFilterBank = 14;
 229              		.loc 1 63 5 is_stmt 1 view .LVU54
 230              		.loc 1 63 29 is_stmt 0 view .LVU55
 231 003a 0E23     		movs	r3, #14
 232 003c 4B62     		str	r3, [r1, #36]
  64:Core/Src/can_setup.c ****     sf.FilterActivation = ENABLE;
 233              		.loc 1 64 5 is_stmt 1 view .LVU56
 234              		.loc 1 64 25 is_stmt 0 view .LVU57
 235 003e 0A62     		str	r2, [r1, #32]
  65:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan1, &sf) != HAL_OK)
 236              		.loc 1 65 5 is_stmt 1 view .LVU58
 237              		.loc 1 65 9 is_stmt 0 view .LVU59
 238 0040 5D48     		ldr	r0, .L30+12
 239 0042 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 240              	.LVL12:
 241              		.loc 1 65 8 view .LVU60
 242 0046 0028     		cmp	r0, #0
 243 0048 40F09480 		bne	.L21
 244              	.L11:
  66:Core/Src/can_setup.c ****     {
  67:Core/Src/can_setup.c ****         Error_Handler();
  68:Core/Src/can_setup.c ****     }
  69:Core/Src/can_setup.c **** 
  70:Core/Src/can_setup.c ****     sf3.FilterBank = 4; // CAN2 Filter bank starts at 14
 245              		.loc 1 70 5 is_stmt 1 view .LVU61
 246              		.loc 1 70 20 is_stmt 0 view .LVU62
 247 004c 5B49     		ldr	r1, .L30+16
 248 004e 0423     		movs	r3, #4
 249 0050 4B61     		str	r3, [r1, #20]
  71:Core/Src/can_setup.c ****     sf3.FilterMode = CAN_FILTERMODE_IDLIST;
 250              		.loc 1 71 5 is_stmt 1 view .LVU63
 251              		.loc 1 71 20 is_stmt 0 view .LVU64
 252 0052 0123     		movs	r3, #1
 253 0054 8B61     		str	r3, [r1, #24]
  72:Core/Src/can_setup.c ****     sf3.FilterScale = CAN_FILTERSCALE_32BIT;
 254              		.loc 1 72 5 is_stmt 1 view .LVU65
 255              		.loc 1 72 21 is_stmt 0 view .LVU66
 256 0056 CB61     		str	r3, [r1, #28]
  73:Core/Src/can_setup.c ****     sf3.FilterIdLow = ((0x0000FF01 << 3) & 0xFFF8) | 4; // BOOTLOADER
 257              		.loc 1 73 5 is_stmt 1 view .LVU67
 258              		.loc 1 73 21 is_stmt 0 view .LVU68
 259 0058 4FF60C00 		movw	r0, #63500
 260 005c 4860     		str	r0, [r1, #4]
  74:Core/Src/can_setup.c ****     sf3.FilterIdHigh = (0x0000FF01 >> 13) & 0xFFFF;
 261              		.loc 1 74 5 is_stmt 1 view .LVU69
 262              		.loc 1 74 22 is_stmt 0 view .LVU70
 263 005e 0722     		movs	r2, #7
 264 0060 0A60     		str	r2, [r1]
  75:Core/Src/can_setup.c ****     sf3.FilterMaskIdLow = ((0x0000FF01 << 3) & 0xFFF8) | 4; // BOOTLOADER
 265              		.loc 1 75 5 is_stmt 1 view .LVU71
 266              		.loc 1 75 25 is_stmt 0 view .LVU72
 267 0062 C860     		str	r0, [r1, #12]
  76:Core/Src/can_setup.c ****     sf3.FilterMaskIdHigh = (0x0000FF01 >> 13) & 0xFFFF;
 268              		.loc 1 76 5 is_stmt 1 view .LVU73
 269              		.loc 1 76 26 is_stmt 0 view .LVU74
 270 0064 8A60     		str	r2, [r1, #8]
  77:Core/Src/can_setup.c ****     sf3.FilterFIFOAssignment = CAN_RX_FIFO0;
ARM GAS  /tmp/ccCNUOP5.s 			page 7


 271              		.loc 1 77 5 is_stmt 1 view .LVU75
 272              		.loc 1 77 30 is_stmt 0 view .LVU76
 273 0066 0022     		movs	r2, #0
 274 0068 0A61     		str	r2, [r1, #16]
  78:Core/Src/can_setup.c ****     sf3.SlaveStartFilterBank = 14;
 275              		.loc 1 78 5 is_stmt 1 view .LVU77
 276              		.loc 1 78 30 is_stmt 0 view .LVU78
 277 006a 0E22     		movs	r2, #14
 278 006c 4A62     		str	r2, [r1, #36]
  79:Core/Src/can_setup.c ****     sf3.FilterActivation = ENABLE;
 279              		.loc 1 79 5 is_stmt 1 view .LVU79
 280              		.loc 1 79 26 is_stmt 0 view .LVU80
 281 006e 0B62     		str	r3, [r1, #32]
  80:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan1, &sf3) != HAL_OK)
 282              		.loc 1 80 5 is_stmt 1 view .LVU81
 283              		.loc 1 80 9 is_stmt 0 view .LVU82
 284 0070 5148     		ldr	r0, .L30+12
 285 0072 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 286              	.LVL13:
 287              		.loc 1 80 8 view .LVU83
 288 0076 0028     		cmp	r0, #0
 289 0078 7FD1     		bne	.L22
 290              	.L12:
  81:Core/Src/can_setup.c ****     {
  82:Core/Src/can_setup.c ****         Error_Handler();
  83:Core/Src/can_setup.c ****     }
  84:Core/Src/can_setup.c **** 
  85:Core/Src/can_setup.c ****     sf4.FilterBank = 1; // CAN1 Filter bank starts at 0
 291              		.loc 1 85 5 is_stmt 1 view .LVU84
 292              		.loc 1 85 20 is_stmt 0 view .LVU85
 293 007a 5149     		ldr	r1, .L30+20
 294 007c 0123     		movs	r3, #1
 295 007e 4B61     		str	r3, [r1, #20]
  86:Core/Src/can_setup.c ****     sf4.FilterMode = CAN_FILTERMODE_IDLIST;
 296              		.loc 1 86 5 is_stmt 1 view .LVU86
 297              		.loc 1 86 20 is_stmt 0 view .LVU87
 298 0080 8B61     		str	r3, [r1, #24]
  87:Core/Src/can_setup.c ****     sf4.FilterScale = CAN_FILTERSCALE_16BIT;
 299              		.loc 1 87 5 is_stmt 1 view .LVU88
 300              		.loc 1 87 21 is_stmt 0 view .LVU89
 301 0082 0022     		movs	r2, #0
 302 0084 CA61     		str	r2, [r1, #28]
  88:Core/Src/can_setup.c ****     sf4.FilterIdLow = 0x135 << 5;      // LDU AMPS,RPM,HSTEMP,POTNOM
 303              		.loc 1 88 5 is_stmt 1 view .LVU90
 304              		.loc 1 88 21 is_stmt 0 view .LVU91
 305 0086 42F2A060 		movw	r0, #9888
 306 008a 4860     		str	r0, [r1, #4]
  89:Core/Src/can_setup.c ****     sf4.FilterIdHigh = 0x136 << 5;     // LDU PACK VOLT, RUN
 307              		.loc 1 89 5 is_stmt 1 view .LVU92
 308              		.loc 1 89 22 is_stmt 0 view .LVU93
 309 008c 4FF41B50 		mov	r0, #9920
 310 0090 0860     		str	r0, [r1]
  90:Core/Src/can_setup.c ****     sf4.FilterMaskIdLow = 0x138 << 5;  // BMS1
 311              		.loc 1 90 5 is_stmt 1 view .LVU94
 312              		.loc 1 90 25 is_stmt 0 view .LVU95
 313 0092 4FF41C50 		mov	r0, #9984
 314 0096 C860     		str	r0, [r1, #12]
ARM GAS  /tmp/ccCNUOP5.s 			page 8


  91:Core/Src/can_setup.c ****     sf4.FilterMaskIdHigh = 0x139 << 5; // BMS2
 315              		.loc 1 91 5 is_stmt 1 view .LVU96
 316              		.loc 1 91 26 is_stmt 0 view .LVU97
 317 0098 42F22070 		movw	r0, #10016
 318 009c 8860     		str	r0, [r1, #8]
  92:Core/Src/can_setup.c ****     sf4.FilterFIFOAssignment = CAN_RX_FIFO0;
 319              		.loc 1 92 5 is_stmt 1 view .LVU98
 320              		.loc 1 92 30 is_stmt 0 view .LVU99
 321 009e 0A61     		str	r2, [r1, #16]
  93:Core/Src/can_setup.c ****     sf4.SlaveStartFilterBank = 14;
 322              		.loc 1 93 5 is_stmt 1 view .LVU100
 323              		.loc 1 93 30 is_stmt 0 view .LVU101
 324 00a0 0E22     		movs	r2, #14
 325 00a2 4A62     		str	r2, [r1, #36]
  94:Core/Src/can_setup.c ****     sf4.FilterActivation = ENABLE;
 326              		.loc 1 94 5 is_stmt 1 view .LVU102
 327              		.loc 1 94 26 is_stmt 0 view .LVU103
 328 00a4 0B62     		str	r3, [r1, #32]
  95:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan1, &sf4) != HAL_OK)
 329              		.loc 1 95 5 is_stmt 1 view .LVU104
 330              		.loc 1 95 9 is_stmt 0 view .LVU105
 331 00a6 4448     		ldr	r0, .L30+12
 332 00a8 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 333              	.LVL14:
 334              		.loc 1 95 8 view .LVU106
 335 00ac 0028     		cmp	r0, #0
 336 00ae 67D1     		bne	.L23
 337              	.L13:
  96:Core/Src/can_setup.c ****     {
  97:Core/Src/can_setup.c ****         Error_Handler();
  98:Core/Src/can_setup.c ****     }
  99:Core/Src/can_setup.c **** 
 100:Core/Src/can_setup.c ****     sf5.FilterBank = 2; // CAN1 Filter bank starts at 0
 338              		.loc 1 100 5 is_stmt 1 view .LVU107
 339              		.loc 1 100 20 is_stmt 0 view .LVU108
 340 00b0 4449     		ldr	r1, .L30+24
 341 00b2 0223     		movs	r3, #2
 342 00b4 4B61     		str	r3, [r1, #20]
 101:Core/Src/can_setup.c ****     sf5.FilterMode = CAN_FILTERMODE_IDLIST;
 343              		.loc 1 101 5 is_stmt 1 view .LVU109
 344              		.loc 1 101 20 is_stmt 0 view .LVU110
 345 00b6 0123     		movs	r3, #1
 346 00b8 8B61     		str	r3, [r1, #24]
 102:Core/Src/can_setup.c ****     sf5.FilterScale = CAN_FILTERSCALE_16BIT;
 347              		.loc 1 102 5 is_stmt 1 view .LVU111
 348              		.loc 1 102 21 is_stmt 0 view .LVU112
 349 00ba 0022     		movs	r2, #0
 350 00bc CA61     		str	r2, [r1, #28]
 103:Core/Src/can_setup.c ****     sf5.FilterIdLow = 0x109 << 5;      // CHARGER STATUS
 351              		.loc 1 103 5 is_stmt 1 view .LVU113
 352              		.loc 1 103 21 is_stmt 0 view .LVU114
 353 00be 42F22010 		movw	r0, #8480
 354 00c2 4860     		str	r0, [r1, #4]
 104:Core/Src/can_setup.c ****     sf5.FilterIdHigh = 0x38E << 5;     // IBOOST
 355              		.loc 1 104 5 is_stmt 1 view .LVU115
 356              		.loc 1 104 22 is_stmt 0 view .LVU116
 357 00c4 47F2C010 		movw	r0, #29120
ARM GAS  /tmp/ccCNUOP5.s 			page 9


 358 00c8 0860     		str	r0, [r1]
 105:Core/Src/can_setup.c ****     sf5.FilterMaskIdLow = 0x581 << 5;  // CANOPEN
 359              		.loc 1 105 5 is_stmt 1 view .LVU117
 360              		.loc 1 105 25 is_stmt 0 view .LVU118
 361 00ca 4BF22000 		movw	r0, #45088
 362 00ce C860     		str	r0, [r1, #12]
 106:Core/Src/can_setup.c ****     sf5.FilterMaskIdHigh = 0x601 << 5; // CANOPEN
 363              		.loc 1 106 5 is_stmt 1 view .LVU119
 364              		.loc 1 106 26 is_stmt 0 view .LVU120
 365 00d0 4CF22000 		movw	r0, #49184
 366 00d4 8860     		str	r0, [r1, #8]
 107:Core/Src/can_setup.c ****     sf5.FilterFIFOAssignment = CAN_RX_FIFO0;
 367              		.loc 1 107 5 is_stmt 1 view .LVU121
 368              		.loc 1 107 30 is_stmt 0 view .LVU122
 369 00d6 0A61     		str	r2, [r1, #16]
 108:Core/Src/can_setup.c ****     sf5.SlaveStartFilterBank = 14;
 370              		.loc 1 108 5 is_stmt 1 view .LVU123
 371              		.loc 1 108 30 is_stmt 0 view .LVU124
 372 00d8 0E22     		movs	r2, #14
 373 00da 4A62     		str	r2, [r1, #36]
 109:Core/Src/can_setup.c ****     sf5.FilterActivation = ENABLE;
 374              		.loc 1 109 5 is_stmt 1 view .LVU125
 375              		.loc 1 109 26 is_stmt 0 view .LVU126
 376 00dc 0B62     		str	r3, [r1, #32]
 110:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan1, &sf5) != HAL_OK)
 377              		.loc 1 110 5 is_stmt 1 view .LVU127
 378              		.loc 1 110 9 is_stmt 0 view .LVU128
 379 00de 3648     		ldr	r0, .L30+12
 380 00e0 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 381              	.LVL15:
 382              		.loc 1 110 8 view .LVU129
 383 00e4 0028     		cmp	r0, #0
 384 00e6 4ED1     		bne	.L24
 385              	.L14:
 111:Core/Src/can_setup.c ****     {
 112:Core/Src/can_setup.c ****         Error_Handler();
 113:Core/Src/can_setup.c ****     }
 114:Core/Src/can_setup.c ****     if (HAL_CAN_Start(&hcan1) != HAL_OK)
 386              		.loc 1 114 5 is_stmt 1 view .LVU130
 387              		.loc 1 114 9 is_stmt 0 view .LVU131
 388 00e8 3348     		ldr	r0, .L30+12
 389 00ea FFF7FEFF 		bl	HAL_CAN_Start
 390              	.LVL16:
 391              		.loc 1 114 8 view .LVU132
 392 00ee 0028     		cmp	r0, #0
 393 00f0 4CD1     		bne	.L25
 394              	.L15:
 115:Core/Src/can_setup.c ****     {
 116:Core/Src/can_setup.c ****         Error_Handler();
 117:Core/Src/can_setup.c ****     }
 118:Core/Src/can_setup.c **** 
 119:Core/Src/can_setup.c ****     if (HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING) != HAL_OK)
 395              		.loc 1 119 5 is_stmt 1 view .LVU133
 396              		.loc 1 119 9 is_stmt 0 view .LVU134
 397 00f2 0221     		movs	r1, #2
 398 00f4 3048     		ldr	r0, .L30+12
 399 00f6 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
ARM GAS  /tmp/ccCNUOP5.s 			page 10


 400              	.LVL17:
 401              		.loc 1 119 8 view .LVU135
 402 00fa 0028     		cmp	r0, #0
 403 00fc 49D1     		bne	.L26
 404              	.L16:
 120:Core/Src/can_setup.c ****     {
 121:Core/Src/can_setup.c ****         Error_Handler();
 122:Core/Src/can_setup.c ****     }
 123:Core/Src/can_setup.c ****     HAL_NVIC_SetPriority(CAN1_TX_IRQn, 3, 0);
 405              		.loc 1 123 5 is_stmt 1 view .LVU136
 406 00fe 0022     		movs	r2, #0
 407 0100 0321     		movs	r1, #3
 408 0102 1320     		movs	r0, #19
 409 0104 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 410              	.LVL18:
 124:Core/Src/can_setup.c ****     HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 411              		.loc 1 124 5 view .LVU137
 412 0108 1320     		movs	r0, #19
 413 010a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 414              	.LVL19:
 125:Core/Src/can_setup.c **** 
 126:Core/Src/can_setup.c ****     // hcan2
 127:Core/Src/can_setup.c ****     txMsg2.IDE = CAN_ID_STD;
 415              		.loc 1 127 5 view .LVU138
 416              		.loc 1 127 16 is_stmt 0 view .LVU139
 417 010e 2E4A     		ldr	r2, .L30+28
 418 0110 0023     		movs	r3, #0
 419 0112 9360     		str	r3, [r2, #8]
 128:Core/Src/can_setup.c ****     txMsg2.RTR = CAN_RTR_DATA;
 420              		.loc 1 128 5 is_stmt 1 view .LVU140
 421              		.loc 1 128 16 is_stmt 0 view .LVU141
 422 0114 D360     		str	r3, [r2, #12]
 129:Core/Src/can_setup.c ****     txMsg2.TransmitGlobalTime = DISABLE;
 423              		.loc 1 129 5 is_stmt 1 view .LVU142
 424              		.loc 1 129 31 is_stmt 0 view .LVU143
 425 0116 1375     		strb	r3, [r2, #20]
 130:Core/Src/can_setup.c **** 
 131:Core/Src/can_setup.c ****     txMsgExt2.IDE = CAN_ID_EXT;
 426              		.loc 1 131 5 is_stmt 1 view .LVU144
 427              		.loc 1 131 19 is_stmt 0 view .LVU145
 428 0118 2C4A     		ldr	r2, .L30+32
 429 011a 0421     		movs	r1, #4
 430 011c 9160     		str	r1, [r2, #8]
 132:Core/Src/can_setup.c ****     txMsgExt2.RTR = CAN_RTR_DATA;
 431              		.loc 1 132 5 is_stmt 1 view .LVU146
 432              		.loc 1 132 19 is_stmt 0 view .LVU147
 433 011e D360     		str	r3, [r2, #12]
 133:Core/Src/can_setup.c ****     txMsgExt2.TransmitGlobalTime = DISABLE;
 434              		.loc 1 133 5 is_stmt 1 view .LVU148
 435              		.loc 1 133 34 is_stmt 0 view .LVU149
 436 0120 1375     		strb	r3, [r2, #20]
 134:Core/Src/can_setup.c **** 
 135:Core/Src/can_setup.c ****     sf2.FilterBank = 14; // CAN2 Filter bank starts at 14
 437              		.loc 1 135 5 is_stmt 1 view .LVU150
 438              		.loc 1 135 20 is_stmt 0 view .LVU151
 439 0122 2B49     		ldr	r1, .L30+36
 440 0124 0E22     		movs	r2, #14
ARM GAS  /tmp/ccCNUOP5.s 			page 11


 441 0126 4A61     		str	r2, [r1, #20]
 136:Core/Src/can_setup.c ****     sf2.FilterMode = CAN_FILTERMODE_IDLIST;
 442              		.loc 1 136 5 is_stmt 1 view .LVU152
 443              		.loc 1 136 20 is_stmt 0 view .LVU153
 444 0128 0123     		movs	r3, #1
 445 012a 8B61     		str	r3, [r1, #24]
 137:Core/Src/can_setup.c ****     sf2.FilterScale = CAN_FILTERSCALE_32BIT;
 446              		.loc 1 137 5 is_stmt 1 view .LVU154
 447              		.loc 1 137 21 is_stmt 0 view .LVU155
 448 012c CB61     		str	r3, [r1, #28]
 138:Core/Src/can_setup.c ****     sf2.FilterIdLow = ((0x18FF11F2 << 3) & 0xFFF8) | 4; // ENCODER EVENT
 449              		.loc 1 138 5 is_stmt 1 view .LVU156
 450              		.loc 1 138 21 is_stmt 0 view .LVU157
 451 012e 48F69470 		movw	r0, #36756
 452 0132 4860     		str	r0, [r1, #4]
 139:Core/Src/can_setup.c ****     sf2.FilterIdHigh = (0x18FF11F2 >> 13) & 0xFFFF;
 453              		.loc 1 139 5 is_stmt 1 view .LVU158
 454              		.loc 1 139 22 is_stmt 0 view .LVU159
 455 0134 4CF2F870 		movw	r0, #51192
 456 0138 0860     		str	r0, [r1]
 140:Core/Src/can_setup.c ****     sf2.FilterMaskIdLow = ((0x18FF0FF2 << 3) & 0xFFF8) | 4; // ENCODER DATA
 457              		.loc 1 140 5 is_stmt 1 view .LVU160
 458              		.loc 1 140 25 is_stmt 0 view .LVU161
 459 013a 47F69474 		movw	r4, #32660
 460 013e CC60     		str	r4, [r1, #12]
 141:Core/Src/can_setup.c ****     sf2.FilterMaskIdHigh = (0x18FF0FF2 >> 13) & 0xFFFF;
 461              		.loc 1 141 5 is_stmt 1 view .LVU162
 462              		.loc 1 141 26 is_stmt 0 view .LVU163
 463 0140 8860     		str	r0, [r1, #8]
 142:Core/Src/can_setup.c ****     sf2.FilterFIFOAssignment = CAN_RX_FIFO1;
 464              		.loc 1 142 5 is_stmt 1 view .LVU164
 465              		.loc 1 142 30 is_stmt 0 view .LVU165
 466 0142 0B61     		str	r3, [r1, #16]
 143:Core/Src/can_setup.c ****     sf2.SlaveStartFilterBank = 14;
 467              		.loc 1 143 5 is_stmt 1 view .LVU166
 468              		.loc 1 143 30 is_stmt 0 view .LVU167
 469 0144 4A62     		str	r2, [r1, #36]
 144:Core/Src/can_setup.c ****     sf2.FilterActivation = ENABLE;
 470              		.loc 1 144 5 is_stmt 1 view .LVU168
 471              		.loc 1 144 26 is_stmt 0 view .LVU169
 472 0146 0B62     		str	r3, [r1, #32]
 145:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan2, &sf2) != HAL_OK)
 473              		.loc 1 145 5 is_stmt 1 view .LVU170
 474              		.loc 1 145 9 is_stmt 0 view .LVU171
 475 0148 2248     		ldr	r0, .L30+40
 476 014a FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 477              	.LVL20:
 478              		.loc 1 145 8 view .LVU172
 479 014e 18BB     		cbnz	r0, .L27
 480              	.L17:
 146:Core/Src/can_setup.c ****     {
 147:Core/Src/can_setup.c ****         Error_Handler();
 148:Core/Src/can_setup.c ****     }
 149:Core/Src/can_setup.c **** 
 150:Core/Src/can_setup.c ****     if (HAL_CAN_Start(&hcan2) != HAL_OK)
 481              		.loc 1 150 5 is_stmt 1 view .LVU173
 482              		.loc 1 150 9 is_stmt 0 view .LVU174
ARM GAS  /tmp/ccCNUOP5.s 			page 12


 483 0150 2048     		ldr	r0, .L30+40
 484 0152 FFF7FEFF 		bl	HAL_CAN_Start
 485              	.LVL21:
 486              		.loc 1 150 8 view .LVU175
 487 0156 10BB     		cbnz	r0, .L28
 488              	.L18:
 151:Core/Src/can_setup.c ****     {
 152:Core/Src/can_setup.c ****         Error_Handler();
 153:Core/Src/can_setup.c ****     }
 154:Core/Src/can_setup.c **** 
 155:Core/Src/can_setup.c ****     if (HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO1_MSG_PENDING) != HAL_OK)
 489              		.loc 1 155 5 is_stmt 1 view .LVU176
 490              		.loc 1 155 9 is_stmt 0 view .LVU177
 491 0158 1021     		movs	r1, #16
 492 015a 1E48     		ldr	r0, .L30+40
 493 015c FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 494              	.LVL22:
 495              		.loc 1 155 8 view .LVU178
 496 0160 00BB     		cbnz	r0, .L29
 497              	.L19:
 156:Core/Src/can_setup.c ****     {
 157:Core/Src/can_setup.c ****         Error_Handler();
 158:Core/Src/can_setup.c ****     }
 159:Core/Src/can_setup.c ****     HAL_NVIC_SetPriority(CAN2_TX_IRQn, 3, 0);
 498              		.loc 1 159 5 is_stmt 1 view .LVU179
 499 0162 0022     		movs	r2, #0
 500 0164 0321     		movs	r1, #3
 501 0166 3F20     		movs	r0, #63
 502 0168 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 503              	.LVL23:
 160:Core/Src/can_setup.c ****     HAL_NVIC_EnableIRQ(CAN2_TX_IRQn);
 504              		.loc 1 160 5 view .LVU180
 505 016c 3F20     		movs	r0, #63
 506 016e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 507              	.LVL24:
 161:Core/Src/can_setup.c **** }
 508              		.loc 1 161 1 is_stmt 0 view .LVU181
 509 0172 10BD     		pop	{r4, pc}
 510              	.L21:
  67:Core/Src/can_setup.c ****     }
 511              		.loc 1 67 9 is_stmt 1 view .LVU182
 512 0174 FFF7FEFF 		bl	Error_Handler
 513              	.LVL25:
 514 0178 68E7     		b	.L11
 515              	.L22:
  82:Core/Src/can_setup.c ****     }
 516              		.loc 1 82 9 view .LVU183
 517 017a FFF7FEFF 		bl	Error_Handler
 518              	.LVL26:
 519 017e 7CE7     		b	.L12
 520              	.L23:
  97:Core/Src/can_setup.c ****     }
 521              		.loc 1 97 9 view .LVU184
 522 0180 FFF7FEFF 		bl	Error_Handler
 523              	.LVL27:
 524 0184 94E7     		b	.L13
 525              	.L24:
ARM GAS  /tmp/ccCNUOP5.s 			page 13


 112:Core/Src/can_setup.c ****     }
 526              		.loc 1 112 9 view .LVU185
 527 0186 FFF7FEFF 		bl	Error_Handler
 528              	.LVL28:
 529 018a ADE7     		b	.L14
 530              	.L25:
 116:Core/Src/can_setup.c ****     }
 531              		.loc 1 116 9 view .LVU186
 532 018c FFF7FEFF 		bl	Error_Handler
 533              	.LVL29:
 534 0190 AFE7     		b	.L15
 535              	.L26:
 121:Core/Src/can_setup.c ****     }
 536              		.loc 1 121 9 view .LVU187
 537 0192 FFF7FEFF 		bl	Error_Handler
 538              	.LVL30:
 539 0196 B2E7     		b	.L16
 540              	.L27:
 147:Core/Src/can_setup.c ****     }
 541              		.loc 1 147 9 view .LVU188
 542 0198 FFF7FEFF 		bl	Error_Handler
 543              	.LVL31:
 544 019c D8E7     		b	.L17
 545              	.L28:
 152:Core/Src/can_setup.c ****     }
 546              		.loc 1 152 9 view .LVU189
 547 019e FFF7FEFF 		bl	Error_Handler
 548              	.LVL32:
 549 01a2 D9E7     		b	.L18
 550              	.L29:
 157:Core/Src/can_setup.c ****     }
 551              		.loc 1 157 9 view .LVU190
 552 01a4 FFF7FEFF 		bl	Error_Handler
 553              	.LVL33:
 554 01a8 DBE7     		b	.L19
 555              	.L31:
 556 01aa 00BF     		.align	2
 557              	.L30:
 558 01ac 00000000 		.word	txMsg
 559 01b0 00000000 		.word	txMsgExt
 560 01b4 00000000 		.word	sf
 561 01b8 00000000 		.word	hcan1
 562 01bc 00000000 		.word	sf3
 563 01c0 00000000 		.word	sf4
 564 01c4 00000000 		.word	sf5
 565 01c8 00000000 		.word	txMsg2
 566 01cc 00000000 		.word	txMsgExt2
 567 01d0 00000000 		.word	sf2
 568 01d4 00000000 		.word	hcan2
 569              		.cfi_endproc
 570              	.LFE71:
 572              		.section	.rodata.printCAN1.str1.4,"aMS",%progbits,1
 573              		.align	2
 574              	.LC0:
 575 0000 0D00     		.ascii	"\015\000"
 576 0002 0000     		.align	2
 577              	.LC1:
ARM GAS  /tmp/ccCNUOP5.s 			page 14


 578 0004 43414E5F 		.ascii	"CAN_1, %ld, 0x%.3X,\000"
 578      312C2025 
 578      6C642C20 
 578      3078252E 
 578      33582C00 
 579              		.align	2
 580              	.LC2:
 581 0018 43414E5F 		.ascii	"CAN_1, %ld, 0x%.8llX,\000"
 581      312C2025 
 581      6C642C20 
 581      3078252E 
 581      386C6C58 
 582 002e 0000     		.align	2
 583              	.LC3:
 584 0030 25642C00 		.ascii	"%d,\000"
 585              		.align	2
 586              	.LC4:
 587 0034 202C3078 		.ascii	" ,0x%.2X\000"
 587      252E3258 
 587      00
 588              		.section	.text.printCAN1,"ax",%progbits
 589              		.align	1
 590              		.global	printCAN1
 591              		.syntax unified
 592              		.thumb
 593              		.thumb_func
 594              		.fpu softvfp
 596              	printCAN1:
 597              	.LVL34:
 598              	.LFB72:
 162:Core/Src/can_setup.c **** 
 163:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 164:Core/Src/can_setup.c **** 
 165:Core/Src/can_setup.c **** void printCAN1(CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx)
 166:Core/Src/can_setup.c **** {
 599              		.loc 1 166 1 view -0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              		.loc 1 166 1 is_stmt 0 view .LVU192
 604 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 605              		.cfi_def_cfa_offset 24
 606              		.cfi_offset 4, -24
 607              		.cfi_offset 5, -20
 608              		.cfi_offset 6, -16
 609              		.cfi_offset 7, -12
 610              		.cfi_offset 8, -8
 611              		.cfi_offset 14, -4
 612 0004 0E46     		mov	r6, r1
 167:Core/Src/can_setup.c **** 
 168:Core/Src/can_setup.c ****     uint16_t ID = (rxMsg->StdId);
 613              		.loc 1 168 5 is_stmt 1 view .LVU193
 614              		.loc 1 168 25 is_stmt 0 view .LVU194
 615 0006 0768     		ldr	r7, [r0]
 616              	.LVL35:
 169:Core/Src/can_setup.c ****     uint64_t xID = (rxMsg->ExtId);
 617              		.loc 1 169 5 is_stmt 1 view .LVU195
ARM GAS  /tmp/ccCNUOP5.s 			page 15


 618              		.loc 1 169 26 is_stmt 0 view .LVU196
 619 0008 D0F80480 		ldr	r8, [r0, #4]
 620              	.LVL36:
 170:Core/Src/can_setup.c ****     int IDE = (rxMsg->IDE);
 621              		.loc 1 170 5 is_stmt 1 view .LVU197
 622              		.loc 1 170 21 is_stmt 0 view .LVU198
 623 000c 8468     		ldr	r4, [r0, #8]
 624              	.LVL37:
 171:Core/Src/can_setup.c ****     int dataLength = (rxMsg->DLC);
 625              		.loc 1 171 5 is_stmt 1 view .LVU199
 626              		.loc 1 171 28 is_stmt 0 view .LVU200
 627 000e 0569     		ldr	r5, [r0, #16]
 628              	.LVL38:
 172:Core/Src/can_setup.c **** 
 173:Core/Src/can_setup.c ****     printf("\r\n");
 629              		.loc 1 173 5 is_stmt 1 view .LVU201
 630 0010 1248     		ldr	r0, .L40
 631              	.LVL39:
 632              		.loc 1 173 5 is_stmt 0 view .LVU202
 633 0012 FFF7FEFF 		bl	puts
 634              	.LVL40:
 174:Core/Src/can_setup.c **** 
 175:Core/Src/can_setup.c ****     if (IDE == 0)
 635              		.loc 1 175 5 is_stmt 1 view .LVU203
 636              		.loc 1 175 8 is_stmt 0 view .LVU204
 637 0016 3CB1     		cbz	r4, .L38
 176:Core/Src/can_setup.c ****     {
 177:Core/Src/can_setup.c ****         printf("CAN_1, %ld, 0x%.3X,", HAL_GetTick(), ID);
 178:Core/Src/can_setup.c ****     }
 179:Core/Src/can_setup.c ****     else if (IDE == 4)
 638              		.loc 1 179 10 is_stmt 1 view .LVU205
 639              		.loc 1 179 13 is_stmt 0 view .LVU206
 640 0018 042C     		cmp	r4, #4
 641 001a 0DD0     		beq	.L39
 642              	.L34:
 180:Core/Src/can_setup.c ****     {
 181:Core/Src/can_setup.c ****         printf("CAN_1, %ld, 0x%.8llX,", HAL_GetTick(), xID);
 182:Core/Src/can_setup.c ****     }
 183:Core/Src/can_setup.c ****     printf("%d,", dataLength);
 643              		.loc 1 183 5 is_stmt 1 view .LVU207
 644 001c 2946     		mov	r1, r5
 645 001e 1048     		ldr	r0, .L40+4
 646 0020 FFF7FEFF 		bl	printf
 647              	.LVL41:
 184:Core/Src/can_setup.c **** 
 185:Core/Src/can_setup.c ****     for (int i = 0; i < dataLength; i++)
 648              		.loc 1 185 5 view .LVU208
 649              	.LBB2:
 650              		.loc 1 185 10 view .LVU209
 651              		.loc 1 185 14 is_stmt 0 view .LVU210
 652 0024 0024     		movs	r4, #0
 653              	.LVL42:
 654              		.loc 1 185 5 view .LVU211
 655 0026 15E0     		b	.L35
 656              	.LVL43:
 657              	.L38:
 658              		.loc 1 185 5 view .LVU212
ARM GAS  /tmp/ccCNUOP5.s 			page 16


 659              	.LBE2:
 177:Core/Src/can_setup.c ****     }
 660              		.loc 1 177 9 is_stmt 1 view .LVU213
 661 0028 FFF7FEFF 		bl	HAL_GetTick
 662              	.LVL44:
 663 002c 0146     		mov	r1, r0
 664 002e BAB2     		uxth	r2, r7
 665 0030 0C48     		ldr	r0, .L40+8
 666 0032 FFF7FEFF 		bl	printf
 667              	.LVL45:
 668 0036 F1E7     		b	.L34
 669              	.L39:
 181:Core/Src/can_setup.c ****     }
 670              		.loc 1 181 9 view .LVU214
 671 0038 FFF7FEFF 		bl	HAL_GetTick
 672              	.LVL46:
 673 003c 0146     		mov	r1, r0
 674 003e 4246     		mov	r2, r8
 675 0040 0023     		movs	r3, #0
 676 0042 0948     		ldr	r0, .L40+12
 677 0044 FFF7FEFF 		bl	printf
 678              	.LVL47:
 679 0048 E8E7     		b	.L34
 680              	.LVL48:
 681              	.L36:
 682              	.LBB3:
 186:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 683              		.loc 1 186 9 discriminator 3 view .LVU215
 684 004a 315D     		ldrb	r1, [r6, r4]	@ zero_extendqisi2
 685 004c 0748     		ldr	r0, .L40+16
 686 004e FFF7FEFF 		bl	printf
 687              	.LVL49:
 185:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 688              		.loc 1 185 37 discriminator 3 view .LVU216
 185:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 689              		.loc 1 185 38 is_stmt 0 discriminator 3 view .LVU217
 690 0052 0134     		adds	r4, r4, #1
 691              	.LVL50:
 692              	.L35:
 185:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 693              		.loc 1 185 21 is_stmt 1 discriminator 1 view .LVU218
 185:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 694              		.loc 1 185 5 is_stmt 0 discriminator 1 view .LVU219
 695 0054 AC42     		cmp	r4, r5
 696 0056 F8DB     		blt	.L36
 697              	.LBE3:
 187:Core/Src/can_setup.c **** }
 698              		.loc 1 187 1 view .LVU220
 699 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 700              	.LVL51:
 701              	.L41:
 702              		.loc 1 187 1 view .LVU221
 703              		.align	2
 704              	.L40:
 705 005c 00000000 		.word	.LC0
 706 0060 30000000 		.word	.LC3
 707 0064 04000000 		.word	.LC1
ARM GAS  /tmp/ccCNUOP5.s 			page 17


 708 0068 18000000 		.word	.LC2
 709 006c 34000000 		.word	.LC4
 710              		.cfi_endproc
 711              	.LFE72:
 713              		.section	.rodata.printCAN2.str1.4,"aMS",%progbits,1
 714              		.align	2
 715              	.LC5:
 716 0000 43414E5F 		.ascii	"CAN_2, %ld, 0x%.3X,\000"
 716      322C2025 
 716      6C642C20 
 716      3078252E 
 716      33582C00 
 717              		.align	2
 718              	.LC6:
 719 0014 43414E5F 		.ascii	"CAN_2, %ld, 0x%.8llX,\000"
 719      322C2025 
 719      6C642C20 
 719      3078252E 
 719      386C6C58 
 720              		.section	.text.printCAN2,"ax",%progbits
 721              		.align	1
 722              		.global	printCAN2
 723              		.syntax unified
 724              		.thumb
 725              		.thumb_func
 726              		.fpu softvfp
 728              	printCAN2:
 729              	.LVL52:
 730              	.LFB73:
 188:Core/Src/can_setup.c **** 
 189:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 190:Core/Src/can_setup.c **** 
 191:Core/Src/can_setup.c **** void printCAN2(CAN_RxHeaderTypeDef *rxMsg2, uint8_t *canRx2)
 192:Core/Src/can_setup.c **** {
 731              		.loc 1 192 1 is_stmt 1 view -0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              		.loc 1 192 1 is_stmt 0 view .LVU223
 736 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 737              		.cfi_def_cfa_offset 24
 738              		.cfi_offset 3, -24
 739              		.cfi_offset 4, -20
 740              		.cfi_offset 5, -16
 741              		.cfi_offset 6, -12
 742              		.cfi_offset 7, -8
 743              		.cfi_offset 14, -4
 193:Core/Src/can_setup.c **** 
 194:Core/Src/can_setup.c ****     uint16_t ID = (rxMsg2->StdId);
 744              		.loc 1 194 5 is_stmt 1 view .LVU224
 745              		.loc 1 194 26 is_stmt 0 view .LVU225
 746 0002 0668     		ldr	r6, [r0]
 747              	.LVL53:
 195:Core/Src/can_setup.c ****     uint64_t xID = (rxMsg2->ExtId);
 748              		.loc 1 195 5 is_stmt 1 view .LVU226
 749              		.loc 1 195 27 is_stmt 0 view .LVU227
 750 0004 4768     		ldr	r7, [r0, #4]
ARM GAS  /tmp/ccCNUOP5.s 			page 18


 751              	.LVL54:
 196:Core/Src/can_setup.c ****     int IDE = (rxMsg2->IDE);
 752              		.loc 1 196 5 is_stmt 1 view .LVU228
 753              		.loc 1 196 22 is_stmt 0 view .LVU229
 754 0006 8468     		ldr	r4, [r0, #8]
 755              	.LVL55:
 197:Core/Src/can_setup.c ****     int dataLength = (rxMsg2->DLC);
 756              		.loc 1 197 5 is_stmt 1 view .LVU230
 757              		.loc 1 197 29 is_stmt 0 view .LVU231
 758 0008 0569     		ldr	r5, [r0, #16]
 759              	.LVL56:
 198:Core/Src/can_setup.c **** 
 199:Core/Src/can_setup.c ****     printf("\r\n");
 760              		.loc 1 199 5 is_stmt 1 view .LVU232
 761 000a 1348     		ldr	r0, .L50
 762              	.LVL57:
 763              		.loc 1 199 5 is_stmt 0 view .LVU233
 764 000c FFF7FEFF 		bl	puts
 765              	.LVL58:
 200:Core/Src/can_setup.c ****     if (IDE == 0)
 766              		.loc 1 200 5 is_stmt 1 view .LVU234
 767              		.loc 1 200 8 is_stmt 0 view .LVU235
 768 0010 3CB1     		cbz	r4, .L48
 201:Core/Src/can_setup.c ****     {
 202:Core/Src/can_setup.c ****         printf("CAN_2, %ld, 0x%.3X,", HAL_GetTick(), ID);
 203:Core/Src/can_setup.c ****     }
 204:Core/Src/can_setup.c ****     else if (IDE == 4)
 769              		.loc 1 204 10 is_stmt 1 view .LVU236
 770              		.loc 1 204 13 is_stmt 0 view .LVU237
 771 0012 042C     		cmp	r4, #4
 772 0014 0DD0     		beq	.L49
 773              	.L44:
 205:Core/Src/can_setup.c ****     {
 206:Core/Src/can_setup.c ****         printf("CAN_2, %ld, 0x%.8llX,", HAL_GetTick(), xID);
 207:Core/Src/can_setup.c ****     }
 208:Core/Src/can_setup.c ****     printf("%d,", dataLength);
 774              		.loc 1 208 5 is_stmt 1 view .LVU238
 775 0016 2946     		mov	r1, r5
 776 0018 1048     		ldr	r0, .L50+4
 777 001a FFF7FEFF 		bl	printf
 778              	.LVL59:
 209:Core/Src/can_setup.c **** 
 210:Core/Src/can_setup.c ****     for (int i = 0; i < dataLength; i++)
 779              		.loc 1 210 5 view .LVU239
 780              	.LBB4:
 781              		.loc 1 210 10 view .LVU240
 782              		.loc 1 210 14 is_stmt 0 view .LVU241
 783 001e 0024     		movs	r4, #0
 784              	.LVL60:
 785              		.loc 1 210 5 view .LVU242
 786 0020 16E0     		b	.L45
 787              	.LVL61:
 788              	.L48:
 789              		.loc 1 210 5 view .LVU243
 790              	.LBE4:
 202:Core/Src/can_setup.c ****     }
 791              		.loc 1 202 9 is_stmt 1 view .LVU244
ARM GAS  /tmp/ccCNUOP5.s 			page 19


 792 0022 FFF7FEFF 		bl	HAL_GetTick
 793              	.LVL62:
 794 0026 0146     		mov	r1, r0
 795 0028 B2B2     		uxth	r2, r6
 796 002a 0D48     		ldr	r0, .L50+8
 797 002c FFF7FEFF 		bl	printf
 798              	.LVL63:
 799 0030 F1E7     		b	.L44
 800              	.L49:
 206:Core/Src/can_setup.c ****     }
 801              		.loc 1 206 9 view .LVU245
 802 0032 FFF7FEFF 		bl	HAL_GetTick
 803              	.LVL64:
 804 0036 0146     		mov	r1, r0
 805 0038 3A46     		mov	r2, r7
 806 003a 0023     		movs	r3, #0
 807 003c 0948     		ldr	r0, .L50+12
 808 003e FFF7FEFF 		bl	printf
 809              	.LVL65:
 810 0042 E8E7     		b	.L44
 811              	.LVL66:
 812              	.L46:
 813              	.LBB5:
 211:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 814              		.loc 1 211 9 discriminator 3 view .LVU246
 815 0044 084B     		ldr	r3, .L50+16
 816 0046 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 817 0048 0848     		ldr	r0, .L50+20
 818 004a FFF7FEFF 		bl	printf
 819              	.LVL67:
 210:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 820              		.loc 1 210 37 discriminator 3 view .LVU247
 210:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 821              		.loc 1 210 38 is_stmt 0 discriminator 3 view .LVU248
 822 004e 0134     		adds	r4, r4, #1
 823              	.LVL68:
 824              	.L45:
 210:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 825              		.loc 1 210 21 is_stmt 1 discriminator 1 view .LVU249
 210:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 826              		.loc 1 210 5 is_stmt 0 discriminator 1 view .LVU250
 827 0050 AC42     		cmp	r4, r5
 828 0052 F7DB     		blt	.L46
 829              	.LBE5:
 212:Core/Src/can_setup.c **** }
 830              		.loc 1 212 1 view .LVU251
 831 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 832              	.LVL69:
 833              	.L51:
 834              		.loc 1 212 1 view .LVU252
 835 0056 00BF     		.align	2
 836              	.L50:
 837 0058 00000000 		.word	.LC0
 838 005c 30000000 		.word	.LC3
 839 0060 00000000 		.word	.LC5
 840 0064 14000000 		.word	.LC6
 841 0068 00000000 		.word	canRx
ARM GAS  /tmp/ccCNUOP5.s 			page 20


 842 006c 34000000 		.word	.LC4
 843              		.cfi_endproc
 844              	.LFE73:
 846              		.section	.text.c1tx,"ax",%progbits
 847              		.align	1
 848              		.global	c1tx
 849              		.syntax unified
 850              		.thumb
 851              		.thumb_func
 852              		.fpu softvfp
 854              	c1tx:
 855              	.LVL70:
 856              	.LFB74:
 213:Core/Src/can_setup.c **** 
 214:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 215:Core/Src/can_setup.c **** void c1tx(CAN_TxHeaderTypeDef *txMsg, uint8_t *canTx)
 216:Core/Src/can_setup.c **** {
 857              		.loc 1 216 1 is_stmt 1 view -0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861              		.loc 1 216 1 is_stmt 0 view .LVU254
 862 0000 08B5     		push	{r3, lr}
 863              		.cfi_def_cfa_offset 8
 864              		.cfi_offset 3, -8
 865              		.cfi_offset 14, -4
 866 0002 0A46     		mov	r2, r1
 217:Core/Src/can_setup.c **** 
 218:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan1, txMsg, canTx, &canMailbox);
 867              		.loc 1 218 5 is_stmt 1 view .LVU255
 868 0004 094B     		ldr	r3, .L56
 869 0006 0146     		mov	r1, r0
 870              	.LVL71:
 871              		.loc 1 218 5 is_stmt 0 view .LVU256
 872 0008 0948     		ldr	r0, .L56+4
 873              	.LVL72:
 874              		.loc 1 218 5 view .LVU257
 875 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 876              	.LVL73:
 219:Core/Src/can_setup.c ****     txCycle++;
 877              		.loc 1 219 5 is_stmt 1 view .LVU258
 878              		.loc 1 219 12 is_stmt 0 view .LVU259
 879 000e 094A     		ldr	r2, .L56+8
 880 0010 1368     		ldr	r3, [r2]
 881 0012 0133     		adds	r3, r3, #1
 882 0014 1360     		str	r3, [r2]
 220:Core/Src/can_setup.c ****     if (txCycle >= 2)
 883              		.loc 1 220 5 is_stmt 1 view .LVU260
 884              		.loc 1 220 8 is_stmt 0 view .LVU261
 885 0016 012B     		cmp	r3, #1
 886 0018 00DC     		bgt	.L55
 887              	.L52:
 221:Core/Src/can_setup.c ****     {
 222:Core/Src/can_setup.c ****         HAL_Delay(1);
 223:Core/Src/can_setup.c ****         txCycle = 0;
 224:Core/Src/can_setup.c ****     }
 225:Core/Src/can_setup.c **** }
ARM GAS  /tmp/ccCNUOP5.s 			page 21


 888              		.loc 1 225 1 view .LVU262
 889 001a 08BD     		pop	{r3, pc}
 890              	.L55:
 222:Core/Src/can_setup.c ****         txCycle = 0;
 891              		.loc 1 222 9 is_stmt 1 view .LVU263
 892 001c 0120     		movs	r0, #1
 893 001e FFF7FEFF 		bl	HAL_Delay
 894              	.LVL74:
 223:Core/Src/can_setup.c ****     }
 895              		.loc 1 223 9 view .LVU264
 223:Core/Src/can_setup.c ****     }
 896              		.loc 1 223 17 is_stmt 0 view .LVU265
 897 0022 044B     		ldr	r3, .L56+8
 898 0024 0022     		movs	r2, #0
 899 0026 1A60     		str	r2, [r3]
 900              		.loc 1 225 1 view .LVU266
 901 0028 F7E7     		b	.L52
 902              	.L57:
 903 002a 00BF     		.align	2
 904              	.L56:
 905 002c 00000000 		.word	canMailbox
 906 0030 00000000 		.word	hcan1
 907 0034 00000000 		.word	txCycle
 908              		.cfi_endproc
 909              	.LFE74:
 911              		.section	.text.c2tx,"ax",%progbits
 912              		.align	1
 913              		.global	c2tx
 914              		.syntax unified
 915              		.thumb
 916              		.thumb_func
 917              		.fpu softvfp
 919              	c2tx:
 920              	.LVL75:
 921              	.LFB75:
 226:Core/Src/can_setup.c **** 
 227:Core/Src/can_setup.c **** void c2tx(CAN_TxHeaderTypeDef *txMsg2, uint8_t *canTx2)
 228:Core/Src/can_setup.c **** {
 922              		.loc 1 228 1 is_stmt 1 view -0
 923              		.cfi_startproc
 924              		@ args = 0, pretend = 0, frame = 0
 925              		@ frame_needed = 0, uses_anonymous_args = 0
 926              		.loc 1 228 1 is_stmt 0 view .LVU268
 927 0000 08B5     		push	{r3, lr}
 928              		.cfi_def_cfa_offset 8
 929              		.cfi_offset 3, -8
 930              		.cfi_offset 14, -4
 931 0002 0A46     		mov	r2, r1
 229:Core/Src/can_setup.c **** 
 230:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan2, txMsg2, canTx2, &canMailbox2);
 932              		.loc 1 230 5 is_stmt 1 view .LVU269
 933 0004 094B     		ldr	r3, .L62
 934 0006 0146     		mov	r1, r0
 935              	.LVL76:
 936              		.loc 1 230 5 is_stmt 0 view .LVU270
 937 0008 0948     		ldr	r0, .L62+4
 938              	.LVL77:
ARM GAS  /tmp/ccCNUOP5.s 			page 22


 939              		.loc 1 230 5 view .LVU271
 940 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 941              	.LVL78:
 231:Core/Src/can_setup.c ****     txCycle2++;
 942              		.loc 1 231 5 is_stmt 1 view .LVU272
 943              		.loc 1 231 13 is_stmt 0 view .LVU273
 944 000e 094A     		ldr	r2, .L62+8
 945 0010 1368     		ldr	r3, [r2]
 946 0012 0133     		adds	r3, r3, #1
 947 0014 1360     		str	r3, [r2]
 232:Core/Src/can_setup.c ****     if (txCycle2 >= 2)
 948              		.loc 1 232 5 is_stmt 1 view .LVU274
 949              		.loc 1 232 8 is_stmt 0 view .LVU275
 950 0016 012B     		cmp	r3, #1
 951 0018 00DC     		bgt	.L61
 952              	.L58:
 233:Core/Src/can_setup.c ****     {
 234:Core/Src/can_setup.c ****         HAL_Delay(1);
 235:Core/Src/can_setup.c ****         txCycle2 = 0;
 236:Core/Src/can_setup.c ****     }
 237:Core/Src/can_setup.c **** }
 953              		.loc 1 237 1 view .LVU276
 954 001a 08BD     		pop	{r3, pc}
 955              	.L61:
 234:Core/Src/can_setup.c ****         txCycle2 = 0;
 956              		.loc 1 234 9 is_stmt 1 view .LVU277
 957 001c 0120     		movs	r0, #1
 958 001e FFF7FEFF 		bl	HAL_Delay
 959              	.LVL79:
 235:Core/Src/can_setup.c ****     }
 960              		.loc 1 235 9 view .LVU278
 235:Core/Src/can_setup.c ****     }
 961              		.loc 1 235 18 is_stmt 0 view .LVU279
 962 0022 044B     		ldr	r3, .L62+8
 963 0024 0022     		movs	r2, #0
 964 0026 1A60     		str	r2, [r3]
 965              		.loc 1 237 1 view .LVU280
 966 0028 F7E7     		b	.L58
 967              	.L63:
 968 002a 00BF     		.align	2
 969              	.L62:
 970 002c 00000000 		.word	canMailbox2
 971 0030 00000000 		.word	hcan2
 972 0034 00000000 		.word	txCycle2
 973              		.cfi_endproc
 974              	.LFE75:
 976              		.section	.text.c1txExt,"ax",%progbits
 977              		.align	1
 978              		.global	c1txExt
 979              		.syntax unified
 980              		.thumb
 981              		.thumb_func
 982              		.fpu softvfp
 984              	c1txExt:
 985              	.LVL80:
 986              	.LFB76:
 238:Core/Src/can_setup.c **** 
ARM GAS  /tmp/ccCNUOP5.s 			page 23


 239:Core/Src/can_setup.c **** void c1txExt(CAN_TxHeaderTypeDef *txMsgExt, uint8_t *canTx)
 240:Core/Src/can_setup.c **** {
 987              		.loc 1 240 1 is_stmt 1 view -0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
 991              		.loc 1 240 1 is_stmt 0 view .LVU282
 992 0000 08B5     		push	{r3, lr}
 993              		.cfi_def_cfa_offset 8
 994              		.cfi_offset 3, -8
 995              		.cfi_offset 14, -4
 996 0002 0A46     		mov	r2, r1
 241:Core/Src/can_setup.c **** 
 242:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan1, txMsgExt, canTx, &canMailbox);
 997              		.loc 1 242 5 is_stmt 1 view .LVU283
 998 0004 094B     		ldr	r3, .L68
 999 0006 0146     		mov	r1, r0
 1000              	.LVL81:
 1001              		.loc 1 242 5 is_stmt 0 view .LVU284
 1002 0008 0948     		ldr	r0, .L68+4
 1003              	.LVL82:
 1004              		.loc 1 242 5 view .LVU285
 1005 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1006              	.LVL83:
 243:Core/Src/can_setup.c ****     txCycle++;
 1007              		.loc 1 243 5 is_stmt 1 view .LVU286
 1008              		.loc 1 243 12 is_stmt 0 view .LVU287
 1009 000e 094A     		ldr	r2, .L68+8
 1010 0010 1368     		ldr	r3, [r2]
 1011 0012 0133     		adds	r3, r3, #1
 1012 0014 1360     		str	r3, [r2]
 244:Core/Src/can_setup.c ****     if (txCycle >= 2)
 1013              		.loc 1 244 5 is_stmt 1 view .LVU288
 1014              		.loc 1 244 8 is_stmt 0 view .LVU289
 1015 0016 012B     		cmp	r3, #1
 1016 0018 00DC     		bgt	.L67
 1017              	.L64:
 245:Core/Src/can_setup.c ****     {
 246:Core/Src/can_setup.c ****         HAL_Delay(1);
 247:Core/Src/can_setup.c ****         txCycle = 0;
 248:Core/Src/can_setup.c ****     }
 249:Core/Src/can_setup.c **** }
 1018              		.loc 1 249 1 view .LVU290
 1019 001a 08BD     		pop	{r3, pc}
 1020              	.L67:
 246:Core/Src/can_setup.c ****         txCycle = 0;
 1021              		.loc 1 246 9 is_stmt 1 view .LVU291
 1022 001c 0120     		movs	r0, #1
 1023 001e FFF7FEFF 		bl	HAL_Delay
 1024              	.LVL84:
 247:Core/Src/can_setup.c ****     }
 1025              		.loc 1 247 9 view .LVU292
 247:Core/Src/can_setup.c ****     }
 1026              		.loc 1 247 17 is_stmt 0 view .LVU293
 1027 0022 044B     		ldr	r3, .L68+8
 1028 0024 0022     		movs	r2, #0
 1029 0026 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccCNUOP5.s 			page 24


 1030              		.loc 1 249 1 view .LVU294
 1031 0028 F7E7     		b	.L64
 1032              	.L69:
 1033 002a 00BF     		.align	2
 1034              	.L68:
 1035 002c 00000000 		.word	canMailbox
 1036 0030 00000000 		.word	hcan1
 1037 0034 00000000 		.word	txCycle
 1038              		.cfi_endproc
 1039              	.LFE76:
 1041              		.section	.text.c2txExt,"ax",%progbits
 1042              		.align	1
 1043              		.global	c2txExt
 1044              		.syntax unified
 1045              		.thumb
 1046              		.thumb_func
 1047              		.fpu softvfp
 1049              	c2txExt:
 1050              	.LVL85:
 1051              	.LFB77:
 250:Core/Src/can_setup.c **** 
 251:Core/Src/can_setup.c **** void c2txExt(CAN_TxHeaderTypeDef *txMsg2Ext, uint8_t *canTx2)
 252:Core/Src/can_setup.c **** {
 1052              		.loc 1 252 1 is_stmt 1 view -0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 0
 1055              		@ frame_needed = 0, uses_anonymous_args = 0
 1056              		.loc 1 252 1 is_stmt 0 view .LVU296
 1057 0000 08B5     		push	{r3, lr}
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 3, -8
 1060              		.cfi_offset 14, -4
 1061 0002 0A46     		mov	r2, r1
 253:Core/Src/can_setup.c **** 
 254:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan2, txMsg2Ext, canTx2, &canMailbox2);
 1062              		.loc 1 254 5 is_stmt 1 view .LVU297
 1063 0004 094B     		ldr	r3, .L74
 1064 0006 0146     		mov	r1, r0
 1065              	.LVL86:
 1066              		.loc 1 254 5 is_stmt 0 view .LVU298
 1067 0008 0948     		ldr	r0, .L74+4
 1068              	.LVL87:
 1069              		.loc 1 254 5 view .LVU299
 1070 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1071              	.LVL88:
 255:Core/Src/can_setup.c ****     txCycle2++;
 1072              		.loc 1 255 5 is_stmt 1 view .LVU300
 1073              		.loc 1 255 13 is_stmt 0 view .LVU301
 1074 000e 094A     		ldr	r2, .L74+8
 1075 0010 1368     		ldr	r3, [r2]
 1076 0012 0133     		adds	r3, r3, #1
 1077 0014 1360     		str	r3, [r2]
 256:Core/Src/can_setup.c ****     if (txCycle2 >= 2)
 1078              		.loc 1 256 5 is_stmt 1 view .LVU302
 1079              		.loc 1 256 8 is_stmt 0 view .LVU303
 1080 0016 012B     		cmp	r3, #1
 1081 0018 00DC     		bgt	.L73
ARM GAS  /tmp/ccCNUOP5.s 			page 25


 1082              	.L70:
 257:Core/Src/can_setup.c ****     {
 258:Core/Src/can_setup.c ****         HAL_Delay(1);
 259:Core/Src/can_setup.c ****         txCycle2 = 0;
 260:Core/Src/can_setup.c ****     }
 261:Core/Src/can_setup.c **** }
 1083              		.loc 1 261 1 view .LVU304
 1084 001a 08BD     		pop	{r3, pc}
 1085              	.L73:
 258:Core/Src/can_setup.c ****         txCycle2 = 0;
 1086              		.loc 1 258 9 is_stmt 1 view .LVU305
 1087 001c 0120     		movs	r0, #1
 1088 001e FFF7FEFF 		bl	HAL_Delay
 1089              	.LVL89:
 259:Core/Src/can_setup.c ****     }
 1090              		.loc 1 259 9 view .LVU306
 259:Core/Src/can_setup.c ****     }
 1091              		.loc 1 259 18 is_stmt 0 view .LVU307
 1092 0022 044B     		ldr	r3, .L74+8
 1093 0024 0022     		movs	r2, #0
 1094 0026 1A60     		str	r2, [r3]
 1095              		.loc 1 261 1 view .LVU308
 1096 0028 F7E7     		b	.L70
 1097              	.L75:
 1098 002a 00BF     		.align	2
 1099              	.L74:
 1100 002c 00000000 		.word	canMailbox2
 1101 0030 00000000 		.word	hcan2
 1102 0034 00000000 		.word	txCycle2
 1103              		.cfi_endproc
 1104              	.LFE77:
 1106              		.comm	canDebug,4,4
 1107              		.comm	txCycle2,4,4
 1108              		.comm	txCycle,4,4
 1109              		.comm	canTx2,8,4
 1110              		.comm	canTx,8,4
 1111              		.comm	canMailbox2,4,4
 1112              		.comm	canMailbox,4,4
 1113              		.comm	canRx2,8,4
 1114              		.comm	canRx,8,4
 1115              		.comm	txMsgExt2,24,4
 1116              		.comm	txMsg2,24,4
 1117              		.comm	rxMsg2,28,4
 1118              		.comm	txMsgExt,24,4
 1119              		.comm	txMsg,24,4
 1120              		.comm	rxMsg,28,4
 1121              		.comm	sf5,40,4
 1122              		.comm	sf4,40,4
 1123              		.comm	sf3,40,4
 1124              		.comm	sf2,40,4
 1125              		.comm	sf,40,4
 1126              		.comm	hcan2,40,4
 1127              		.comm	hcan1,40,4
 1128              		.comm	LIDAR,8,4
 1129              		.comm	te,12,4
 1130              		.comm	taskTime,32,4
 1131              		.comm	BMS,20,4
ARM GAS  /tmp/ccCNUOP5.s 			page 26


 1132              		.comm	charger,3,4
 1133              		.comm	vcu,7,4
 1134              		.comm	iboost,2,4
 1135              		.comm	ldu,18,4
 1136              		.comm	tempdata,4,4
 1137              		.comm	ADC_data,12,4
 1138              		.comm	tenderActive,1,1
 1139              		.comm	time_now,4,4
 1140              		.comm	period,4,4
 1141              		.comm	DCDC,4,4
 1142              		.text
 1143              	.Letext0:
 1144              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1145              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
 1146              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1147              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
 1148              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1149              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1150              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 1151              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1152              		.file 10 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1153              		.file 11 "/usr/include/newlib/sys/_types.h"
 1154              		.file 12 "/usr/include/newlib/sys/reent.h"
 1155              		.file 13 "/usr/include/newlib/sys/lock.h"
 1156              		.file 14 "Core/Inc/dcdc.h"
 1157              		.file 15 "Core/Inc/vcu.h"
 1158              		.file 16 "Core/Inc/encoder.h"
 1159              		.file 17 "Core/Inc/lidar.h"
 1160              		.file 18 "Core/Inc/can_setup.h"
 1161              		.file 19 "/usr/include/newlib/stdio.h"
 1162              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1163              		.file 21 "Core/Inc/main.h"
 1164              		.file 22 "Core/Inc/btld_jump.h"
 1165              		.file 23 "<built-in>"
ARM GAS  /tmp/ccCNUOP5.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 can_setup.c
     /tmp/ccCNUOP5.s:16     .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccCNUOP5.s:24     .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccCNUOP5.s:81     .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 $t
     /tmp/ccCNUOP5.s:88     .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo1MsgPendingCallback
     /tmp/ccCNUOP5.s:139    .text.HAL_CAN_ErrorCallback:0000000000000000 $t
     /tmp/ccCNUOP5.s:146    .text.HAL_CAN_ErrorCallback:0000000000000000 HAL_CAN_ErrorCallback
     /tmp/ccCNUOP5.s:160    .text.canSettings:0000000000000000 $t
     /tmp/ccCNUOP5.s:167    .text.canSettings:0000000000000000 canSettings
     /tmp/ccCNUOP5.s:558    .text.canSettings:00000000000001ac $d
                            *COM*:0000000000000018 txMsg
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000028 hcan1
                            *COM*:0000000000000028 sf3
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000018 txMsg2
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000028 hcan2
     /tmp/ccCNUOP5.s:573    .rodata.printCAN1.str1.4:0000000000000000 $d
     /tmp/ccCNUOP5.s:589    .text.printCAN1:0000000000000000 $t
     /tmp/ccCNUOP5.s:596    .text.printCAN1:0000000000000000 printCAN1
     /tmp/ccCNUOP5.s:705    .text.printCAN1:000000000000005c $d
     /tmp/ccCNUOP5.s:714    .rodata.printCAN2.str1.4:0000000000000000 $d
     /tmp/ccCNUOP5.s:721    .text.printCAN2:0000000000000000 $t
     /tmp/ccCNUOP5.s:728    .text.printCAN2:0000000000000000 printCAN2
     /tmp/ccCNUOP5.s:837    .text.printCAN2:0000000000000058 $d
                            *COM*:0000000000000008 canRx
     /tmp/ccCNUOP5.s:847    .text.c1tx:0000000000000000 $t
     /tmp/ccCNUOP5.s:854    .text.c1tx:0000000000000000 c1tx
     /tmp/ccCNUOP5.s:905    .text.c1tx:000000000000002c $d
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000004 txCycle
     /tmp/ccCNUOP5.s:912    .text.c2tx:0000000000000000 $t
     /tmp/ccCNUOP5.s:919    .text.c2tx:0000000000000000 c2tx
     /tmp/ccCNUOP5.s:970    .text.c2tx:000000000000002c $d
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 txCycle2
     /tmp/ccCNUOP5.s:977    .text.c1txExt:0000000000000000 $t
     /tmp/ccCNUOP5.s:984    .text.c1txExt:0000000000000000 c1txExt
     /tmp/ccCNUOP5.s:1035   .text.c1txExt:000000000000002c $d
     /tmp/ccCNUOP5.s:1042   .text.c2txExt:0000000000000000 $t
     /tmp/ccCNUOP5.s:1049   .text.c2txExt:0000000000000000 c2txExt
     /tmp/ccCNUOP5.s:1100   .text.c2txExt:000000000000002c $d
                            *COM*:0000000000000004 canDebug
                            *COM*:0000000000000008 canTx2
                            *COM*:0000000000000008 canTx
                            *COM*:0000000000000008 canRx2
                            *COM*:000000000000001c rxMsg2
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000008 LIDAR
                            *COM*:000000000000000c te
                            *COM*:0000000000000020 taskTime
                            *COM*:0000000000000014 BMS
ARM GAS  /tmp/ccCNUOP5.s 			page 28


                            *COM*:0000000000000003 charger
                            *COM*:0000000000000007 vcu
                            *COM*:0000000000000002 iboost
                            *COM*:0000000000000012 ldu
                            *COM*:0000000000000004 tempdata
                            *COM*:000000000000000c ADC_data
                            *COM*:0000000000000001 tenderActive
                            *COM*:0000000000000004 time_now
                            *COM*:0000000000000004 period
                            *COM*:0000000000000004 DCDC

UNDEFINED SYMBOLS
HAL_CAN_GetRxMessage
jumpToBootloader
decodeCAN
getLidar
Error_Handler
getData
getEvent
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
puts
printf
HAL_GetTick
HAL_CAN_AddTxMessage
HAL_Delay
