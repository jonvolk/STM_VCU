ARM GAS  /tmp/ccT5aMsf.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"can_setup.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_CAN_RxFifo0MsgPendingCallback
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_CAN_RxFifo0MsgPendingCallback:
  24              	.LFB66:
  25              		.file 1 "Core/Src/can_setup.c"
   1:Core/Src/can_setup.c **** #include <can_setup.h>
   2:Core/Src/can_setup.c **** 
   3:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
   4:Core/Src/can_setup.c **** 
   5:Core/Src/can_setup.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan1)
   6:Core/Src/can_setup.c **** {
  26              		.loc 1 6 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 40
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 00B5     		push	{lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 8BB0     		sub	sp, sp, #44
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 48
   7:Core/Src/can_setup.c **** 
   8:Core/Src/can_setup.c ****     CAN_RxHeaderTypeDef rxMsg;
   9:Core/Src/can_setup.c ****     uint8_t canRx[8];
  10:Core/Src/can_setup.c **** 
  11:Core/Src/can_setup.c ****     if (HAL_CAN_GetRxMessage(hcan1, CAN_RX_FIFO0, &rxMsg, canRx) != HAL_OK)
  38              		.loc 1 11 0
  39 0004 01AB     		add	r3, sp, #4
  40 0006 03AA     		add	r2, sp, #12
  41 0008 0021     		movs	r1, #0
  42 000a FFF7FEFF 		bl	HAL_CAN_GetRxMessage
  43              	.LVL1:
  44 000e 30B9     		cbnz	r0, .L4
  45              	.L2:
  12:Core/Src/can_setup.c ****     {
  13:Core/Src/can_setup.c ****         Error_Handler();
ARM GAS  /tmp/ccT5aMsf.s 			page 2


  14:Core/Src/can_setup.c ****     }
  15:Core/Src/can_setup.c ****     //do stuff
  16:Core/Src/can_setup.c ****     decodeCAN(&rxMsg, canRx);
  46              		.loc 1 16 0
  47 0010 01A9     		add	r1, sp, #4
  48 0012 03A8     		add	r0, sp, #12
  49 0014 FFF7FEFF 		bl	decodeCAN
  50              	.LVL2:
  17:Core/Src/can_setup.c **** }
  51              		.loc 1 17 0
  52 0018 0BB0     		add	sp, sp, #44
  53              	.LCFI2:
  54              		.cfi_remember_state
  55              		.cfi_def_cfa_offset 4
  56              		@ sp needed
  57 001a 5DF804FB 		ldr	pc, [sp], #4
  58              	.L4:
  59              	.LCFI3:
  60              		.cfi_restore_state
  13:Core/Src/can_setup.c ****     }
  61              		.loc 1 13 0
  62 001e FFF7FEFF 		bl	Error_Handler
  63              	.LVL3:
  64 0022 F5E7     		b	.L2
  65              		.cfi_endproc
  66              	.LFE66:
  68              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
  69              		.align	1
  70              		.global	HAL_CAN_RxFifo1MsgPendingCallback
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu softvfp
  76              	HAL_CAN_RxFifo1MsgPendingCallback:
  77              	.LFB67:
  18:Core/Src/can_setup.c **** 
  19:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  20:Core/Src/can_setup.c **** 
  21:Core/Src/can_setup.c **** void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan2)
  22:Core/Src/can_setup.c **** {
  78              		.loc 1 22 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 40
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              	.LVL4:
  83 0000 00B5     		push	{lr}
  84              	.LCFI4:
  85              		.cfi_def_cfa_offset 4
  86              		.cfi_offset 14, -4
  87 0002 8BB0     		sub	sp, sp, #44
  88              	.LCFI5:
  89              		.cfi_def_cfa_offset 48
  23:Core/Src/can_setup.c **** 
  24:Core/Src/can_setup.c ****     CAN_RxHeaderTypeDef rxMsg2;
  25:Core/Src/can_setup.c ****     uint8_t canRx2[8];
  26:Core/Src/can_setup.c **** 
  27:Core/Src/can_setup.c ****     if (HAL_CAN_GetRxMessage(hcan2, CAN_RX_FIFO1, &rxMsg2, canRx2) != HAL_OK)
ARM GAS  /tmp/ccT5aMsf.s 			page 3


  90              		.loc 1 27 0
  91 0004 01AB     		add	r3, sp, #4
  92 0006 03AA     		add	r2, sp, #12
  93 0008 0121     		movs	r1, #1
  94 000a FFF7FEFF 		bl	HAL_CAN_GetRxMessage
  95              	.LVL5:
  96 000e 50B9     		cbnz	r0, .L8
  97              	.L6:
  28:Core/Src/can_setup.c ****     {
  29:Core/Src/can_setup.c ****         Error_Handler();
  30:Core/Src/can_setup.c ****     }
  31:Core/Src/can_setup.c ****     //do stuff
  32:Core/Src/can_setup.c ****     getData(&rxMsg2, canRx2);
  98              		.loc 1 32 0
  99 0010 01A9     		add	r1, sp, #4
 100 0012 03A8     		add	r0, sp, #12
 101 0014 FFF7FEFF 		bl	getData
 102              	.LVL6:
  33:Core/Src/can_setup.c ****     getEvent(&rxMsg2, canRx2);
 103              		.loc 1 33 0
 104 0018 01A9     		add	r1, sp, #4
 105 001a 03A8     		add	r0, sp, #12
 106 001c FFF7FEFF 		bl	getEvent
 107              	.LVL7:
  34:Core/Src/can_setup.c **** }
 108              		.loc 1 34 0
 109 0020 0BB0     		add	sp, sp, #44
 110              	.LCFI6:
 111              		.cfi_remember_state
 112              		.cfi_def_cfa_offset 4
 113              		@ sp needed
 114 0022 5DF804FB 		ldr	pc, [sp], #4
 115              	.L8:
 116              	.LCFI7:
 117              		.cfi_restore_state
  29:Core/Src/can_setup.c ****     }
 118              		.loc 1 29 0
 119 0026 FFF7FEFF 		bl	Error_Handler
 120              	.LVL8:
 121 002a F1E7     		b	.L6
 122              		.cfi_endproc
 123              	.LFE67:
 125              		.section	.text.canSettings,"ax",%progbits
 126              		.align	1
 127              		.global	canSettings
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 131              		.fpu softvfp
 133              	canSettings:
 134              	.LFB68:
  35:Core/Src/can_setup.c **** 
  36:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  37:Core/Src/can_setup.c **** void canSettings(void)
  38:Core/Src/can_setup.c **** {
 135              		.loc 1 38 0
 136              		.cfi_startproc
ARM GAS  /tmp/ccT5aMsf.s 			page 4


 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139 0000 10B5     		push	{r4, lr}
 140              	.LCFI8:
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 4, -8
 143              		.cfi_offset 14, -4
  39:Core/Src/can_setup.c **** 
  40:Core/Src/can_setup.c ****     txMsg.IDE = CAN_ID_STD;
 144              		.loc 1 40 0
 145 0002 5C4A     		ldr	r2, .L27
 146 0004 0023     		movs	r3, #0
 147 0006 9360     		str	r3, [r2, #8]
  41:Core/Src/can_setup.c ****     txMsg.RTR = CAN_RTR_DATA;
 148              		.loc 1 41 0
 149 0008 D360     		str	r3, [r2, #12]
  42:Core/Src/can_setup.c ****     txMsg.TransmitGlobalTime = DISABLE;
 150              		.loc 1 42 0
 151 000a 1375     		strb	r3, [r2, #20]
  43:Core/Src/can_setup.c **** 
  44:Core/Src/can_setup.c ****     txMsgExt.IDE = CAN_ID_EXT;
 152              		.loc 1 44 0
 153 000c 5A4A     		ldr	r2, .L27+4
 154 000e 0421     		movs	r1, #4
 155 0010 9160     		str	r1, [r2, #8]
  45:Core/Src/can_setup.c ****     txMsgExt.RTR = CAN_RTR_DATA;
 156              		.loc 1 45 0
 157 0012 D360     		str	r3, [r2, #12]
  46:Core/Src/can_setup.c ****     txMsgExt.TransmitGlobalTime = DISABLE;
 158              		.loc 1 46 0
 159 0014 1375     		strb	r3, [r2, #20]
  47:Core/Src/can_setup.c **** 
  48:Core/Src/can_setup.c ****     sf.FilterBank = 0; // CAN1 Filter bank starts at 0
 160              		.loc 1 48 0
 161 0016 5949     		ldr	r1, .L27+8
 162 0018 4B61     		str	r3, [r1, #20]
  49:Core/Src/can_setup.c ****     sf.FilterMode = CAN_FILTERMODE_IDLIST;
 163              		.loc 1 49 0
 164 001a 0122     		movs	r2, #1
 165 001c 8A61     		str	r2, [r1, #24]
  50:Core/Src/can_setup.c ****     sf.FilterScale = CAN_FILTERSCALE_16BIT;
 166              		.loc 1 50 0
 167 001e CB61     		str	r3, [r1, #28]
  51:Core/Src/can_setup.c ****     sf.FilterIdLow = 0x1D6 << 5;      //DCDC DATA
 168              		.loc 1 51 0
 169 0020 4FF46B50 		mov	r0, #15040
 170 0024 4860     		str	r0, [r1, #4]
  52:Core/Src/can_setup.c ****     sf.FilterIdHigh = 0x04F << 5;      //LDU DIR BRAKE
 171              		.loc 1 52 0
 172 0026 4FF41E60 		mov	r0, #2528
 173 002a 0860     		str	r0, [r1]
  53:Core/Src/can_setup.c ****     sf.FilterMaskIdLow = 0x113 << 5;  //LDU POT1 POT2
 174              		.loc 1 53 0
 175 002c 42F26020 		movw	r0, #8800
 176 0030 C860     		str	r0, [r1, #12]
  54:Core/Src/can_setup.c ****     sf.FilterMaskIdHigh = 0x131 << 5; //LDU DIO
 177              		.loc 1 54 0
ARM GAS  /tmp/ccT5aMsf.s 			page 5


 178 0032 42F22060 		movw	r0, #9760
 179 0036 8860     		str	r0, [r1, #8]
  55:Core/Src/can_setup.c ****     sf.FilterFIFOAssignment = CAN_RX_FIFO0;
 180              		.loc 1 55 0
 181 0038 0B61     		str	r3, [r1, #16]
  56:Core/Src/can_setup.c ****     sf.SlaveStartFilterBank = 14;
 182              		.loc 1 56 0
 183 003a 0E23     		movs	r3, #14
 184 003c 4B62     		str	r3, [r1, #36]
  57:Core/Src/can_setup.c ****     sf.FilterActivation = ENABLE;
 185              		.loc 1 57 0
 186 003e 0A62     		str	r2, [r1, #32]
  58:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan1, &sf) != HAL_OK)
 187              		.loc 1 58 0
 188 0040 4F48     		ldr	r0, .L27+12
 189 0042 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 190              	.LVL9:
 191 0046 0028     		cmp	r0, #0
 192 0048 7CD1     		bne	.L19
 193              	.L10:
  59:Core/Src/can_setup.c ****     {
  60:Core/Src/can_setup.c ****         Error_Handler();
  61:Core/Src/can_setup.c ****     }
  62:Core/Src/can_setup.c **** 
  63:Core/Src/can_setup.c ****     sf4.FilterBank = 1; // CAN1 Filter bank starts at 0
 194              		.loc 1 63 0
 195 004a 4E49     		ldr	r1, .L27+16
 196 004c 0123     		movs	r3, #1
 197 004e 4B61     		str	r3, [r1, #20]
  64:Core/Src/can_setup.c ****     sf4.FilterMode = CAN_FILTERMODE_IDLIST;
 198              		.loc 1 64 0
 199 0050 8B61     		str	r3, [r1, #24]
  65:Core/Src/can_setup.c ****     sf4.FilterScale = CAN_FILTERSCALE_16BIT;
 200              		.loc 1 65 0
 201 0052 0022     		movs	r2, #0
 202 0054 CA61     		str	r2, [r1, #28]
  66:Core/Src/can_setup.c ****     sf4.FilterIdLow = 0x135 << 5;      //LDU AMPS,RPM,HSTEMP,POTNOM
 203              		.loc 1 66 0
 204 0056 42F2A060 		movw	r0, #9888
 205 005a 4860     		str	r0, [r1, #4]
  67:Core/Src/can_setup.c ****     sf4.FilterIdHigh = 0x136 << 5;     //LDU PACK VOLT, RUN
 206              		.loc 1 67 0
 207 005c 4FF41B50 		mov	r0, #9920
 208 0060 0860     		str	r0, [r1]
  68:Core/Src/can_setup.c ****     sf4.FilterMaskIdLow = 0x138 << 5;  //BMS1
 209              		.loc 1 68 0
 210 0062 4FF41C50 		mov	r0, #9984
 211 0066 C860     		str	r0, [r1, #12]
  69:Core/Src/can_setup.c ****     sf4.FilterMaskIdHigh = 0x139 << 5; //BMS2
 212              		.loc 1 69 0
 213 0068 42F22070 		movw	r0, #10016
 214 006c 8860     		str	r0, [r1, #8]
  70:Core/Src/can_setup.c ****     sf4.FilterFIFOAssignment = CAN_RX_FIFO0;
 215              		.loc 1 70 0
 216 006e 0A61     		str	r2, [r1, #16]
  71:Core/Src/can_setup.c ****     sf4.SlaveStartFilterBank = 14;
 217              		.loc 1 71 0
ARM GAS  /tmp/ccT5aMsf.s 			page 6


 218 0070 0E22     		movs	r2, #14
 219 0072 4A62     		str	r2, [r1, #36]
  72:Core/Src/can_setup.c ****     sf4.FilterActivation = ENABLE;
 220              		.loc 1 72 0
 221 0074 0B62     		str	r3, [r1, #32]
  73:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan1, &sf4) != HAL_OK)
 222              		.loc 1 73 0
 223 0076 4248     		ldr	r0, .L27+12
 224 0078 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 225              	.LVL10:
 226 007c 0028     		cmp	r0, #0
 227 007e 64D1     		bne	.L20
 228              	.L11:
  74:Core/Src/can_setup.c ****     {
  75:Core/Src/can_setup.c ****         Error_Handler();
  76:Core/Src/can_setup.c ****     }
  77:Core/Src/can_setup.c **** 
  78:Core/Src/can_setup.c ****     sf5.FilterBank = 2; // CAN1 Filter bank starts at 0
 229              		.loc 1 78 0
 230 0080 4149     		ldr	r1, .L27+20
 231 0082 0223     		movs	r3, #2
 232 0084 4B61     		str	r3, [r1, #20]
  79:Core/Src/can_setup.c ****     sf5.FilterMode = CAN_FILTERMODE_IDLIST;
 233              		.loc 1 79 0
 234 0086 0123     		movs	r3, #1
 235 0088 8B61     		str	r3, [r1, #24]
  80:Core/Src/can_setup.c ****     sf5.FilterScale = CAN_FILTERSCALE_16BIT;
 236              		.loc 1 80 0
 237 008a 0022     		movs	r2, #0
 238 008c CA61     		str	r2, [r1, #28]
  81:Core/Src/can_setup.c ****     sf5.FilterIdLow = 0x109 << 5;      //CHARGER STATUS
 239              		.loc 1 81 0
 240 008e 42F22010 		movw	r0, #8480
 241 0092 4860     		str	r0, [r1, #4]
  82:Core/Src/can_setup.c ****     sf5.FilterIdHigh = 0x38E << 5;     //IBOOST
 242              		.loc 1 82 0
 243 0094 47F2C010 		movw	r0, #29120
 244 0098 0860     		str	r0, [r1]
  83:Core/Src/can_setup.c ****     sf5.FilterMaskIdLow = 0x581 << 5;  //CANOPEN
 245              		.loc 1 83 0
 246 009a 4BF22000 		movw	r0, #45088
 247 009e C860     		str	r0, [r1, #12]
  84:Core/Src/can_setup.c ****     sf5.FilterMaskIdHigh = 0x601 << 5; //CANOPEN
 248              		.loc 1 84 0
 249 00a0 4CF22000 		movw	r0, #49184
 250 00a4 8860     		str	r0, [r1, #8]
  85:Core/Src/can_setup.c ****     sf5.FilterFIFOAssignment = CAN_RX_FIFO0;
 251              		.loc 1 85 0
 252 00a6 0A61     		str	r2, [r1, #16]
  86:Core/Src/can_setup.c ****     sf5.SlaveStartFilterBank = 14;
 253              		.loc 1 86 0
 254 00a8 0E22     		movs	r2, #14
 255 00aa 4A62     		str	r2, [r1, #36]
  87:Core/Src/can_setup.c ****     sf5.FilterActivation = ENABLE;
 256              		.loc 1 87 0
 257 00ac 0B62     		str	r3, [r1, #32]
  88:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan1, &sf5) != HAL_OK)
ARM GAS  /tmp/ccT5aMsf.s 			page 7


 258              		.loc 1 88 0
 259 00ae 3448     		ldr	r0, .L27+12
 260 00b0 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 261              	.LVL11:
 262 00b4 0028     		cmp	r0, #0
 263 00b6 4BD1     		bne	.L21
 264              	.L12:
  89:Core/Src/can_setup.c ****     {
  90:Core/Src/can_setup.c ****         Error_Handler();
  91:Core/Src/can_setup.c ****     }
  92:Core/Src/can_setup.c ****     if (HAL_CAN_Start(&hcan1) != HAL_OK)
 265              		.loc 1 92 0
 266 00b8 3148     		ldr	r0, .L27+12
 267 00ba FFF7FEFF 		bl	HAL_CAN_Start
 268              	.LVL12:
 269 00be 0028     		cmp	r0, #0
 270 00c0 49D1     		bne	.L22
 271              	.L13:
  93:Core/Src/can_setup.c ****     {
  94:Core/Src/can_setup.c ****         Error_Handler();
  95:Core/Src/can_setup.c ****     }
  96:Core/Src/can_setup.c **** 
  97:Core/Src/can_setup.c ****     if (HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING) != HAL_OK)
 272              		.loc 1 97 0
 273 00c2 0221     		movs	r1, #2
 274 00c4 2E48     		ldr	r0, .L27+12
 275 00c6 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 276              	.LVL13:
 277 00ca 0028     		cmp	r0, #0
 278 00cc 46D1     		bne	.L23
 279              	.L14:
  98:Core/Src/can_setup.c ****     {
  99:Core/Src/can_setup.c ****         Error_Handler();
 100:Core/Src/can_setup.c ****     }
 101:Core/Src/can_setup.c ****     HAL_NVIC_SetPriority(CAN1_TX_IRQn, 3, 0);
 280              		.loc 1 101 0
 281 00ce 0022     		movs	r2, #0
 282 00d0 0321     		movs	r1, #3
 283 00d2 1320     		movs	r0, #19
 284 00d4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 285              	.LVL14:
 102:Core/Src/can_setup.c ****     HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 286              		.loc 1 102 0
 287 00d8 1320     		movs	r0, #19
 288 00da FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 289              	.LVL15:
 103:Core/Src/can_setup.c **** 
 104:Core/Src/can_setup.c ****     //hcan2
 105:Core/Src/can_setup.c ****     txMsg2.IDE = CAN_ID_STD;
 290              		.loc 1 105 0
 291 00de 2B4A     		ldr	r2, .L27+24
 292 00e0 0023     		movs	r3, #0
 293 00e2 9360     		str	r3, [r2, #8]
 106:Core/Src/can_setup.c ****     txMsg2.RTR = CAN_RTR_DATA;
 294              		.loc 1 106 0
 295 00e4 D360     		str	r3, [r2, #12]
 107:Core/Src/can_setup.c ****     txMsg2.TransmitGlobalTime = DISABLE;
ARM GAS  /tmp/ccT5aMsf.s 			page 8


 296              		.loc 1 107 0
 297 00e6 1375     		strb	r3, [r2, #20]
 108:Core/Src/can_setup.c **** 
 109:Core/Src/can_setup.c ****     txMsgExt2.IDE = CAN_ID_EXT;
 298              		.loc 1 109 0
 299 00e8 294A     		ldr	r2, .L27+28
 300 00ea 0421     		movs	r1, #4
 301 00ec 9160     		str	r1, [r2, #8]
 110:Core/Src/can_setup.c ****     txMsgExt2.RTR = CAN_RTR_DATA;
 302              		.loc 1 110 0
 303 00ee D360     		str	r3, [r2, #12]
 111:Core/Src/can_setup.c ****     txMsgExt2.TransmitGlobalTime = DISABLE;
 304              		.loc 1 111 0
 305 00f0 1375     		strb	r3, [r2, #20]
 112:Core/Src/can_setup.c **** 
 113:Core/Src/can_setup.c ****     sf2.FilterBank = 14; // CAN2 Filter bank starts at 14
 306              		.loc 1 113 0
 307 00f2 2849     		ldr	r1, .L27+32
 308 00f4 0E22     		movs	r2, #14
 309 00f6 4A61     		str	r2, [r1, #20]
 114:Core/Src/can_setup.c ****     sf2.FilterMode = CAN_FILTERMODE_IDLIST;
 310              		.loc 1 114 0
 311 00f8 0123     		movs	r3, #1
 312 00fa 8B61     		str	r3, [r1, #24]
 115:Core/Src/can_setup.c ****     sf2.FilterScale = CAN_FILTERSCALE_32BIT;
 313              		.loc 1 115 0
 314 00fc CB61     		str	r3, [r1, #28]
 116:Core/Src/can_setup.c ****     sf2.FilterIdLow = ((0x18FF11F2 << 3) & 0xFFF8) | 4; //ENCODER EVENT
 315              		.loc 1 116 0
 316 00fe 48F69470 		movw	r0, #36756
 317 0102 4860     		str	r0, [r1, #4]
 117:Core/Src/can_setup.c ****     sf2.FilterIdHigh = (0x18FF11F2 >> 13) & 0xFFFF;
 318              		.loc 1 117 0
 319 0104 4CF2F870 		movw	r0, #51192
 320 0108 0860     		str	r0, [r1]
 118:Core/Src/can_setup.c ****     sf2.FilterMaskIdLow = ((0x18FF0FF2 << 3) & 0xFFF8) | 4; //ENCODER DATA
 321              		.loc 1 118 0
 322 010a 47F69474 		movw	r4, #32660
 323 010e CC60     		str	r4, [r1, #12]
 119:Core/Src/can_setup.c ****     sf2.FilterMaskIdHigh = (0x18FF0FF2 >> 13) & 0xFFFF;
 324              		.loc 1 119 0
 325 0110 8860     		str	r0, [r1, #8]
 120:Core/Src/can_setup.c ****     sf2.FilterFIFOAssignment = CAN_RX_FIFO1;
 326              		.loc 1 120 0
 327 0112 0B61     		str	r3, [r1, #16]
 121:Core/Src/can_setup.c ****     sf2.SlaveStartFilterBank = 14;
 328              		.loc 1 121 0
 329 0114 4A62     		str	r2, [r1, #36]
 122:Core/Src/can_setup.c ****     sf2.FilterActivation = ENABLE;
 330              		.loc 1 122 0
 331 0116 0B62     		str	r3, [r1, #32]
 123:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan2, &sf2) != HAL_OK)
 332              		.loc 1 123 0
 333 0118 1F48     		ldr	r0, .L27+36
 334 011a FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 335              	.LVL16:
 336 011e 00BB     		cbnz	r0, .L24
ARM GAS  /tmp/ccT5aMsf.s 			page 9


 337              	.L15:
 124:Core/Src/can_setup.c ****     {
 125:Core/Src/can_setup.c ****         Error_Handler();
 126:Core/Src/can_setup.c ****     }
 127:Core/Src/can_setup.c **** 
 128:Core/Src/can_setup.c ****     if (HAL_CAN_Start(&hcan2) != HAL_OK)
 338              		.loc 1 128 0
 339 0120 1D48     		ldr	r0, .L27+36
 340 0122 FFF7FEFF 		bl	HAL_CAN_Start
 341              	.LVL17:
 342 0126 F8B9     		cbnz	r0, .L25
 343              	.L16:
 129:Core/Src/can_setup.c ****     {
 130:Core/Src/can_setup.c ****         Error_Handler();
 131:Core/Src/can_setup.c ****     }
 132:Core/Src/can_setup.c **** 
 133:Core/Src/can_setup.c ****     if (HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO1_MSG_PENDING) != HAL_OK)
 344              		.loc 1 133 0
 345 0128 1021     		movs	r1, #16
 346 012a 1B48     		ldr	r0, .L27+36
 347 012c FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 348              	.LVL18:
 349 0130 E8B9     		cbnz	r0, .L26
 350              	.L17:
 134:Core/Src/can_setup.c ****     {
 135:Core/Src/can_setup.c ****         Error_Handler();
 136:Core/Src/can_setup.c ****     }
 137:Core/Src/can_setup.c ****     HAL_NVIC_SetPriority(CAN2_TX_IRQn, 3, 0);
 351              		.loc 1 137 0
 352 0132 0022     		movs	r2, #0
 353 0134 0321     		movs	r1, #3
 354 0136 3F20     		movs	r0, #63
 355 0138 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 356              	.LVL19:
 138:Core/Src/can_setup.c ****     HAL_NVIC_EnableIRQ(CAN2_TX_IRQn);
 357              		.loc 1 138 0
 358 013c 3F20     		movs	r0, #63
 359 013e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 360              	.LVL20:
 361 0142 10BD     		pop	{r4, pc}
 362              	.L19:
  60:Core/Src/can_setup.c ****     }
 363              		.loc 1 60 0
 364 0144 FFF7FEFF 		bl	Error_Handler
 365              	.LVL21:
 366 0148 7FE7     		b	.L10
 367              	.L20:
  75:Core/Src/can_setup.c ****     }
 368              		.loc 1 75 0
 369 014a FFF7FEFF 		bl	Error_Handler
 370              	.LVL22:
 371 014e 97E7     		b	.L11
 372              	.L21:
  90:Core/Src/can_setup.c ****     }
 373              		.loc 1 90 0
 374 0150 FFF7FEFF 		bl	Error_Handler
 375              	.LVL23:
ARM GAS  /tmp/ccT5aMsf.s 			page 10


 376 0154 B0E7     		b	.L12
 377              	.L22:
  94:Core/Src/can_setup.c ****     }
 378              		.loc 1 94 0
 379 0156 FFF7FEFF 		bl	Error_Handler
 380              	.LVL24:
 381 015a B2E7     		b	.L13
 382              	.L23:
  99:Core/Src/can_setup.c ****     }
 383              		.loc 1 99 0
 384 015c FFF7FEFF 		bl	Error_Handler
 385              	.LVL25:
 386 0160 B5E7     		b	.L14
 387              	.L24:
 125:Core/Src/can_setup.c ****     }
 388              		.loc 1 125 0
 389 0162 FFF7FEFF 		bl	Error_Handler
 390              	.LVL26:
 391 0166 DBE7     		b	.L15
 392              	.L25:
 130:Core/Src/can_setup.c ****     }
 393              		.loc 1 130 0
 394 0168 FFF7FEFF 		bl	Error_Handler
 395              	.LVL27:
 396 016c DCE7     		b	.L16
 397              	.L26:
 135:Core/Src/can_setup.c ****     }
 398              		.loc 1 135 0
 399 016e FFF7FEFF 		bl	Error_Handler
 400              	.LVL28:
 401 0172 DEE7     		b	.L17
 402              	.L28:
 403              		.align	2
 404              	.L27:
 405 0174 00000000 		.word	txMsg
 406 0178 00000000 		.word	txMsgExt
 407 017c 00000000 		.word	sf
 408 0180 00000000 		.word	hcan1
 409 0184 00000000 		.word	sf4
 410 0188 00000000 		.word	sf5
 411 018c 00000000 		.word	txMsg2
 412 0190 00000000 		.word	txMsgExt2
 413 0194 00000000 		.word	sf2
 414 0198 00000000 		.word	hcan2
 415              		.cfi_endproc
 416              	.LFE68:
 418              		.section	.text.printCAN1,"ax",%progbits
 419              		.align	1
 420              		.global	printCAN1
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu softvfp
 426              	printCAN1:
 427              	.LFB69:
 139:Core/Src/can_setup.c **** }
 140:Core/Src/can_setup.c **** 
ARM GAS  /tmp/ccT5aMsf.s 			page 11


 141:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 142:Core/Src/can_setup.c **** 
 143:Core/Src/can_setup.c **** void printCAN1(CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx)
 144:Core/Src/can_setup.c **** {
 428              		.loc 1 144 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              	.LVL29:
 433 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 434              	.LCFI9:
 435              		.cfi_def_cfa_offset 24
 436              		.cfi_offset 4, -24
 437              		.cfi_offset 5, -20
 438              		.cfi_offset 6, -16
 439              		.cfi_offset 7, -12
 440              		.cfi_offset 8, -8
 441              		.cfi_offset 14, -4
 442 0004 0E46     		mov	r6, r1
 145:Core/Src/can_setup.c **** 
 146:Core/Src/can_setup.c ****     uint16_t ID = (rxMsg->StdId);
 443              		.loc 1 146 0
 444 0006 0768     		ldr	r7, [r0]
 445              	.LVL30:
 147:Core/Src/can_setup.c ****     uint64_t xID = (rxMsg->ExtId);
 446              		.loc 1 147 0
 447 0008 D0F80480 		ldr	r8, [r0, #4]
 448              	.LVL31:
 148:Core/Src/can_setup.c ****     int IDE = (rxMsg->IDE);
 449              		.loc 1 148 0
 450 000c 8468     		ldr	r4, [r0, #8]
 451              	.LVL32:
 149:Core/Src/can_setup.c ****     int dataLength = (rxMsg->DLC);
 452              		.loc 1 149 0
 453 000e 0569     		ldr	r5, [r0, #16]
 454              	.LVL33:
 150:Core/Src/can_setup.c **** 
 151:Core/Src/can_setup.c ****     printf("\r\n");
 455              		.loc 1 151 0
 456 0010 1248     		ldr	r0, .L37
 457              	.LVL34:
 458 0012 FFF7FEFF 		bl	puts
 459              	.LVL35:
 152:Core/Src/can_setup.c **** 
 153:Core/Src/can_setup.c ****     if (IDE == 0)
 460              		.loc 1 153 0
 461 0016 3CB1     		cbz	r4, .L35
 154:Core/Src/can_setup.c ****     {
 155:Core/Src/can_setup.c ****         printf("CAN_1, %ld, 0x%.3X,", HAL_GetTick(), ID);
 156:Core/Src/can_setup.c ****     }
 157:Core/Src/can_setup.c ****     else if (IDE == 4)
 462              		.loc 1 157 0
 463 0018 042C     		cmp	r4, #4
 464 001a 0DD0     		beq	.L36
 465              	.L31:
 158:Core/Src/can_setup.c ****     {
 159:Core/Src/can_setup.c ****         printf("CAN_1, %ld, 0x%.8llX,", HAL_GetTick(), xID);
ARM GAS  /tmp/ccT5aMsf.s 			page 12


 160:Core/Src/can_setup.c ****     }
 161:Core/Src/can_setup.c ****     printf("%d,", dataLength);
 466              		.loc 1 161 0
 467 001c 2946     		mov	r1, r5
 468 001e 1048     		ldr	r0, .L37+4
 469 0020 FFF7FEFF 		bl	printf
 470              	.LVL36:
 471              	.LBB2:
 162:Core/Src/can_setup.c **** 
 163:Core/Src/can_setup.c ****     for (int i = 0; i < dataLength; i++)
 472              		.loc 1 163 0
 473 0024 0024     		movs	r4, #0
 474              	.LVL37:
 475 0026 15E0     		b	.L32
 476              	.LVL38:
 477              	.L35:
 478              	.LBE2:
 155:Core/Src/can_setup.c ****     }
 479              		.loc 1 155 0
 480 0028 FFF7FEFF 		bl	HAL_GetTick
 481              	.LVL39:
 482 002c BAB2     		uxth	r2, r7
 483 002e 0146     		mov	r1, r0
 484 0030 0C48     		ldr	r0, .L37+8
 485 0032 FFF7FEFF 		bl	printf
 486              	.LVL40:
 487 0036 F1E7     		b	.L31
 488              	.L36:
 159:Core/Src/can_setup.c ****     }
 489              		.loc 1 159 0
 490 0038 FFF7FEFF 		bl	HAL_GetTick
 491              	.LVL41:
 492 003c 4246     		mov	r2, r8
 493 003e 0023     		movs	r3, #0
 494 0040 0146     		mov	r1, r0
 495 0042 0948     		ldr	r0, .L37+12
 496 0044 FFF7FEFF 		bl	printf
 497              	.LVL42:
 498 0048 E8E7     		b	.L31
 499              	.LVL43:
 500              	.L33:
 501              	.LBB3:
 164:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 502              		.loc 1 164 0 discriminator 3
 503 004a 315D     		ldrb	r1, [r6, r4]	@ zero_extendqisi2
 504 004c 0748     		ldr	r0, .L37+16
 505 004e FFF7FEFF 		bl	printf
 506              	.LVL44:
 163:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 507              		.loc 1 163 0 discriminator 3
 508 0052 0134     		adds	r4, r4, #1
 509              	.LVL45:
 510              	.L32:
 163:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 511              		.loc 1 163 0 is_stmt 0 discriminator 1
 512 0054 AC42     		cmp	r4, r5
 513 0056 F8DB     		blt	.L33
ARM GAS  /tmp/ccT5aMsf.s 			page 13


 514              	.LBE3:
 165:Core/Src/can_setup.c **** }
 515              		.loc 1 165 0 is_stmt 1
 516 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 517              	.LVL46:
 518              	.L38:
 519              		.align	2
 520              	.L37:
 521 005c 00000000 		.word	.LC0
 522 0060 30000000 		.word	.LC3
 523 0064 04000000 		.word	.LC1
 524 0068 18000000 		.word	.LC2
 525 006c 34000000 		.word	.LC4
 526              		.cfi_endproc
 527              	.LFE69:
 529              		.section	.text.printCAN2,"ax",%progbits
 530              		.align	1
 531              		.global	printCAN2
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 535              		.fpu softvfp
 537              	printCAN2:
 538              	.LFB70:
 166:Core/Src/can_setup.c **** 
 167:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 168:Core/Src/can_setup.c **** 
 169:Core/Src/can_setup.c **** void printCAN2(CAN_RxHeaderTypeDef *rxMsg2, uint8_t *canRx2)
 170:Core/Src/can_setup.c **** {
 539              		.loc 1 170 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              	.LVL47:
 544 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 545              	.LCFI10:
 546              		.cfi_def_cfa_offset 24
 547              		.cfi_offset 3, -24
 548              		.cfi_offset 4, -20
 549              		.cfi_offset 5, -16
 550              		.cfi_offset 6, -12
 551              		.cfi_offset 7, -8
 552              		.cfi_offset 14, -4
 171:Core/Src/can_setup.c **** 
 172:Core/Src/can_setup.c ****     uint16_t ID = (rxMsg2->StdId);
 553              		.loc 1 172 0
 554 0002 0668     		ldr	r6, [r0]
 555              	.LVL48:
 173:Core/Src/can_setup.c ****     uint64_t xID = (rxMsg2->ExtId);
 556              		.loc 1 173 0
 557 0004 4768     		ldr	r7, [r0, #4]
 558              	.LVL49:
 174:Core/Src/can_setup.c ****     int IDE = (rxMsg2->IDE);
 559              		.loc 1 174 0
 560 0006 8468     		ldr	r4, [r0, #8]
 561              	.LVL50:
 175:Core/Src/can_setup.c ****     int dataLength = (rxMsg2->DLC);
ARM GAS  /tmp/ccT5aMsf.s 			page 14


 562              		.loc 1 175 0
 563 0008 0569     		ldr	r5, [r0, #16]
 564              	.LVL51:
 176:Core/Src/can_setup.c **** 
 177:Core/Src/can_setup.c ****     printf("\r\n");
 565              		.loc 1 177 0
 566 000a 1348     		ldr	r0, .L47
 567              	.LVL52:
 568 000c FFF7FEFF 		bl	puts
 569              	.LVL53:
 178:Core/Src/can_setup.c ****     if (IDE == 0)
 570              		.loc 1 178 0
 571 0010 3CB1     		cbz	r4, .L45
 179:Core/Src/can_setup.c ****     {
 180:Core/Src/can_setup.c ****         printf("CAN_2, %ld, 0x%.3X,", HAL_GetTick(), ID);
 181:Core/Src/can_setup.c ****     }
 182:Core/Src/can_setup.c ****     else if (IDE == 4)
 572              		.loc 1 182 0
 573 0012 042C     		cmp	r4, #4
 574 0014 0DD0     		beq	.L46
 575              	.L41:
 183:Core/Src/can_setup.c ****     {
 184:Core/Src/can_setup.c ****         printf("CAN_2, %ld, 0x%.8llX,", HAL_GetTick(), xID);
 185:Core/Src/can_setup.c ****     }
 186:Core/Src/can_setup.c ****     printf("%d,", dataLength);
 576              		.loc 1 186 0
 577 0016 2946     		mov	r1, r5
 578 0018 1048     		ldr	r0, .L47+4
 579 001a FFF7FEFF 		bl	printf
 580              	.LVL54:
 581              	.LBB4:
 187:Core/Src/can_setup.c **** 
 188:Core/Src/can_setup.c ****     for (int i = 0; i < dataLength; i++)
 582              		.loc 1 188 0
 583 001e 0024     		movs	r4, #0
 584              	.LVL55:
 585 0020 16E0     		b	.L42
 586              	.LVL56:
 587              	.L45:
 588              	.LBE4:
 180:Core/Src/can_setup.c ****     }
 589              		.loc 1 180 0
 590 0022 FFF7FEFF 		bl	HAL_GetTick
 591              	.LVL57:
 592 0026 B2B2     		uxth	r2, r6
 593 0028 0146     		mov	r1, r0
 594 002a 0D48     		ldr	r0, .L47+8
 595 002c FFF7FEFF 		bl	printf
 596              	.LVL58:
 597 0030 F1E7     		b	.L41
 598              	.L46:
 184:Core/Src/can_setup.c ****     }
 599              		.loc 1 184 0
 600 0032 FFF7FEFF 		bl	HAL_GetTick
 601              	.LVL59:
 602 0036 3A46     		mov	r2, r7
 603 0038 0023     		movs	r3, #0
ARM GAS  /tmp/ccT5aMsf.s 			page 15


 604 003a 0146     		mov	r1, r0
 605 003c 0948     		ldr	r0, .L47+12
 606 003e FFF7FEFF 		bl	printf
 607              	.LVL60:
 608 0042 E8E7     		b	.L41
 609              	.LVL61:
 610              	.L43:
 611              	.LBB5:
 189:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 612              		.loc 1 189 0 discriminator 3
 613 0044 084B     		ldr	r3, .L47+16
 614 0046 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 615 0048 0848     		ldr	r0, .L47+20
 616 004a FFF7FEFF 		bl	printf
 617              	.LVL62:
 188:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 618              		.loc 1 188 0 discriminator 3
 619 004e 0134     		adds	r4, r4, #1
 620              	.LVL63:
 621              	.L42:
 188:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 622              		.loc 1 188 0 is_stmt 0 discriminator 1
 623 0050 AC42     		cmp	r4, r5
 624 0052 F7DB     		blt	.L43
 625              	.LBE5:
 190:Core/Src/can_setup.c **** }
 626              		.loc 1 190 0 is_stmt 1
 627 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 628              	.LVL64:
 629              	.L48:
 630 0056 00BF     		.align	2
 631              	.L47:
 632 0058 00000000 		.word	.LC0
 633 005c 30000000 		.word	.LC3
 634 0060 00000000 		.word	.LC5
 635 0064 14000000 		.word	.LC6
 636 0068 00000000 		.word	canRx
 637 006c 34000000 		.word	.LC4
 638              		.cfi_endproc
 639              	.LFE70:
 641              		.section	.text.c1tx,"ax",%progbits
 642              		.align	1
 643              		.global	c1tx
 644              		.syntax unified
 645              		.thumb
 646              		.thumb_func
 647              		.fpu softvfp
 649              	c1tx:
 650              	.LFB71:
 191:Core/Src/can_setup.c **** 
 192:Core/Src/can_setup.c **** 
 193:Core/Src/can_setup.c **** 
 194:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 195:Core/Src/can_setup.c **** void c1tx(CAN_TxHeaderTypeDef *txMsg, uint8_t *canTx)
 196:Core/Src/can_setup.c **** {
 651              		.loc 1 196 0
 652              		.cfi_startproc
ARM GAS  /tmp/ccT5aMsf.s 			page 16


 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655              	.LVL65:
 656 0000 08B5     		push	{r3, lr}
 657              	.LCFI11:
 658              		.cfi_def_cfa_offset 8
 659              		.cfi_offset 3, -8
 660              		.cfi_offset 14, -4
 197:Core/Src/can_setup.c **** 
 198:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan1, txMsg, canTx, &canMailbox);
 661              		.loc 1 198 0
 662 0002 0A4B     		ldr	r3, .L53
 663 0004 0A46     		mov	r2, r1
 664 0006 0146     		mov	r1, r0
 665              	.LVL66:
 666 0008 0948     		ldr	r0, .L53+4
 667              	.LVL67:
 668 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 669              	.LVL68:
 199:Core/Src/can_setup.c ****     txCycle++;
 670              		.loc 1 199 0
 671 000e 094A     		ldr	r2, .L53+8
 672 0010 1368     		ldr	r3, [r2]
 673 0012 0133     		adds	r3, r3, #1
 674 0014 1360     		str	r3, [r2]
 200:Core/Src/can_setup.c ****     if (txCycle >= 3)
 675              		.loc 1 200 0
 676 0016 022B     		cmp	r3, #2
 677 0018 00DC     		bgt	.L52
 678              	.L49:
 679 001a 08BD     		pop	{r3, pc}
 680              	.L52:
 201:Core/Src/can_setup.c ****     {
 202:Core/Src/can_setup.c ****         HAL_Delay(1);
 681              		.loc 1 202 0
 682 001c 0120     		movs	r0, #1
 683 001e FFF7FEFF 		bl	HAL_Delay
 684              	.LVL69:
 203:Core/Src/can_setup.c ****         txCycle = 0;
 685              		.loc 1 203 0
 686 0022 0022     		movs	r2, #0
 687 0024 034B     		ldr	r3, .L53+8
 688 0026 1A60     		str	r2, [r3]
 204:Core/Src/can_setup.c ****     }
 205:Core/Src/can_setup.c **** }
 689              		.loc 1 205 0
 690 0028 F7E7     		b	.L49
 691              	.L54:
 692 002a 00BF     		.align	2
 693              	.L53:
 694 002c 00000000 		.word	canMailbox
 695 0030 00000000 		.word	hcan1
 696 0034 00000000 		.word	txCycle
 697              		.cfi_endproc
 698              	.LFE71:
 700              		.section	.text.c2tx,"ax",%progbits
 701              		.align	1
ARM GAS  /tmp/ccT5aMsf.s 			page 17


 702              		.global	c2tx
 703              		.syntax unified
 704              		.thumb
 705              		.thumb_func
 706              		.fpu softvfp
 708              	c2tx:
 709              	.LFB72:
 206:Core/Src/can_setup.c **** 
 207:Core/Src/can_setup.c **** void c2tx(CAN_TxHeaderTypeDef *txMsg2, uint8_t *canTx2)
 208:Core/Src/can_setup.c **** {
 710              		.loc 1 208 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              	.LVL70:
 715 0000 08B5     		push	{r3, lr}
 716              	.LCFI12:
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 3, -8
 719              		.cfi_offset 14, -4
 209:Core/Src/can_setup.c **** 
 210:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan2, txMsg2, canTx2, &canMailbox2);
 720              		.loc 1 210 0
 721 0002 0A4B     		ldr	r3, .L59
 722 0004 0A46     		mov	r2, r1
 723 0006 0146     		mov	r1, r0
 724              	.LVL71:
 725 0008 0948     		ldr	r0, .L59+4
 726              	.LVL72:
 727 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 728              	.LVL73:
 211:Core/Src/can_setup.c ****     txCycle2++;
 729              		.loc 1 211 0
 730 000e 094A     		ldr	r2, .L59+8
 731 0010 1368     		ldr	r3, [r2]
 732 0012 0133     		adds	r3, r3, #1
 733 0014 1360     		str	r3, [r2]
 212:Core/Src/can_setup.c ****     if (txCycle2 >= 3)
 734              		.loc 1 212 0
 735 0016 022B     		cmp	r3, #2
 736 0018 00DC     		bgt	.L58
 737              	.L55:
 738 001a 08BD     		pop	{r3, pc}
 739              	.L58:
 213:Core/Src/can_setup.c ****     {
 214:Core/Src/can_setup.c ****         HAL_Delay(1);
 740              		.loc 1 214 0
 741 001c 0120     		movs	r0, #1
 742 001e FFF7FEFF 		bl	HAL_Delay
 743              	.LVL74:
 215:Core/Src/can_setup.c ****         txCycle2 = 0;
 744              		.loc 1 215 0
 745 0022 0022     		movs	r2, #0
 746 0024 034B     		ldr	r3, .L59+8
 747 0026 1A60     		str	r2, [r3]
 216:Core/Src/can_setup.c ****     }
 217:Core/Src/can_setup.c **** }
ARM GAS  /tmp/ccT5aMsf.s 			page 18


 748              		.loc 1 217 0
 749 0028 F7E7     		b	.L55
 750              	.L60:
 751 002a 00BF     		.align	2
 752              	.L59:
 753 002c 00000000 		.word	canMailbox2
 754 0030 00000000 		.word	hcan2
 755 0034 00000000 		.word	txCycle2
 756              		.cfi_endproc
 757              	.LFE72:
 759              		.section	.text.c1txExt,"ax",%progbits
 760              		.align	1
 761              		.global	c1txExt
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
 765              		.fpu softvfp
 767              	c1txExt:
 768              	.LFB73:
 218:Core/Src/can_setup.c **** 
 219:Core/Src/can_setup.c **** void c1txExt(CAN_TxHeaderTypeDef *txMsgExt, uint8_t *canTx)
 220:Core/Src/can_setup.c **** {
 769              		.loc 1 220 0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              	.LVL75:
 774 0000 08B5     		push	{r3, lr}
 775              	.LCFI13:
 776              		.cfi_def_cfa_offset 8
 777              		.cfi_offset 3, -8
 778              		.cfi_offset 14, -4
 221:Core/Src/can_setup.c **** 
 222:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan1, txMsgExt, canTx, &canMailbox);
 779              		.loc 1 222 0
 780 0002 0A4B     		ldr	r3, .L65
 781 0004 0A46     		mov	r2, r1
 782 0006 0146     		mov	r1, r0
 783              	.LVL76:
 784 0008 0948     		ldr	r0, .L65+4
 785              	.LVL77:
 786 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 787              	.LVL78:
 223:Core/Src/can_setup.c ****     txCycle++;
 788              		.loc 1 223 0
 789 000e 094A     		ldr	r2, .L65+8
 790 0010 1368     		ldr	r3, [r2]
 791 0012 0133     		adds	r3, r3, #1
 792 0014 1360     		str	r3, [r2]
 224:Core/Src/can_setup.c ****     if (txCycle >= 3)
 793              		.loc 1 224 0
 794 0016 022B     		cmp	r3, #2
 795 0018 00DC     		bgt	.L64
 796              	.L61:
 797 001a 08BD     		pop	{r3, pc}
 798              	.L64:
 225:Core/Src/can_setup.c ****     {
ARM GAS  /tmp/ccT5aMsf.s 			page 19


 226:Core/Src/can_setup.c ****         HAL_Delay(1);
 799              		.loc 1 226 0
 800 001c 0120     		movs	r0, #1
 801 001e FFF7FEFF 		bl	HAL_Delay
 802              	.LVL79:
 227:Core/Src/can_setup.c ****         txCycle = 0;
 803              		.loc 1 227 0
 804 0022 0022     		movs	r2, #0
 805 0024 034B     		ldr	r3, .L65+8
 806 0026 1A60     		str	r2, [r3]
 228:Core/Src/can_setup.c ****     }
 229:Core/Src/can_setup.c **** }
 807              		.loc 1 229 0
 808 0028 F7E7     		b	.L61
 809              	.L66:
 810 002a 00BF     		.align	2
 811              	.L65:
 812 002c 00000000 		.word	canMailbox
 813 0030 00000000 		.word	hcan1
 814 0034 00000000 		.word	txCycle
 815              		.cfi_endproc
 816              	.LFE73:
 818              		.section	.text.c2txExt,"ax",%progbits
 819              		.align	1
 820              		.global	c2txExt
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu softvfp
 826              	c2txExt:
 827              	.LFB74:
 230:Core/Src/can_setup.c **** 
 231:Core/Src/can_setup.c **** void c2txExt(CAN_TxHeaderTypeDef *txMsg2Ext, uint8_t *canTx2)
 232:Core/Src/can_setup.c **** {
 828              		.loc 1 232 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832              	.LVL80:
 833 0000 08B5     		push	{r3, lr}
 834              	.LCFI14:
 835              		.cfi_def_cfa_offset 8
 836              		.cfi_offset 3, -8
 837              		.cfi_offset 14, -4
 233:Core/Src/can_setup.c **** 
 234:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan2, txMsg2Ext, canTx2, &canMailbox2);
 838              		.loc 1 234 0
 839 0002 0A4B     		ldr	r3, .L71
 840 0004 0A46     		mov	r2, r1
 841 0006 0146     		mov	r1, r0
 842              	.LVL81:
 843 0008 0948     		ldr	r0, .L71+4
 844              	.LVL82:
 845 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 846              	.LVL83:
 235:Core/Src/can_setup.c ****     txCycle2++;
 847              		.loc 1 235 0
ARM GAS  /tmp/ccT5aMsf.s 			page 20


 848 000e 094A     		ldr	r2, .L71+8
 849 0010 1368     		ldr	r3, [r2]
 850 0012 0133     		adds	r3, r3, #1
 851 0014 1360     		str	r3, [r2]
 236:Core/Src/can_setup.c ****     if (txCycle2 >= 3)
 852              		.loc 1 236 0
 853 0016 022B     		cmp	r3, #2
 854 0018 00DC     		bgt	.L70
 855              	.L67:
 856 001a 08BD     		pop	{r3, pc}
 857              	.L70:
 237:Core/Src/can_setup.c ****     {
 238:Core/Src/can_setup.c ****         HAL_Delay(1);
 858              		.loc 1 238 0
 859 001c 0120     		movs	r0, #1
 860 001e FFF7FEFF 		bl	HAL_Delay
 861              	.LVL84:
 239:Core/Src/can_setup.c ****         txCycle2 = 0;
 862              		.loc 1 239 0
 863 0022 0022     		movs	r2, #0
 864 0024 034B     		ldr	r3, .L71+8
 865 0026 1A60     		str	r2, [r3]
 240:Core/Src/can_setup.c ****     }
 241:Core/Src/can_setup.c **** }
 866              		.loc 1 241 0
 867 0028 F7E7     		b	.L67
 868              	.L72:
 869 002a 00BF     		.align	2
 870              	.L71:
 871 002c 00000000 		.word	canMailbox2
 872 0030 00000000 		.word	hcan2
 873 0034 00000000 		.word	txCycle2
 874              		.cfi_endproc
 875              	.LFE74:
 877              		.comm	canDebug,4,4
 878              		.comm	txCycle2,4,4
 879              		.comm	txCycle,4,4
 880              		.comm	canTx2,8,4
 881              		.comm	canTx,8,4
 882              		.comm	canMailbox2,4,4
 883              		.comm	canMailbox,4,4
 884              		.comm	canRx2,8,4
 885              		.comm	canRx,8,4
 886              		.comm	txMsgExt2,24,4
 887              		.comm	txMsg2,24,4
 888              		.comm	rxMsg2,28,4
 889              		.comm	txMsgExt,24,4
 890              		.comm	txMsg,24,4
 891              		.comm	rxMsg,28,4
 892              		.comm	sf5,40,4
 893              		.comm	sf4,40,4
 894              		.comm	sf3,40,4
 895              		.comm	sf2,40,4
 896              		.comm	sf,40,4
 897              		.comm	hcan2,40,4
 898              		.comm	hcan1,40,4
 899              		.comm	setPrevState,1,1
ARM GAS  /tmp/ccT5aMsf.s 			page 21


 900              		.comm	te,12,4
 901              		.comm	BMS,20,4
 902              		.comm	charger,2,4
 903              		.comm	vcu,7,4
 904              		.comm	iboost,2,4
 905              		.comm	ldu,18,4
 906              		.comm	tempdata,4,4
 907              		.comm	ADC_data,12,4
 908              		.comm	tenderActive,1,1
 909              		.comm	time_now,4,4
 910              		.comm	period,4,4
 911              		.comm	DCDC,4,4
 912              		.section	.rodata.printCAN1.str1.4,"aMS",%progbits,1
 913              		.align	2
 914              	.LC0:
 915 0000 0D00     		.ascii	"\015\000"
 916 0002 0000     		.space	2
 917              	.LC1:
 918 0004 43414E5F 		.ascii	"CAN_1, %ld, 0x%.3X,\000"
 918      312C2025 
 918      6C642C20 
 918      3078252E 
 918      33582C00 
 919              	.LC2:
 920 0018 43414E5F 		.ascii	"CAN_1, %ld, 0x%.8llX,\000"
 920      312C2025 
 920      6C642C20 
 920      3078252E 
 920      386C6C58 
 921 002e 0000     		.space	2
 922              	.LC3:
 923 0030 25642C00 		.ascii	"%d,\000"
 924              	.LC4:
 925 0034 202C3078 		.ascii	" ,0x%.2X\000"
 925      252E3258 
 925      00
 926              		.section	.rodata.printCAN2.str1.4,"aMS",%progbits,1
 927              		.align	2
 928              	.LC5:
 929 0000 43414E5F 		.ascii	"CAN_2, %ld, 0x%.3X,\000"
 929      322C2025 
 929      6C642C20 
 929      3078252E 
 929      33582C00 
 930              	.LC6:
 931 0014 43414E5F 		.ascii	"CAN_2, %ld, 0x%.8llX,\000"
 931      322C2025 
 931      6C642C20 
 931      3078252E 
 931      386C6C58 
 932              		.text
 933              	.Letext0:
 934              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 935              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 936              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 937              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 938              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
ARM GAS  /tmp/ccT5aMsf.s 			page 22


 939              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 940              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 941              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 942              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 943              		.file 11 "/usr/include/newlib/sys/lock.h"
 944              		.file 12 "/usr/include/newlib/sys/_types.h"
 945              		.file 13 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 946              		.file 14 "/usr/include/newlib/sys/reent.h"
 947              		.file 15 "Core/Inc/dcdc.h"
 948              		.file 16 "Core/Inc/vcu.h"
 949              		.file 17 "Core/Inc/encoder.h"
 950              		.file 18 "Core/Inc/can_setup.h"
 951              		.file 19 "/usr/include/newlib/stdio.h"
 952              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 953              		.file 21 "Core/Inc/main.h"
 954              		.file 22 "<built-in>"
ARM GAS  /tmp/ccT5aMsf.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 can_setup.c
     /tmp/ccT5aMsf.s:16     .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccT5aMsf.s:23     .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccT5aMsf.s:69     .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 $t
     /tmp/ccT5aMsf.s:76     .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo1MsgPendingCallback
     /tmp/ccT5aMsf.s:126    .text.canSettings:0000000000000000 $t
     /tmp/ccT5aMsf.s:133    .text.canSettings:0000000000000000 canSettings
     /tmp/ccT5aMsf.s:405    .text.canSettings:0000000000000174 $d
                            *COM*:0000000000000018 txMsg
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000028 hcan1
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000018 txMsg2
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000028 hcan2
     /tmp/ccT5aMsf.s:419    .text.printCAN1:0000000000000000 $t
     /tmp/ccT5aMsf.s:426    .text.printCAN1:0000000000000000 printCAN1
     /tmp/ccT5aMsf.s:521    .text.printCAN1:000000000000005c $d
     /tmp/ccT5aMsf.s:530    .text.printCAN2:0000000000000000 $t
     /tmp/ccT5aMsf.s:537    .text.printCAN2:0000000000000000 printCAN2
     /tmp/ccT5aMsf.s:632    .text.printCAN2:0000000000000058 $d
                            *COM*:0000000000000008 canRx
     /tmp/ccT5aMsf.s:642    .text.c1tx:0000000000000000 $t
     /tmp/ccT5aMsf.s:649    .text.c1tx:0000000000000000 c1tx
     /tmp/ccT5aMsf.s:694    .text.c1tx:000000000000002c $d
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000004 txCycle
     /tmp/ccT5aMsf.s:701    .text.c2tx:0000000000000000 $t
     /tmp/ccT5aMsf.s:708    .text.c2tx:0000000000000000 c2tx
     /tmp/ccT5aMsf.s:753    .text.c2tx:000000000000002c $d
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 txCycle2
     /tmp/ccT5aMsf.s:760    .text.c1txExt:0000000000000000 $t
     /tmp/ccT5aMsf.s:767    .text.c1txExt:0000000000000000 c1txExt
     /tmp/ccT5aMsf.s:812    .text.c1txExt:000000000000002c $d
     /tmp/ccT5aMsf.s:819    .text.c2txExt:0000000000000000 $t
     /tmp/ccT5aMsf.s:826    .text.c2txExt:0000000000000000 c2txExt
     /tmp/ccT5aMsf.s:871    .text.c2txExt:000000000000002c $d
                            *COM*:0000000000000004 canDebug
                            *COM*:0000000000000008 canTx2
                            *COM*:0000000000000008 canTx
                            *COM*:0000000000000008 canRx2
                            *COM*:000000000000001c rxMsg2
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 sf3
                            *COM*:0000000000000001 setPrevState
                            *COM*:000000000000000c te
                            *COM*:0000000000000014 BMS
                            *COM*:0000000000000002 charger
                            *COM*:0000000000000007 vcu
                            *COM*:0000000000000002 iboost
                            *COM*:0000000000000012 ldu
                            *COM*:0000000000000004 tempdata
ARM GAS  /tmp/ccT5aMsf.s 			page 24


                            *COM*:000000000000000c ADC_data
                            *COM*:0000000000000001 tenderActive
                            *COM*:0000000000000004 time_now
                            *COM*:0000000000000004 period
                            *COM*:0000000000000004 DCDC
     /tmp/ccT5aMsf.s:913    .rodata.printCAN1.str1.4:0000000000000000 $d
     /tmp/ccT5aMsf.s:927    .rodata.printCAN2.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_CAN_GetRxMessage
decodeCAN
Error_Handler
getData
getEvent
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
puts
printf
HAL_GetTick
HAL_CAN_AddTxMessage
HAL_Delay
