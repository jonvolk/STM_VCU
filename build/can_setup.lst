ARM GAS  /tmp/ccT5ZNUj.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"can_setup.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_CAN_RxFifo0MsgPendingCallback
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_CAN_RxFifo0MsgPendingCallback:
  24              	.LFB66:
  25              		.file 1 "Core/Src/can_setup.c"
   1:Core/Src/can_setup.c **** #include <can_setup.h>
   2:Core/Src/can_setup.c **** 
   3:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
   4:Core/Src/can_setup.c **** 
   5:Core/Src/can_setup.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan1)
   6:Core/Src/can_setup.c **** {
  26              		.loc 1 6 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 40
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 00B5     		push	{lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 8BB0     		sub	sp, sp, #44
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 48
   7:Core/Src/can_setup.c **** 
   8:Core/Src/can_setup.c ****     CAN_RxHeaderTypeDef rxMsg;
   9:Core/Src/can_setup.c ****     uint8_t canRx[8];
  10:Core/Src/can_setup.c **** 
  11:Core/Src/can_setup.c ****     if (HAL_CAN_GetRxMessage(hcan1, CAN_RX_FIFO0, &rxMsg, canRx) != HAL_OK)
  38              		.loc 1 11 0
  39 0004 01AB     		add	r3, sp, #4
  40 0006 03AA     		add	r2, sp, #12
  41 0008 0021     		movs	r1, #0
  42 000a FFF7FEFF 		bl	HAL_CAN_GetRxMessage
  43              	.LVL1:
  44 000e 50B9     		cbnz	r0, .L4
  45              	.L2:
  12:Core/Src/can_setup.c ****     {
  13:Core/Src/can_setup.c ****         Error_Handler();
ARM GAS  /tmp/ccT5ZNUj.s 			page 2


  14:Core/Src/can_setup.c ****     }
  15:Core/Src/can_setup.c ****     //do stuff
  16:Core/Src/can_setup.c ****     decodeCAN(&rxMsg, canRx);
  46              		.loc 1 16 0
  47 0010 01A9     		add	r1, sp, #4
  48 0012 03A8     		add	r0, sp, #12
  49 0014 FFF7FEFF 		bl	decodeCAN
  50              	.LVL2:
  17:Core/Src/can_setup.c ****     getLidar(&rxMsg,canRx);
  51              		.loc 1 17 0
  52 0018 01A9     		add	r1, sp, #4
  53 001a 03A8     		add	r0, sp, #12
  54 001c FFF7FEFF 		bl	getLidar
  55              	.LVL3:
  18:Core/Src/can_setup.c ****     
  19:Core/Src/can_setup.c **** }
  56              		.loc 1 19 0
  57 0020 0BB0     		add	sp, sp, #44
  58              	.LCFI2:
  59              		.cfi_remember_state
  60              		.cfi_def_cfa_offset 4
  61              		@ sp needed
  62 0022 5DF804FB 		ldr	pc, [sp], #4
  63              	.L4:
  64              	.LCFI3:
  65              		.cfi_restore_state
  13:Core/Src/can_setup.c ****     }
  66              		.loc 1 13 0
  67 0026 FFF7FEFF 		bl	Error_Handler
  68              	.LVL4:
  69 002a F1E7     		b	.L2
  70              		.cfi_endproc
  71              	.LFE66:
  73              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
  74              		.align	1
  75              		.global	HAL_CAN_RxFifo1MsgPendingCallback
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  79              		.fpu softvfp
  81              	HAL_CAN_RxFifo1MsgPendingCallback:
  82              	.LFB67:
  20:Core/Src/can_setup.c **** 
  21:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  22:Core/Src/can_setup.c **** 
  23:Core/Src/can_setup.c **** void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan2)
  24:Core/Src/can_setup.c **** {
  83              		.loc 1 24 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 40
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              	.LVL5:
  88 0000 00B5     		push	{lr}
  89              	.LCFI4:
  90              		.cfi_def_cfa_offset 4
  91              		.cfi_offset 14, -4
  92 0002 8BB0     		sub	sp, sp, #44
ARM GAS  /tmp/ccT5ZNUj.s 			page 3


  93              	.LCFI5:
  94              		.cfi_def_cfa_offset 48
  25:Core/Src/can_setup.c **** 
  26:Core/Src/can_setup.c ****     CAN_RxHeaderTypeDef rxMsg2;
  27:Core/Src/can_setup.c ****     uint8_t canRx2[8];
  28:Core/Src/can_setup.c **** 
  29:Core/Src/can_setup.c ****     if (HAL_CAN_GetRxMessage(hcan2, CAN_RX_FIFO1, &rxMsg2, canRx2) != HAL_OK)
  95              		.loc 1 29 0
  96 0004 01AB     		add	r3, sp, #4
  97 0006 03AA     		add	r2, sp, #12
  98 0008 0121     		movs	r1, #1
  99 000a FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 100              	.LVL6:
 101 000e 50B9     		cbnz	r0, .L8
 102              	.L6:
  30:Core/Src/can_setup.c ****     {
  31:Core/Src/can_setup.c ****         Error_Handler();
  32:Core/Src/can_setup.c ****     }
  33:Core/Src/can_setup.c ****     //do stuff
  34:Core/Src/can_setup.c ****     getData(&rxMsg2, canRx2);
 103              		.loc 1 34 0
 104 0010 01A9     		add	r1, sp, #4
 105 0012 03A8     		add	r0, sp, #12
 106 0014 FFF7FEFF 		bl	getData
 107              	.LVL7:
  35:Core/Src/can_setup.c ****     getEvent(&rxMsg2, canRx2);
 108              		.loc 1 35 0
 109 0018 01A9     		add	r1, sp, #4
 110 001a 03A8     		add	r0, sp, #12
 111 001c FFF7FEFF 		bl	getEvent
 112              	.LVL8:
  36:Core/Src/can_setup.c ****     
  37:Core/Src/can_setup.c **** }
 113              		.loc 1 37 0
 114 0020 0BB0     		add	sp, sp, #44
 115              	.LCFI6:
 116              		.cfi_remember_state
 117              		.cfi_def_cfa_offset 4
 118              		@ sp needed
 119 0022 5DF804FB 		ldr	pc, [sp], #4
 120              	.L8:
 121              	.LCFI7:
 122              		.cfi_restore_state
  31:Core/Src/can_setup.c ****     }
 123              		.loc 1 31 0
 124 0026 FFF7FEFF 		bl	Error_Handler
 125              	.LVL9:
 126 002a F1E7     		b	.L6
 127              		.cfi_endproc
 128              	.LFE67:
 130              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 131              		.align	1
 132              		.global	HAL_CAN_ErrorCallback
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu softvfp
ARM GAS  /tmp/ccT5ZNUj.s 			page 4


 138              	HAL_CAN_ErrorCallback:
 139              	.LFB68:
  38:Core/Src/can_setup.c **** 
  39:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  40:Core/Src/can_setup.c **** void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
  41:Core/Src/can_setup.c **** {
 140              		.loc 1 41 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145              	.LVL10:
 146 0000 7047     		bx	lr
 147              		.cfi_endproc
 148              	.LFE68:
 150              		.section	.text.canSettings,"ax",%progbits
 151              		.align	1
 152              		.global	canSettings
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 156              		.fpu softvfp
 158              	canSettings:
 159              	.LFB69:
  42:Core/Src/can_setup.c ****   
  43:Core/Src/can_setup.c **** }
  44:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  45:Core/Src/can_setup.c **** void canSettings(void)
  46:Core/Src/can_setup.c **** {
 160              		.loc 1 46 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		.loc 1 46 0
 165 0000 10B5     		push	{r4, lr}
 166              	.LCFI8:
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 4, -8
 169              		.cfi_offset 14, -4
  47:Core/Src/can_setup.c **** 
  48:Core/Src/can_setup.c ****     txMsg.IDE = CAN_ID_STD;
 170              		.loc 1 48 0
 171 0002 5C4A     		ldr	r2, .L28
 172 0004 0023     		movs	r3, #0
 173 0006 9360     		str	r3, [r2, #8]
  49:Core/Src/can_setup.c ****     txMsg.RTR = CAN_RTR_DATA;
 174              		.loc 1 49 0
 175 0008 D360     		str	r3, [r2, #12]
  50:Core/Src/can_setup.c ****     txMsg.TransmitGlobalTime = DISABLE;
 176              		.loc 1 50 0
 177 000a 1375     		strb	r3, [r2, #20]
  51:Core/Src/can_setup.c **** 
  52:Core/Src/can_setup.c ****     txMsgExt.IDE = CAN_ID_EXT;
 178              		.loc 1 52 0
 179 000c 5A4A     		ldr	r2, .L28+4
 180 000e 0421     		movs	r1, #4
 181 0010 9160     		str	r1, [r2, #8]
ARM GAS  /tmp/ccT5ZNUj.s 			page 5


  53:Core/Src/can_setup.c ****     txMsgExt.RTR = CAN_RTR_DATA;
 182              		.loc 1 53 0
 183 0012 D360     		str	r3, [r2, #12]
  54:Core/Src/can_setup.c ****     txMsgExt.TransmitGlobalTime = DISABLE;
 184              		.loc 1 54 0
 185 0014 1375     		strb	r3, [r2, #20]
  55:Core/Src/can_setup.c **** 
  56:Core/Src/can_setup.c ****     sf.FilterBank = 0; // CAN1 Filter bank starts at 0
 186              		.loc 1 56 0
 187 0016 5949     		ldr	r1, .L28+8
 188 0018 4B61     		str	r3, [r1, #20]
  57:Core/Src/can_setup.c ****     sf.FilterMode = CAN_FILTERMODE_IDLIST;
 189              		.loc 1 57 0
 190 001a 0122     		movs	r2, #1
 191 001c 8A61     		str	r2, [r1, #24]
  58:Core/Src/can_setup.c ****     sf.FilterScale = CAN_FILTERSCALE_16BIT;
 192              		.loc 1 58 0
 193 001e CB61     		str	r3, [r1, #28]
  59:Core/Src/can_setup.c ****     sf.FilterIdLow = 0x1D6 << 5;      //DCDC DATA
 194              		.loc 1 59 0
 195 0020 4FF46B50 		mov	r0, #15040
 196 0024 4860     		str	r0, [r1, #4]
  60:Core/Src/can_setup.c ****     sf.FilterIdHigh = 0x04F << 5;      //LDU DIR BRAKE
 197              		.loc 1 60 0
 198 0026 4FF41E60 		mov	r0, #2528
 199 002a 0860     		str	r0, [r1]
  61:Core/Src/can_setup.c ****     sf.FilterMaskIdLow = 0x113 << 5;  //LDU POT1 POT2
 200              		.loc 1 61 0
 201 002c 42F26020 		movw	r0, #8800
 202 0030 C860     		str	r0, [r1, #12]
  62:Core/Src/can_setup.c ****     sf.FilterMaskIdHigh = 0x131 << 5; //LDU DIO
 203              		.loc 1 62 0
 204 0032 42F22060 		movw	r0, #9760
 205 0036 8860     		str	r0, [r1, #8]
  63:Core/Src/can_setup.c ****     sf.FilterFIFOAssignment = CAN_RX_FIFO0;
 206              		.loc 1 63 0
 207 0038 0B61     		str	r3, [r1, #16]
  64:Core/Src/can_setup.c ****     sf.SlaveStartFilterBank = 14;
 208              		.loc 1 64 0
 209 003a 0E23     		movs	r3, #14
 210 003c 4B62     		str	r3, [r1, #36]
  65:Core/Src/can_setup.c ****     sf.FilterActivation = ENABLE;
 211              		.loc 1 65 0
 212 003e 0A62     		str	r2, [r1, #32]
  66:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan1, &sf) != HAL_OK)
 213              		.loc 1 66 0
 214 0040 4F48     		ldr	r0, .L28+12
 215 0042 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 216              	.LVL11:
 217 0046 0028     		cmp	r0, #0
 218 0048 7CD1     		bne	.L20
 219              	.L11:
  67:Core/Src/can_setup.c ****     {
  68:Core/Src/can_setup.c ****         Error_Handler();
  69:Core/Src/can_setup.c ****     }
  70:Core/Src/can_setup.c **** 
  71:Core/Src/can_setup.c ****     sf4.FilterBank = 1; // CAN1 Filter bank starts at 0
ARM GAS  /tmp/ccT5ZNUj.s 			page 6


 220              		.loc 1 71 0
 221 004a 4E49     		ldr	r1, .L28+16
 222 004c 0123     		movs	r3, #1
 223 004e 4B61     		str	r3, [r1, #20]
  72:Core/Src/can_setup.c ****     sf4.FilterMode = CAN_FILTERMODE_IDLIST;
 224              		.loc 1 72 0
 225 0050 8B61     		str	r3, [r1, #24]
  73:Core/Src/can_setup.c ****     sf4.FilterScale = CAN_FILTERSCALE_16BIT;
 226              		.loc 1 73 0
 227 0052 0022     		movs	r2, #0
 228 0054 CA61     		str	r2, [r1, #28]
  74:Core/Src/can_setup.c ****     sf4.FilterIdLow = 0x135 << 5;      //LDU AMPS,RPM,HSTEMP,POTNOM
 229              		.loc 1 74 0
 230 0056 42F2A060 		movw	r0, #9888
 231 005a 4860     		str	r0, [r1, #4]
  75:Core/Src/can_setup.c ****     sf4.FilterIdHigh = 0x136 << 5;     //LDU PACK VOLT, RUN
 232              		.loc 1 75 0
 233 005c 4FF41B50 		mov	r0, #9920
 234 0060 0860     		str	r0, [r1]
  76:Core/Src/can_setup.c ****     sf4.FilterMaskIdLow = 0x138 << 5;  //BMS1
 235              		.loc 1 76 0
 236 0062 4FF41C50 		mov	r0, #9984
 237 0066 C860     		str	r0, [r1, #12]
  77:Core/Src/can_setup.c ****     sf4.FilterMaskIdHigh = 0x139 << 5; //BMS2
 238              		.loc 1 77 0
 239 0068 42F22070 		movw	r0, #10016
 240 006c 8860     		str	r0, [r1, #8]
  78:Core/Src/can_setup.c ****     sf4.FilterFIFOAssignment = CAN_RX_FIFO0;
 241              		.loc 1 78 0
 242 006e 0A61     		str	r2, [r1, #16]
  79:Core/Src/can_setup.c ****     sf4.SlaveStartFilterBank = 14;
 243              		.loc 1 79 0
 244 0070 0E22     		movs	r2, #14
 245 0072 4A62     		str	r2, [r1, #36]
  80:Core/Src/can_setup.c ****     sf4.FilterActivation = ENABLE;
 246              		.loc 1 80 0
 247 0074 0B62     		str	r3, [r1, #32]
  81:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan1, &sf4) != HAL_OK)
 248              		.loc 1 81 0
 249 0076 4248     		ldr	r0, .L28+12
 250 0078 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 251              	.LVL12:
 252 007c 0028     		cmp	r0, #0
 253 007e 64D1     		bne	.L21
 254              	.L12:
  82:Core/Src/can_setup.c ****     {
  83:Core/Src/can_setup.c ****         Error_Handler();
  84:Core/Src/can_setup.c ****     }
  85:Core/Src/can_setup.c **** 
  86:Core/Src/can_setup.c ****     sf5.FilterBank = 2; // CAN1 Filter bank starts at 0
 255              		.loc 1 86 0
 256 0080 4149     		ldr	r1, .L28+20
 257 0082 0223     		movs	r3, #2
 258 0084 4B61     		str	r3, [r1, #20]
  87:Core/Src/can_setup.c ****     sf5.FilterMode = CAN_FILTERMODE_IDLIST;
 259              		.loc 1 87 0
 260 0086 0123     		movs	r3, #1
ARM GAS  /tmp/ccT5ZNUj.s 			page 7


 261 0088 8B61     		str	r3, [r1, #24]
  88:Core/Src/can_setup.c ****     sf5.FilterScale = CAN_FILTERSCALE_16BIT;
 262              		.loc 1 88 0
 263 008a 0022     		movs	r2, #0
 264 008c CA61     		str	r2, [r1, #28]
  89:Core/Src/can_setup.c ****     sf5.FilterIdLow = 0x109 << 5;      //CHARGER STATUS
 265              		.loc 1 89 0
 266 008e 42F22010 		movw	r0, #8480
 267 0092 4860     		str	r0, [r1, #4]
  90:Core/Src/can_setup.c ****     sf5.FilterIdHigh = 0x38E << 5;     //IBOOST
 268              		.loc 1 90 0
 269 0094 47F2C010 		movw	r0, #29120
 270 0098 0860     		str	r0, [r1]
  91:Core/Src/can_setup.c ****     sf5.FilterMaskIdLow = 0x581 << 5;  //CANOPEN
 271              		.loc 1 91 0
 272 009a 4BF22000 		movw	r0, #45088
 273 009e C860     		str	r0, [r1, #12]
  92:Core/Src/can_setup.c ****     sf5.FilterMaskIdHigh = 0x601 << 5; //CANOPEN
 274              		.loc 1 92 0
 275 00a0 4CF22000 		movw	r0, #49184
 276 00a4 8860     		str	r0, [r1, #8]
  93:Core/Src/can_setup.c ****     sf5.FilterFIFOAssignment = CAN_RX_FIFO0;
 277              		.loc 1 93 0
 278 00a6 0A61     		str	r2, [r1, #16]
  94:Core/Src/can_setup.c ****     sf5.SlaveStartFilterBank = 14;
 279              		.loc 1 94 0
 280 00a8 0E22     		movs	r2, #14
 281 00aa 4A62     		str	r2, [r1, #36]
  95:Core/Src/can_setup.c ****     sf5.FilterActivation = ENABLE;
 282              		.loc 1 95 0
 283 00ac 0B62     		str	r3, [r1, #32]
  96:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan1, &sf5) != HAL_OK)
 284              		.loc 1 96 0
 285 00ae 3448     		ldr	r0, .L28+12
 286 00b0 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 287              	.LVL13:
 288 00b4 0028     		cmp	r0, #0
 289 00b6 4BD1     		bne	.L22
 290              	.L13:
  97:Core/Src/can_setup.c ****     {
  98:Core/Src/can_setup.c ****         Error_Handler();
  99:Core/Src/can_setup.c ****     }
 100:Core/Src/can_setup.c ****     if (HAL_CAN_Start(&hcan1) != HAL_OK)
 291              		.loc 1 100 0
 292 00b8 3148     		ldr	r0, .L28+12
 293 00ba FFF7FEFF 		bl	HAL_CAN_Start
 294              	.LVL14:
 295 00be 0028     		cmp	r0, #0
 296 00c0 49D1     		bne	.L23
 297              	.L14:
 101:Core/Src/can_setup.c ****     {
 102:Core/Src/can_setup.c ****         Error_Handler();
 103:Core/Src/can_setup.c ****     }
 104:Core/Src/can_setup.c **** 
 105:Core/Src/can_setup.c ****     if (HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING) != HAL_OK)
 298              		.loc 1 105 0
 299 00c2 0221     		movs	r1, #2
ARM GAS  /tmp/ccT5ZNUj.s 			page 8


 300 00c4 2E48     		ldr	r0, .L28+12
 301 00c6 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 302              	.LVL15:
 303 00ca 0028     		cmp	r0, #0
 304 00cc 46D1     		bne	.L24
 305              	.L15:
 106:Core/Src/can_setup.c ****     {
 107:Core/Src/can_setup.c ****         Error_Handler();
 108:Core/Src/can_setup.c ****     }
 109:Core/Src/can_setup.c ****     HAL_NVIC_SetPriority(CAN1_TX_IRQn, 3, 0);
 306              		.loc 1 109 0
 307 00ce 0022     		movs	r2, #0
 308 00d0 0321     		movs	r1, #3
 309 00d2 1320     		movs	r0, #19
 310 00d4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 311              	.LVL16:
 110:Core/Src/can_setup.c ****     HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 312              		.loc 1 110 0
 313 00d8 1320     		movs	r0, #19
 314 00da FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 315              	.LVL17:
 111:Core/Src/can_setup.c **** 
 112:Core/Src/can_setup.c ****     //hcan2
 113:Core/Src/can_setup.c ****     txMsg2.IDE = CAN_ID_STD;
 316              		.loc 1 113 0
 317 00de 2B4A     		ldr	r2, .L28+24
 318 00e0 0023     		movs	r3, #0
 319 00e2 9360     		str	r3, [r2, #8]
 114:Core/Src/can_setup.c ****     txMsg2.RTR = CAN_RTR_DATA;
 320              		.loc 1 114 0
 321 00e4 D360     		str	r3, [r2, #12]
 115:Core/Src/can_setup.c ****     txMsg2.TransmitGlobalTime = DISABLE;
 322              		.loc 1 115 0
 323 00e6 1375     		strb	r3, [r2, #20]
 116:Core/Src/can_setup.c **** 
 117:Core/Src/can_setup.c ****     txMsgExt2.IDE = CAN_ID_EXT;
 324              		.loc 1 117 0
 325 00e8 294A     		ldr	r2, .L28+28
 326 00ea 0421     		movs	r1, #4
 327 00ec 9160     		str	r1, [r2, #8]
 118:Core/Src/can_setup.c ****     txMsgExt2.RTR = CAN_RTR_DATA;
 328              		.loc 1 118 0
 329 00ee D360     		str	r3, [r2, #12]
 119:Core/Src/can_setup.c ****     txMsgExt2.TransmitGlobalTime = DISABLE;
 330              		.loc 1 119 0
 331 00f0 1375     		strb	r3, [r2, #20]
 120:Core/Src/can_setup.c **** 
 121:Core/Src/can_setup.c ****     sf2.FilterBank = 14; // CAN2 Filter bank starts at 14
 332              		.loc 1 121 0
 333 00f2 2849     		ldr	r1, .L28+32
 334 00f4 0E22     		movs	r2, #14
 335 00f6 4A61     		str	r2, [r1, #20]
 122:Core/Src/can_setup.c ****     sf2.FilterMode = CAN_FILTERMODE_IDLIST;
 336              		.loc 1 122 0
 337 00f8 0123     		movs	r3, #1
 338 00fa 8B61     		str	r3, [r1, #24]
 123:Core/Src/can_setup.c ****     sf2.FilterScale = CAN_FILTERSCALE_32BIT;
ARM GAS  /tmp/ccT5ZNUj.s 			page 9


 339              		.loc 1 123 0
 340 00fc CB61     		str	r3, [r1, #28]
 124:Core/Src/can_setup.c ****     sf2.FilterIdLow = ((0x18FF11F2 << 3) & 0xFFF8) | 4; //ENCODER EVENT
 341              		.loc 1 124 0
 342 00fe 48F69470 		movw	r0, #36756
 343 0102 4860     		str	r0, [r1, #4]
 125:Core/Src/can_setup.c ****     sf2.FilterIdHigh = (0x18FF11F2 >> 13) & 0xFFFF;
 344              		.loc 1 125 0
 345 0104 4CF2F870 		movw	r0, #51192
 346 0108 0860     		str	r0, [r1]
 126:Core/Src/can_setup.c ****     sf2.FilterMaskIdLow = ((0x18FF0FF2 << 3) & 0xFFF8) | 4; //ENCODER DATA
 347              		.loc 1 126 0
 348 010a 47F69474 		movw	r4, #32660
 349 010e CC60     		str	r4, [r1, #12]
 127:Core/Src/can_setup.c ****     sf2.FilterMaskIdHigh = (0x18FF0FF2 >> 13) & 0xFFFF;
 350              		.loc 1 127 0
 351 0110 8860     		str	r0, [r1, #8]
 128:Core/Src/can_setup.c ****     sf2.FilterFIFOAssignment = CAN_RX_FIFO1;
 352              		.loc 1 128 0
 353 0112 0B61     		str	r3, [r1, #16]
 129:Core/Src/can_setup.c ****     sf2.SlaveStartFilterBank = 14;
 354              		.loc 1 129 0
 355 0114 4A62     		str	r2, [r1, #36]
 130:Core/Src/can_setup.c ****     sf2.FilterActivation = ENABLE;
 356              		.loc 1 130 0
 357 0116 0B62     		str	r3, [r1, #32]
 131:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan2, &sf2) != HAL_OK)
 358              		.loc 1 131 0
 359 0118 1F48     		ldr	r0, .L28+36
 360 011a FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 361              	.LVL18:
 362 011e 00BB     		cbnz	r0, .L25
 363              	.L16:
 132:Core/Src/can_setup.c ****     {
 133:Core/Src/can_setup.c ****         Error_Handler();
 134:Core/Src/can_setup.c ****     }
 135:Core/Src/can_setup.c **** 
 136:Core/Src/can_setup.c ****     if (HAL_CAN_Start(&hcan2) != HAL_OK)
 364              		.loc 1 136 0
 365 0120 1D48     		ldr	r0, .L28+36
 366 0122 FFF7FEFF 		bl	HAL_CAN_Start
 367              	.LVL19:
 368 0126 F8B9     		cbnz	r0, .L26
 369              	.L17:
 137:Core/Src/can_setup.c ****     {
 138:Core/Src/can_setup.c ****         Error_Handler();
 139:Core/Src/can_setup.c ****     }
 140:Core/Src/can_setup.c **** 
 141:Core/Src/can_setup.c ****     if (HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO1_MSG_PENDING) != HAL_OK)
 370              		.loc 1 141 0
 371 0128 1021     		movs	r1, #16
 372 012a 1B48     		ldr	r0, .L28+36
 373 012c FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 374              	.LVL20:
 375 0130 E8B9     		cbnz	r0, .L27
 376              	.L18:
 142:Core/Src/can_setup.c ****     {
ARM GAS  /tmp/ccT5ZNUj.s 			page 10


 143:Core/Src/can_setup.c ****         Error_Handler();
 144:Core/Src/can_setup.c ****     }
 145:Core/Src/can_setup.c ****     HAL_NVIC_SetPriority(CAN2_TX_IRQn, 3, 0);
 377              		.loc 1 145 0
 378 0132 0022     		movs	r2, #0
 379 0134 0321     		movs	r1, #3
 380 0136 3F20     		movs	r0, #63
 381 0138 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 382              	.LVL21:
 146:Core/Src/can_setup.c ****     HAL_NVIC_EnableIRQ(CAN2_TX_IRQn);
 383              		.loc 1 146 0
 384 013c 3F20     		movs	r0, #63
 385 013e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 386              	.LVL22:
 387 0142 10BD     		pop	{r4, pc}
 388              	.L20:
  68:Core/Src/can_setup.c ****     }
 389              		.loc 1 68 0
 390 0144 FFF7FEFF 		bl	Error_Handler
 391              	.LVL23:
 392 0148 7FE7     		b	.L11
 393              	.L21:
  83:Core/Src/can_setup.c ****     }
 394              		.loc 1 83 0
 395 014a FFF7FEFF 		bl	Error_Handler
 396              	.LVL24:
 397 014e 97E7     		b	.L12
 398              	.L22:
  98:Core/Src/can_setup.c ****     }
 399              		.loc 1 98 0
 400 0150 FFF7FEFF 		bl	Error_Handler
 401              	.LVL25:
 402 0154 B0E7     		b	.L13
 403              	.L23:
 102:Core/Src/can_setup.c ****     }
 404              		.loc 1 102 0
 405 0156 FFF7FEFF 		bl	Error_Handler
 406              	.LVL26:
 407 015a B2E7     		b	.L14
 408              	.L24:
 107:Core/Src/can_setup.c ****     }
 409              		.loc 1 107 0
 410 015c FFF7FEFF 		bl	Error_Handler
 411              	.LVL27:
 412 0160 B5E7     		b	.L15
 413              	.L25:
 133:Core/Src/can_setup.c ****     }
 414              		.loc 1 133 0
 415 0162 FFF7FEFF 		bl	Error_Handler
 416              	.LVL28:
 417 0166 DBE7     		b	.L16
 418              	.L26:
 138:Core/Src/can_setup.c ****     }
 419              		.loc 1 138 0
 420 0168 FFF7FEFF 		bl	Error_Handler
 421              	.LVL29:
 422 016c DCE7     		b	.L17
ARM GAS  /tmp/ccT5ZNUj.s 			page 11


 423              	.L27:
 143:Core/Src/can_setup.c ****     }
 424              		.loc 1 143 0
 425 016e FFF7FEFF 		bl	Error_Handler
 426              	.LVL30:
 427 0172 DEE7     		b	.L18
 428              	.L29:
 429              		.align	2
 430              	.L28:
 431 0174 00000000 		.word	txMsg
 432 0178 00000000 		.word	txMsgExt
 433 017c 00000000 		.word	sf
 434 0180 00000000 		.word	hcan1
 435 0184 00000000 		.word	sf4
 436 0188 00000000 		.word	sf5
 437 018c 00000000 		.word	txMsg2
 438 0190 00000000 		.word	txMsgExt2
 439 0194 00000000 		.word	sf2
 440 0198 00000000 		.word	hcan2
 441              		.cfi_endproc
 442              	.LFE69:
 444              		.section	.text.printCAN1,"ax",%progbits
 445              		.align	1
 446              		.global	printCAN1
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 450              		.fpu softvfp
 452              	printCAN1:
 453              	.LFB70:
 147:Core/Src/can_setup.c **** }
 148:Core/Src/can_setup.c **** 
 149:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 150:Core/Src/can_setup.c **** 
 151:Core/Src/can_setup.c **** void printCAN1(CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx)
 152:Core/Src/can_setup.c **** {
 454              		.loc 1 152 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              	.LVL31:
 459 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 460              	.LCFI9:
 461              		.cfi_def_cfa_offset 24
 462              		.cfi_offset 4, -24
 463              		.cfi_offset 5, -20
 464              		.cfi_offset 6, -16
 465              		.cfi_offset 7, -12
 466              		.cfi_offset 8, -8
 467              		.cfi_offset 14, -4
 468 0004 0E46     		mov	r6, r1
 153:Core/Src/can_setup.c **** 
 154:Core/Src/can_setup.c ****     uint16_t ID = (rxMsg->StdId);
 469              		.loc 1 154 0
 470 0006 0768     		ldr	r7, [r0]
 471              	.LVL32:
 155:Core/Src/can_setup.c ****     uint64_t xID = (rxMsg->ExtId);
ARM GAS  /tmp/ccT5ZNUj.s 			page 12


 472              		.loc 1 155 0
 473 0008 D0F80480 		ldr	r8, [r0, #4]
 474              	.LVL33:
 156:Core/Src/can_setup.c ****     int IDE = (rxMsg->IDE);
 475              		.loc 1 156 0
 476 000c 8468     		ldr	r4, [r0, #8]
 477              	.LVL34:
 157:Core/Src/can_setup.c ****     int dataLength = (rxMsg->DLC);
 478              		.loc 1 157 0
 479 000e 0569     		ldr	r5, [r0, #16]
 480              	.LVL35:
 158:Core/Src/can_setup.c **** 
 159:Core/Src/can_setup.c ****     printf("\r\n");
 481              		.loc 1 159 0
 482 0010 1248     		ldr	r0, .L38
 483              	.LVL36:
 484 0012 FFF7FEFF 		bl	puts
 485              	.LVL37:
 160:Core/Src/can_setup.c **** 
 161:Core/Src/can_setup.c ****     if (IDE == 0)
 486              		.loc 1 161 0
 487 0016 3CB1     		cbz	r4, .L36
 162:Core/Src/can_setup.c ****     {
 163:Core/Src/can_setup.c ****         printf("CAN_1, %ld, 0x%.3X,", HAL_GetTick(), ID);
 164:Core/Src/can_setup.c ****     }
 165:Core/Src/can_setup.c ****     else if (IDE == 4)
 488              		.loc 1 165 0
 489 0018 042C     		cmp	r4, #4
 490 001a 0DD0     		beq	.L37
 491              	.L32:
 166:Core/Src/can_setup.c ****     {
 167:Core/Src/can_setup.c ****         printf("CAN_1, %ld, 0x%.8llX,", HAL_GetTick(), xID);
 168:Core/Src/can_setup.c ****     }
 169:Core/Src/can_setup.c ****     printf("%d,", dataLength);
 492              		.loc 1 169 0
 493 001c 2946     		mov	r1, r5
 494 001e 1048     		ldr	r0, .L38+4
 495 0020 FFF7FEFF 		bl	printf
 496              	.LVL38:
 497              	.LBB2:
 170:Core/Src/can_setup.c **** 
 171:Core/Src/can_setup.c ****     for (int i = 0; i < dataLength; i++)
 498              		.loc 1 171 0
 499 0024 0024     		movs	r4, #0
 500              	.LVL39:
 501 0026 15E0     		b	.L33
 502              	.LVL40:
 503              	.L36:
 504              	.LBE2:
 163:Core/Src/can_setup.c ****     }
 505              		.loc 1 163 0
 506 0028 FFF7FEFF 		bl	HAL_GetTick
 507              	.LVL41:
 508 002c BAB2     		uxth	r2, r7
 509 002e 0146     		mov	r1, r0
 510 0030 0C48     		ldr	r0, .L38+8
 511 0032 FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccT5ZNUj.s 			page 13


 512              	.LVL42:
 513 0036 F1E7     		b	.L32
 514              	.L37:
 167:Core/Src/can_setup.c ****     }
 515              		.loc 1 167 0
 516 0038 FFF7FEFF 		bl	HAL_GetTick
 517              	.LVL43:
 518 003c 4246     		mov	r2, r8
 519 003e 0023     		movs	r3, #0
 520 0040 0146     		mov	r1, r0
 521 0042 0948     		ldr	r0, .L38+12
 522 0044 FFF7FEFF 		bl	printf
 523              	.LVL44:
 524 0048 E8E7     		b	.L32
 525              	.LVL45:
 526              	.L34:
 527              	.LBB3:
 172:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 528              		.loc 1 172 0 discriminator 3
 529 004a 315D     		ldrb	r1, [r6, r4]	@ zero_extendqisi2
 530 004c 0748     		ldr	r0, .L38+16
 531 004e FFF7FEFF 		bl	printf
 532              	.LVL46:
 171:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 533              		.loc 1 171 0 discriminator 3
 534 0052 0134     		adds	r4, r4, #1
 535              	.LVL47:
 536              	.L33:
 171:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 537              		.loc 1 171 0 is_stmt 0 discriminator 1
 538 0054 AC42     		cmp	r4, r5
 539 0056 F8DB     		blt	.L34
 540              	.LBE3:
 173:Core/Src/can_setup.c **** }
 541              		.loc 1 173 0 is_stmt 1
 542 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 543              	.LVL48:
 544              	.L39:
 545              		.align	2
 546              	.L38:
 547 005c 00000000 		.word	.LC0
 548 0060 30000000 		.word	.LC3
 549 0064 04000000 		.word	.LC1
 550 0068 18000000 		.word	.LC2
 551 006c 34000000 		.word	.LC4
 552              		.cfi_endproc
 553              	.LFE70:
 555              		.section	.text.printCAN2,"ax",%progbits
 556              		.align	1
 557              		.global	printCAN2
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu softvfp
 563              	printCAN2:
 564              	.LFB71:
 174:Core/Src/can_setup.c **** 
ARM GAS  /tmp/ccT5ZNUj.s 			page 14


 175:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 176:Core/Src/can_setup.c **** 
 177:Core/Src/can_setup.c **** void printCAN2(CAN_RxHeaderTypeDef *rxMsg2, uint8_t *canRx2)
 178:Core/Src/can_setup.c **** {
 565              		.loc 1 178 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              	.LVL49:
 570 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 571              	.LCFI10:
 572              		.cfi_def_cfa_offset 24
 573              		.cfi_offset 3, -24
 574              		.cfi_offset 4, -20
 575              		.cfi_offset 5, -16
 576              		.cfi_offset 6, -12
 577              		.cfi_offset 7, -8
 578              		.cfi_offset 14, -4
 179:Core/Src/can_setup.c **** 
 180:Core/Src/can_setup.c ****     uint16_t ID = (rxMsg2->StdId);
 579              		.loc 1 180 0
 580 0002 0668     		ldr	r6, [r0]
 581              	.LVL50:
 181:Core/Src/can_setup.c ****     uint64_t xID = (rxMsg2->ExtId);
 582              		.loc 1 181 0
 583 0004 4768     		ldr	r7, [r0, #4]
 584              	.LVL51:
 182:Core/Src/can_setup.c ****     int IDE = (rxMsg2->IDE);
 585              		.loc 1 182 0
 586 0006 8468     		ldr	r4, [r0, #8]
 587              	.LVL52:
 183:Core/Src/can_setup.c ****     int dataLength = (rxMsg2->DLC);
 588              		.loc 1 183 0
 589 0008 0569     		ldr	r5, [r0, #16]
 590              	.LVL53:
 184:Core/Src/can_setup.c **** 
 185:Core/Src/can_setup.c ****     printf("\r\n");
 591              		.loc 1 185 0
 592 000a 1348     		ldr	r0, .L48
 593              	.LVL54:
 594 000c FFF7FEFF 		bl	puts
 595              	.LVL55:
 186:Core/Src/can_setup.c ****     if (IDE == 0)
 596              		.loc 1 186 0
 597 0010 3CB1     		cbz	r4, .L46
 187:Core/Src/can_setup.c ****     {
 188:Core/Src/can_setup.c ****         printf("CAN_2, %ld, 0x%.3X,", HAL_GetTick(), ID);
 189:Core/Src/can_setup.c ****     }
 190:Core/Src/can_setup.c ****     else if (IDE == 4)
 598              		.loc 1 190 0
 599 0012 042C     		cmp	r4, #4
 600 0014 0DD0     		beq	.L47
 601              	.L42:
 191:Core/Src/can_setup.c ****     {
 192:Core/Src/can_setup.c ****         printf("CAN_2, %ld, 0x%.8llX,", HAL_GetTick(), xID);
 193:Core/Src/can_setup.c ****     }
 194:Core/Src/can_setup.c ****     printf("%d,", dataLength);
ARM GAS  /tmp/ccT5ZNUj.s 			page 15


 602              		.loc 1 194 0
 603 0016 2946     		mov	r1, r5
 604 0018 1048     		ldr	r0, .L48+4
 605 001a FFF7FEFF 		bl	printf
 606              	.LVL56:
 607              	.LBB4:
 195:Core/Src/can_setup.c **** 
 196:Core/Src/can_setup.c ****     for (int i = 0; i < dataLength; i++)
 608              		.loc 1 196 0
 609 001e 0024     		movs	r4, #0
 610              	.LVL57:
 611 0020 16E0     		b	.L43
 612              	.LVL58:
 613              	.L46:
 614              	.LBE4:
 188:Core/Src/can_setup.c ****     }
 615              		.loc 1 188 0
 616 0022 FFF7FEFF 		bl	HAL_GetTick
 617              	.LVL59:
 618 0026 B2B2     		uxth	r2, r6
 619 0028 0146     		mov	r1, r0
 620 002a 0D48     		ldr	r0, .L48+8
 621 002c FFF7FEFF 		bl	printf
 622              	.LVL60:
 623 0030 F1E7     		b	.L42
 624              	.L47:
 192:Core/Src/can_setup.c ****     }
 625              		.loc 1 192 0
 626 0032 FFF7FEFF 		bl	HAL_GetTick
 627              	.LVL61:
 628 0036 3A46     		mov	r2, r7
 629 0038 0023     		movs	r3, #0
 630 003a 0146     		mov	r1, r0
 631 003c 0948     		ldr	r0, .L48+12
 632 003e FFF7FEFF 		bl	printf
 633              	.LVL62:
 634 0042 E8E7     		b	.L42
 635              	.LVL63:
 636              	.L44:
 637              	.LBB5:
 197:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 638              		.loc 1 197 0 discriminator 3
 639 0044 084B     		ldr	r3, .L48+16
 640 0046 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 641 0048 0848     		ldr	r0, .L48+20
 642 004a FFF7FEFF 		bl	printf
 643              	.LVL64:
 196:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 644              		.loc 1 196 0 discriminator 3
 645 004e 0134     		adds	r4, r4, #1
 646              	.LVL65:
 647              	.L43:
 196:Core/Src/can_setup.c ****         printf(" ,0x%.2X", canRx[i]);
 648              		.loc 1 196 0 is_stmt 0 discriminator 1
 649 0050 AC42     		cmp	r4, r5
 650 0052 F7DB     		blt	.L44
 651              	.LBE5:
ARM GAS  /tmp/ccT5ZNUj.s 			page 16


 198:Core/Src/can_setup.c **** }
 652              		.loc 1 198 0 is_stmt 1
 653 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 654              	.LVL66:
 655              	.L49:
 656 0056 00BF     		.align	2
 657              	.L48:
 658 0058 00000000 		.word	.LC0
 659 005c 30000000 		.word	.LC3
 660 0060 00000000 		.word	.LC5
 661 0064 14000000 		.word	.LC6
 662 0068 00000000 		.word	canRx
 663 006c 34000000 		.word	.LC4
 664              		.cfi_endproc
 665              	.LFE71:
 667              		.section	.text.c1tx,"ax",%progbits
 668              		.align	1
 669              		.global	c1tx
 670              		.syntax unified
 671              		.thumb
 672              		.thumb_func
 673              		.fpu softvfp
 675              	c1tx:
 676              	.LFB72:
 199:Core/Src/can_setup.c **** 
 200:Core/Src/can_setup.c **** 
 201:Core/Src/can_setup.c **** 
 202:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 203:Core/Src/can_setup.c **** void c1tx(CAN_TxHeaderTypeDef *txMsg, uint8_t *canTx)
 204:Core/Src/can_setup.c **** {
 677              		.loc 1 204 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              	.LVL67:
 682 0000 08B5     		push	{r3, lr}
 683              	.LCFI11:
 684              		.cfi_def_cfa_offset 8
 685              		.cfi_offset 3, -8
 686              		.cfi_offset 14, -4
 205:Core/Src/can_setup.c **** 
 206:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan1, txMsg, canTx, &canMailbox);
 687              		.loc 1 206 0
 688 0002 094B     		ldr	r3, .L53
 689 0004 0A46     		mov	r2, r1
 690 0006 0146     		mov	r1, r0
 691              	.LVL68:
 692 0008 0848     		ldr	r0, .L53+4
 693              	.LVL69:
 694 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 695              	.LVL70:
 207:Core/Src/can_setup.c ****     txCycle++;
 696              		.loc 1 207 0
 697 000e 084A     		ldr	r2, .L53+8
 698 0010 1368     		ldr	r3, [r2]
 699 0012 0133     		adds	r3, r3, #1
 700 0014 1360     		str	r3, [r2]
ARM GAS  /tmp/ccT5ZNUj.s 			page 17


 208:Core/Src/can_setup.c ****     if (txCycle >= 2)
 701              		.loc 1 208 0
 702 0016 012B     		cmp	r3, #1
 703 0018 05DD     		ble	.L50
 209:Core/Src/can_setup.c ****     {
 210:Core/Src/can_setup.c ****         HAL_Delay(1);
 704              		.loc 1 210 0
 705 001a 0120     		movs	r0, #1
 706 001c FFF7FEFF 		bl	HAL_Delay
 707              	.LVL71:
 211:Core/Src/can_setup.c ****         txCycle = 0;
 708              		.loc 1 211 0
 709 0020 0022     		movs	r2, #0
 710 0022 034B     		ldr	r3, .L53+8
 711 0024 1A60     		str	r2, [r3]
 712              	.L50:
 713 0026 08BD     		pop	{r3, pc}
 714              	.L54:
 715              		.align	2
 716              	.L53:
 717 0028 00000000 		.word	canMailbox
 718 002c 00000000 		.word	hcan1
 719 0030 00000000 		.word	txCycle
 720              		.cfi_endproc
 721              	.LFE72:
 723              		.section	.text.c2tx,"ax",%progbits
 724              		.align	1
 725              		.global	c2tx
 726              		.syntax unified
 727              		.thumb
 728              		.thumb_func
 729              		.fpu softvfp
 731              	c2tx:
 732              	.LFB73:
 212:Core/Src/can_setup.c ****     }
 213:Core/Src/can_setup.c **** }
 214:Core/Src/can_setup.c **** 
 215:Core/Src/can_setup.c **** void c2tx(CAN_TxHeaderTypeDef *txMsg2, uint8_t *canTx2)
 216:Core/Src/can_setup.c **** {
 733              		.loc 1 216 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 737              	.LVL72:
 738 0000 08B5     		push	{r3, lr}
 739              	.LCFI12:
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 3, -8
 742              		.cfi_offset 14, -4
 217:Core/Src/can_setup.c **** 
 218:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan2, txMsg2, canTx2, &canMailbox2);
 743              		.loc 1 218 0
 744 0002 094B     		ldr	r3, .L58
 745 0004 0A46     		mov	r2, r1
 746 0006 0146     		mov	r1, r0
 747              	.LVL73:
 748 0008 0848     		ldr	r0, .L58+4
ARM GAS  /tmp/ccT5ZNUj.s 			page 18


 749              	.LVL74:
 750 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 751              	.LVL75:
 219:Core/Src/can_setup.c ****     txCycle2++;
 752              		.loc 1 219 0
 753 000e 084A     		ldr	r2, .L58+8
 754 0010 1368     		ldr	r3, [r2]
 755 0012 0133     		adds	r3, r3, #1
 756 0014 1360     		str	r3, [r2]
 220:Core/Src/can_setup.c ****     if (txCycle2 >= 2)
 757              		.loc 1 220 0
 758 0016 012B     		cmp	r3, #1
 759 0018 05DD     		ble	.L55
 221:Core/Src/can_setup.c ****     {
 222:Core/Src/can_setup.c ****         HAL_Delay(1);
 760              		.loc 1 222 0
 761 001a 0120     		movs	r0, #1
 762 001c FFF7FEFF 		bl	HAL_Delay
 763              	.LVL76:
 223:Core/Src/can_setup.c ****         txCycle2 = 0;
 764              		.loc 1 223 0
 765 0020 0022     		movs	r2, #0
 766 0022 034B     		ldr	r3, .L58+8
 767 0024 1A60     		str	r2, [r3]
 768              	.L55:
 769 0026 08BD     		pop	{r3, pc}
 770              	.L59:
 771              		.align	2
 772              	.L58:
 773 0028 00000000 		.word	canMailbox2
 774 002c 00000000 		.word	hcan2
 775 0030 00000000 		.word	txCycle2
 776              		.cfi_endproc
 777              	.LFE73:
 779              		.section	.text.c1txExt,"ax",%progbits
 780              		.align	1
 781              		.global	c1txExt
 782              		.syntax unified
 783              		.thumb
 784              		.thumb_func
 785              		.fpu softvfp
 787              	c1txExt:
 788              	.LFB74:
 224:Core/Src/can_setup.c ****     }
 225:Core/Src/can_setup.c **** }
 226:Core/Src/can_setup.c **** 
 227:Core/Src/can_setup.c **** void c1txExt(CAN_TxHeaderTypeDef *txMsgExt, uint8_t *canTx)
 228:Core/Src/can_setup.c **** {
 789              		.loc 1 228 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              	.LVL77:
 794 0000 08B5     		push	{r3, lr}
 795              	.LCFI13:
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 3, -8
ARM GAS  /tmp/ccT5ZNUj.s 			page 19


 798              		.cfi_offset 14, -4
 229:Core/Src/can_setup.c **** 
 230:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan1, txMsgExt, canTx, &canMailbox);
 799              		.loc 1 230 0
 800 0002 094B     		ldr	r3, .L63
 801 0004 0A46     		mov	r2, r1
 802 0006 0146     		mov	r1, r0
 803              	.LVL78:
 804 0008 0848     		ldr	r0, .L63+4
 805              	.LVL79:
 806 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 807              	.LVL80:
 231:Core/Src/can_setup.c ****     txCycle++;
 808              		.loc 1 231 0
 809 000e 084A     		ldr	r2, .L63+8
 810 0010 1368     		ldr	r3, [r2]
 811 0012 0133     		adds	r3, r3, #1
 812 0014 1360     		str	r3, [r2]
 232:Core/Src/can_setup.c ****     if (txCycle >= 2)
 813              		.loc 1 232 0
 814 0016 012B     		cmp	r3, #1
 815 0018 05DD     		ble	.L60
 233:Core/Src/can_setup.c ****     {
 234:Core/Src/can_setup.c ****         HAL_Delay(1);
 816              		.loc 1 234 0
 817 001a 0120     		movs	r0, #1
 818 001c FFF7FEFF 		bl	HAL_Delay
 819              	.LVL81:
 235:Core/Src/can_setup.c ****         txCycle = 0;
 820              		.loc 1 235 0
 821 0020 0022     		movs	r2, #0
 822 0022 034B     		ldr	r3, .L63+8
 823 0024 1A60     		str	r2, [r3]
 824              	.L60:
 825 0026 08BD     		pop	{r3, pc}
 826              	.L64:
 827              		.align	2
 828              	.L63:
 829 0028 00000000 		.word	canMailbox
 830 002c 00000000 		.word	hcan1
 831 0030 00000000 		.word	txCycle
 832              		.cfi_endproc
 833              	.LFE74:
 835              		.section	.text.c2txExt,"ax",%progbits
 836              		.align	1
 837              		.global	c2txExt
 838              		.syntax unified
 839              		.thumb
 840              		.thumb_func
 841              		.fpu softvfp
 843              	c2txExt:
 844              	.LFB75:
 236:Core/Src/can_setup.c ****     }
 237:Core/Src/can_setup.c **** }
 238:Core/Src/can_setup.c **** 
 239:Core/Src/can_setup.c **** void c2txExt(CAN_TxHeaderTypeDef *txMsg2Ext, uint8_t *canTx2)
 240:Core/Src/can_setup.c **** {
ARM GAS  /tmp/ccT5ZNUj.s 			page 20


 845              		.loc 1 240 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              	.LVL82:
 850 0000 08B5     		push	{r3, lr}
 851              	.LCFI14:
 852              		.cfi_def_cfa_offset 8
 853              		.cfi_offset 3, -8
 854              		.cfi_offset 14, -4
 241:Core/Src/can_setup.c **** 
 242:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan2, txMsg2Ext, canTx2, &canMailbox2);
 855              		.loc 1 242 0
 856 0002 094B     		ldr	r3, .L68
 857 0004 0A46     		mov	r2, r1
 858 0006 0146     		mov	r1, r0
 859              	.LVL83:
 860 0008 0848     		ldr	r0, .L68+4
 861              	.LVL84:
 862 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 863              	.LVL85:
 243:Core/Src/can_setup.c ****     txCycle2++;
 864              		.loc 1 243 0
 865 000e 084A     		ldr	r2, .L68+8
 866 0010 1368     		ldr	r3, [r2]
 867 0012 0133     		adds	r3, r3, #1
 868 0014 1360     		str	r3, [r2]
 244:Core/Src/can_setup.c ****     if (txCycle2 >= 2)
 869              		.loc 1 244 0
 870 0016 012B     		cmp	r3, #1
 871 0018 05DD     		ble	.L65
 245:Core/Src/can_setup.c ****     {
 246:Core/Src/can_setup.c ****         HAL_Delay(1);
 872              		.loc 1 246 0
 873 001a 0120     		movs	r0, #1
 874 001c FFF7FEFF 		bl	HAL_Delay
 875              	.LVL86:
 247:Core/Src/can_setup.c ****         txCycle2 = 0;
 876              		.loc 1 247 0
 877 0020 0022     		movs	r2, #0
 878 0022 034B     		ldr	r3, .L68+8
 879 0024 1A60     		str	r2, [r3]
 880              	.L65:
 881 0026 08BD     		pop	{r3, pc}
 882              	.L69:
 883              		.align	2
 884              	.L68:
 885 0028 00000000 		.word	canMailbox2
 886 002c 00000000 		.word	hcan2
 887 0030 00000000 		.word	txCycle2
 888              		.cfi_endproc
 889              	.LFE75:
 891              		.comm	canDebug,4,4
 892              		.comm	txCycle2,4,4
 893              		.comm	txCycle,4,4
 894              		.comm	canTx2,8,4
 895              		.comm	canTx,8,4
ARM GAS  /tmp/ccT5ZNUj.s 			page 21


 896              		.comm	canMailbox2,4,4
 897              		.comm	canMailbox,4,4
 898              		.comm	canRx2,8,4
 899              		.comm	canRx,8,4
 900              		.comm	txMsgExt2,24,4
 901              		.comm	txMsg2,24,4
 902              		.comm	rxMsg2,28,4
 903              		.comm	txMsgExt,24,4
 904              		.comm	txMsg,24,4
 905              		.comm	rxMsg,28,4
 906              		.comm	sf5,40,4
 907              		.comm	sf4,40,4
 908              		.comm	sf3,40,4
 909              		.comm	sf2,40,4
 910              		.comm	sf,40,4
 911              		.comm	hcan2,40,4
 912              		.comm	hcan1,40,4
 913              		.comm	LIDAR,8,4
 914              		.comm	te,12,4
 915              		.comm	BMS,20,4
 916              		.comm	charger,3,4
 917              		.comm	vcu,7,4
 918              		.comm	iboost,2,4
 919              		.comm	ldu,18,4
 920              		.comm	tempdata,4,4
 921              		.comm	ADC_data,12,4
 922              		.comm	tenderActive,1,1
 923              		.comm	time_now,4,4
 924              		.comm	period,4,4
 925              		.comm	DCDC,4,4
 926              		.section	.rodata.printCAN1.str1.4,"aMS",%progbits,1
 927              		.align	2
 928              	.LC0:
 929 0000 0D00     		.ascii	"\015\000"
 930 0002 0000     		.space	2
 931              	.LC1:
 932 0004 43414E5F 		.ascii	"CAN_1, %ld, 0x%.3X,\000"
 932      312C2025 
 932      6C642C20 
 932      3078252E 
 932      33582C00 
 933              	.LC2:
 934 0018 43414E5F 		.ascii	"CAN_1, %ld, 0x%.8llX,\000"
 934      312C2025 
 934      6C642C20 
 934      3078252E 
 934      386C6C58 
 935 002e 0000     		.space	2
 936              	.LC3:
 937 0030 25642C00 		.ascii	"%d,\000"
 938              	.LC4:
 939 0034 202C3078 		.ascii	" ,0x%.2X\000"
 939      252E3258 
 939      00
 940              		.section	.rodata.printCAN2.str1.4,"aMS",%progbits,1
 941              		.align	2
 942              	.LC5:
ARM GAS  /tmp/ccT5ZNUj.s 			page 22


 943 0000 43414E5F 		.ascii	"CAN_2, %ld, 0x%.3X,\000"
 943      322C2025 
 943      6C642C20 
 943      3078252E 
 943      33582C00 
 944              	.LC6:
 945 0014 43414E5F 		.ascii	"CAN_2, %ld, 0x%.8llX,\000"
 945      322C2025 
 945      6C642C20 
 945      3078252E 
 945      386C6C58 
 946              		.text
 947              	.Letext0:
 948              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 949              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 950              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 951              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 952              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
 953              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 954              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 955              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 956              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 957              		.file 11 "/usr/include/newlib/sys/lock.h"
 958              		.file 12 "/usr/include/newlib/sys/_types.h"
 959              		.file 13 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 960              		.file 14 "/usr/include/newlib/sys/reent.h"
 961              		.file 15 "Core/Inc/dcdc.h"
 962              		.file 16 "Core/Inc/vcu.h"
 963              		.file 17 "Core/Inc/encoder.h"
 964              		.file 18 "Core/Inc/lidar.h"
 965              		.file 19 "Core/Inc/can_setup.h"
 966              		.file 20 "/usr/include/newlib/stdio.h"
 967              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 968              		.file 22 "Core/Inc/main.h"
 969              		.file 23 "<built-in>"
ARM GAS  /tmp/ccT5ZNUj.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 can_setup.c
     /tmp/ccT5ZNUj.s:16     .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccT5ZNUj.s:23     .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccT5ZNUj.s:74     .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 $t
     /tmp/ccT5ZNUj.s:81     .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo1MsgPendingCallback
     /tmp/ccT5ZNUj.s:131    .text.HAL_CAN_ErrorCallback:0000000000000000 $t
     /tmp/ccT5ZNUj.s:138    .text.HAL_CAN_ErrorCallback:0000000000000000 HAL_CAN_ErrorCallback
     /tmp/ccT5ZNUj.s:151    .text.canSettings:0000000000000000 $t
     /tmp/ccT5ZNUj.s:158    .text.canSettings:0000000000000000 canSettings
     /tmp/ccT5ZNUj.s:431    .text.canSettings:0000000000000174 $d
                            *COM*:0000000000000018 txMsg
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000028 hcan1
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000018 txMsg2
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000028 hcan2
     /tmp/ccT5ZNUj.s:445    .text.printCAN1:0000000000000000 $t
     /tmp/ccT5ZNUj.s:452    .text.printCAN1:0000000000000000 printCAN1
     /tmp/ccT5ZNUj.s:547    .text.printCAN1:000000000000005c $d
     /tmp/ccT5ZNUj.s:556    .text.printCAN2:0000000000000000 $t
     /tmp/ccT5ZNUj.s:563    .text.printCAN2:0000000000000000 printCAN2
     /tmp/ccT5ZNUj.s:658    .text.printCAN2:0000000000000058 $d
                            *COM*:0000000000000008 canRx
     /tmp/ccT5ZNUj.s:668    .text.c1tx:0000000000000000 $t
     /tmp/ccT5ZNUj.s:675    .text.c1tx:0000000000000000 c1tx
     /tmp/ccT5ZNUj.s:717    .text.c1tx:0000000000000028 $d
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000004 txCycle
     /tmp/ccT5ZNUj.s:724    .text.c2tx:0000000000000000 $t
     /tmp/ccT5ZNUj.s:731    .text.c2tx:0000000000000000 c2tx
     /tmp/ccT5ZNUj.s:773    .text.c2tx:0000000000000028 $d
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 txCycle2
     /tmp/ccT5ZNUj.s:780    .text.c1txExt:0000000000000000 $t
     /tmp/ccT5ZNUj.s:787    .text.c1txExt:0000000000000000 c1txExt
     /tmp/ccT5ZNUj.s:829    .text.c1txExt:0000000000000028 $d
     /tmp/ccT5ZNUj.s:836    .text.c2txExt:0000000000000000 $t
     /tmp/ccT5ZNUj.s:843    .text.c2txExt:0000000000000000 c2txExt
     /tmp/ccT5ZNUj.s:885    .text.c2txExt:0000000000000028 $d
                            *COM*:0000000000000004 canDebug
                            *COM*:0000000000000008 canTx2
                            *COM*:0000000000000008 canTx
                            *COM*:0000000000000008 canRx2
                            *COM*:000000000000001c rxMsg2
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 sf3
                            *COM*:0000000000000008 LIDAR
                            *COM*:000000000000000c te
                            *COM*:0000000000000014 BMS
                            *COM*:0000000000000003 charger
                            *COM*:0000000000000007 vcu
                            *COM*:0000000000000002 iboost
ARM GAS  /tmp/ccT5ZNUj.s 			page 24


                            *COM*:0000000000000012 ldu
                            *COM*:0000000000000004 tempdata
                            *COM*:000000000000000c ADC_data
                            *COM*:0000000000000001 tenderActive
                            *COM*:0000000000000004 time_now
                            *COM*:0000000000000004 period
                            *COM*:0000000000000004 DCDC
     /tmp/ccT5ZNUj.s:927    .rodata.printCAN1.str1.4:0000000000000000 $d
     /tmp/ccT5ZNUj.s:941    .rodata.printCAN2.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_CAN_GetRxMessage
decodeCAN
getLidar
Error_Handler
getData
getEvent
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
puts
printf
HAL_GetTick
HAL_CAN_AddTxMessage
HAL_Delay
