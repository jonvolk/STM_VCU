ARM GAS  /tmp/ccSlwDbG.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"dynamics.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	__aeabi_dmul
  16              		.global	__aeabi_ddiv
  17              		.section	.text.deg2rad,"ax",%progbits
  18              		.align	1
  19              		.global	deg2rad
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu softvfp
  25              	deg2rad:
  26              	.LFB67:
  27              		.file 1 "Core/Inc/distance.h"
   1:Core/Inc/distance.h **** #if !defined(__DISTANCE_H__)
   2:Core/Inc/distance.h **** #define __DISTANCE_H__
   3:Core/Inc/distance.h **** 
   4:Core/Inc/distance.h **** /*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
   5:Core/Inc/distance.h **** /*::                                                                         :*/
   6:Core/Inc/distance.h **** /*::  This routine calculates the distance between two points (given the     :*/
   7:Core/Inc/distance.h **** /*::  latitude/longitude of those points). It is being used to calculate     :*/
   8:Core/Inc/distance.h **** /*::  the distance between two locations using GeoDataSource(TM) products.   :*/
   9:Core/Inc/distance.h **** /*::                                                                         :*/
  10:Core/Inc/distance.h **** /*::  Definitions:                                                           :*/
  11:Core/Inc/distance.h **** /*::    South latitudes are negative, east longitudes are positive           :*/
  12:Core/Inc/distance.h **** /*::                                                                         :*/
  13:Core/Inc/distance.h **** /*::  Passed to function:                                                    :*/
  14:Core/Inc/distance.h **** /*::    lat1, lon1 = Latitude and Longitude of point 1 (in decimal degrees)  :*/
  15:Core/Inc/distance.h **** /*::    lat2, lon2 = Latitude and Longitude of point 2 (in decimal degrees)  :*/
  16:Core/Inc/distance.h **** /*::    unit = the unit you desire for results                               :*/
  17:Core/Inc/distance.h **** /*::           where: 'M' is statute miles (default)                         :*/
  18:Core/Inc/distance.h **** /*::                  'K' is kilometers                                      :*/
  19:Core/Inc/distance.h **** /*::                  'N' is nautical miles                                  :*/
  20:Core/Inc/distance.h **** /*::  Worldwide cities and other features databases with latitude longitude  :*/
  21:Core/Inc/distance.h **** /*::  are available at https://www.geodatasource.com                         :*/
  22:Core/Inc/distance.h **** /*::                                                                         :*/
  23:Core/Inc/distance.h **** /*::  For enquiries, please contact sales@geodatasource.com                  :*/
  24:Core/Inc/distance.h **** /*::                                                                         :*/
  25:Core/Inc/distance.h **** /*::  Official Web site: https://www.geodatasource.com                       :*/
  26:Core/Inc/distance.h **** /*::                                                                         :*/
  27:Core/Inc/distance.h **** /*::           GeoDataSource.com (C) All Rights Reserved 2018                :*/
  28:Core/Inc/distance.h **** /*::                                                                         :*/
  29:Core/Inc/distance.h **** /*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
  30:Core/Inc/distance.h **** 
  31:Core/Inc/distance.h **** #include <math.h>
ARM GAS  /tmp/ccSlwDbG.s 			page 2


  32:Core/Inc/distance.h **** #include "my_math.h"
  33:Core/Inc/distance.h **** 
  34:Core/Inc/distance.h **** #define pi 3.14159265358979323846
  35:Core/Inc/distance.h **** 
  36:Core/Inc/distance.h **** /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
  37:Core/Inc/distance.h **** /*::  Function prototypes                                           :*/
  38:Core/Inc/distance.h **** /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
  39:Core/Inc/distance.h **** double deg2rad(double);
  40:Core/Inc/distance.h **** double rad2deg(double);
  41:Core/Inc/distance.h **** 
  42:Core/Inc/distance.h **** double distance(double lat1, double lon1, double lat2, double lon2, char unit)
  43:Core/Inc/distance.h **** {
  44:Core/Inc/distance.h ****     double theta, dist;
  45:Core/Inc/distance.h ****     if ((lat1 == lat2) && (lon1 == lon2))
  46:Core/Inc/distance.h ****     {
  47:Core/Inc/distance.h ****         return 0;
  48:Core/Inc/distance.h ****     }
  49:Core/Inc/distance.h ****     else
  50:Core/Inc/distance.h ****     {
  51:Core/Inc/distance.h ****         theta = lon1 - lon2;
  52:Core/Inc/distance.h ****         dist = sin(deg2rad(lat1)) * sin(deg2rad(lat2)) + cos(deg2rad(lat1)) * cos(deg2rad(lat2)) * 
  53:Core/Inc/distance.h ****         dist = acos(dist);
  54:Core/Inc/distance.h ****         dist = rad2deg(dist);
  55:Core/Inc/distance.h ****         dist = dist * 60 * 1.1515;
  56:Core/Inc/distance.h ****         switch (unit)
  57:Core/Inc/distance.h ****         {
  58:Core/Inc/distance.h ****         case 'M':
  59:Core/Inc/distance.h ****             break;
  60:Core/Inc/distance.h ****         case 'K':
  61:Core/Inc/distance.h ****             dist = dist * 1.609344;
  62:Core/Inc/distance.h ****             break;
  63:Core/Inc/distance.h ****         case 'N':
  64:Core/Inc/distance.h ****             dist = dist * 0.8684;
  65:Core/Inc/distance.h ****             break;
  66:Core/Inc/distance.h ****         }
  67:Core/Inc/distance.h ****         return (dist);
  68:Core/Inc/distance.h ****     }
  69:Core/Inc/distance.h **** }
  70:Core/Inc/distance.h **** 
  71:Core/Inc/distance.h **** /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
  72:Core/Inc/distance.h **** /*::  This function converts decimal degrees to radians             :*/
  73:Core/Inc/distance.h **** /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
  74:Core/Inc/distance.h **** double deg2rad(double deg)
  75:Core/Inc/distance.h **** {
  28              		.loc 1 75 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 08B5     		push	{r3, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  76:Core/Inc/distance.h ****     return (deg * pi / 180);
  37              		.loc 1 76 0
  38 0002 05A3     		adr	r3, .L3
  39 0004 D3E90023 		ldrd	r2, [r3]
ARM GAS  /tmp/ccSlwDbG.s 			page 3


  40 0008 FFF7FEFF 		bl	__aeabi_dmul
  41              	.LVL1:
  42 000c 0022     		movs	r2, #0
  43 000e 044B     		ldr	r3, .L3+8
  44 0010 FFF7FEFF 		bl	__aeabi_ddiv
  45              	.LVL2:
  77:Core/Inc/distance.h **** }
  46              		.loc 1 77 0
  47 0014 08BD     		pop	{r3, pc}
  48              	.L4:
  49 0016 00BF     		.align	3
  50              	.L3:
  51 0018 182D4454 		.word	1413754136
  52 001c FB210940 		.word	1074340347
  53 0020 00806640 		.word	1080459264
  54              		.cfi_endproc
  55              	.LFE67:
  57              		.section	.text.rad2deg,"ax",%progbits
  58              		.align	1
  59              		.global	rad2deg
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu softvfp
  65              	rad2deg:
  66              	.LFB68:
  78:Core/Inc/distance.h **** 
  79:Core/Inc/distance.h **** /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
  80:Core/Inc/distance.h **** /*::  This function converts radians to decimal degrees             :*/
  81:Core/Inc/distance.h **** /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
  82:Core/Inc/distance.h **** double rad2deg(double rad)
  83:Core/Inc/distance.h **** {
  67              		.loc 1 83 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              	.LVL3:
  72 0000 08B5     		push	{r3, lr}
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 3, -8
  75              		.cfi_offset 14, -4
  84:Core/Inc/distance.h ****     return (rad * 180 / pi);
  76              		.loc 1 84 0
  77 0002 0022     		movs	r2, #0
  78 0004 064B     		ldr	r3, .L7+8
  79 0006 FFF7FEFF 		bl	__aeabi_dmul
  80              	.LVL4:
  81 000a 03A3     		adr	r3, .L7
  82 000c D3E90023 		ldrd	r2, [r3]
  83 0010 FFF7FEFF 		bl	__aeabi_ddiv
  84              	.LVL5:
  85:Core/Inc/distance.h **** }
  85              		.loc 1 85 0
  86 0014 08BD     		pop	{r3, pc}
  87              	.L8:
  88 0016 00BF     		.align	3
  89              	.L7:
ARM GAS  /tmp/ccSlwDbG.s 			page 4


  90 0018 182D4454 		.word	1413754136
  91 001c FB210940 		.word	1074340347
  92 0020 00806640 		.word	1080459264
  93              		.cfi_endproc
  94              	.LFE68:
  96              		.global	__aeabi_dcmpeq
  97              		.global	__aeabi_dsub
  98              		.global	__aeabi_dadd
  99              		.section	.text.distance,"ax",%progbits
 100              		.align	1
 101              		.global	distance
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 105              		.fpu softvfp
 107              	distance:
 108              	.LFB66:
  43:Core/Inc/distance.h ****     double theta, dist;
 109              		.loc 1 43 0
 110              		.cfi_startproc
 111              		@ args = 20, pretend = 0, frame = 16
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              	.LVL6:
 114 0000 2DE9D04F 		push	{r4, r6, r7, r8, r9, r10, fp, lr}
 115              		.cfi_def_cfa_offset 32
 116              		.cfi_offset 4, -32
 117              		.cfi_offset 6, -28
 118              		.cfi_offset 7, -24
 119              		.cfi_offset 8, -20
 120              		.cfi_offset 9, -16
 121              		.cfi_offset 10, -12
 122              		.cfi_offset 11, -8
 123              		.cfi_offset 14, -4
 124 0004 84B0     		sub	sp, sp, #16
 125              		.cfi_def_cfa_offset 48
 126 0006 0646     		mov	r6, r0
 127 0008 0F46     		mov	r7, r1
 128 000a 9046     		mov	r8, r2
 129 000c 9946     		mov	r9, r3
 130 000e 9DF84040 		ldrb	r4, [sp, #64]	@ zero_extendqisi2
  45:Core/Inc/distance.h ****     {
 131              		.loc 1 45 0
 132 0012 DDE90C23 		ldrd	r2, [sp, #48]
 133              	.LVL7:
 134 0016 FFF7FEFF 		bl	__aeabi_dcmpeq
 135              	.LVL8:
 136 001a 38B1     		cbz	r0, .L10
  45:Core/Inc/distance.h ****     {
 137              		.loc 1 45 0 is_stmt 0 discriminator 1
 138 001c DDE90E23 		ldrd	r2, [sp, #56]
 139 0020 4046     		mov	r0, r8
 140 0022 4946     		mov	r1, r9
 141 0024 FFF7FEFF 		bl	__aeabi_dcmpeq
 142              	.LVL9:
 143 0028 0028     		cmp	r0, #0
 144 002a 62D1     		bne	.L15
 145              	.L10:
ARM GAS  /tmp/ccSlwDbG.s 			page 5


  51:Core/Inc/distance.h ****         dist = sin(deg2rad(lat1)) * sin(deg2rad(lat2)) + cos(deg2rad(lat1)) * cos(deg2rad(lat2)) * 
 146              		.loc 1 51 0 is_stmt 1
 147 002c DDE90E23 		ldrd	r2, [sp, #56]
 148 0030 4046     		mov	r0, r8
 149 0032 4946     		mov	r1, r9
 150 0034 FFF7FEFF 		bl	__aeabi_dsub
 151              	.LVL10:
 152 0038 8046     		mov	r8, r0
 153 003a 8946     		mov	r9, r1
 154              	.LVL11:
  52:Core/Inc/distance.h ****         dist = acos(dist);
 155              		.loc 1 52 0
 156 003c 3046     		mov	r0, r6
 157 003e 3946     		mov	r1, r7
 158 0040 FFF7FEFF 		bl	deg2rad
 159              	.LVL12:
 160 0044 CDE90001 		strd	r0, [sp]
 161 0048 FFF7FEFF 		bl	sin
 162              	.LVL13:
 163 004c 0646     		mov	r6, r0
 164 004e 0F46     		mov	r7, r1
 165 0050 DDE90C01 		ldrd	r0, [sp, #48]
 166 0054 FFF7FEFF 		bl	deg2rad
 167              	.LVL14:
 168 0058 CDE90201 		strd	r0, [sp, #8]
 169 005c FFF7FEFF 		bl	sin
 170              	.LVL15:
 171 0060 0246     		mov	r2, r0
 172 0062 0B46     		mov	r3, r1
 173 0064 3046     		mov	r0, r6
 174 0066 3946     		mov	r1, r7
 175 0068 FFF7FEFF 		bl	__aeabi_dmul
 176              	.LVL16:
 177 006c 8246     		mov	r10, r0
 178 006e 8B46     		mov	fp, r1
 179 0070 DDE90001 		ldrd	r0, [sp]
 180 0074 FFF7FEFF 		bl	cos
 181              	.LVL17:
 182 0078 0646     		mov	r6, r0
 183 007a 0F46     		mov	r7, r1
 184 007c DDE90201 		ldrd	r0, [sp, #8]
 185 0080 FFF7FEFF 		bl	cos
 186              	.LVL18:
 187 0084 0246     		mov	r2, r0
 188 0086 0B46     		mov	r3, r1
 189 0088 3046     		mov	r0, r6
 190 008a 3946     		mov	r1, r7
 191 008c FFF7FEFF 		bl	__aeabi_dmul
 192              	.LVL19:
 193 0090 0646     		mov	r6, r0
 194 0092 0F46     		mov	r7, r1
 195 0094 4046     		mov	r0, r8
 196 0096 4946     		mov	r1, r9
 197 0098 FFF7FEFF 		bl	deg2rad
 198              	.LVL20:
 199 009c FFF7FEFF 		bl	cos
 200              	.LVL21:
ARM GAS  /tmp/ccSlwDbG.s 			page 6


 201 00a0 0246     		mov	r2, r0
 202 00a2 0B46     		mov	r3, r1
 203 00a4 3046     		mov	r0, r6
 204 00a6 3946     		mov	r1, r7
 205 00a8 FFF7FEFF 		bl	__aeabi_dmul
 206              	.LVL22:
 207 00ac 0246     		mov	r2, r0
 208 00ae 0B46     		mov	r3, r1
 209 00b0 5046     		mov	r0, r10
 210 00b2 5946     		mov	r1, fp
 211 00b4 FFF7FEFF 		bl	__aeabi_dadd
 212              	.LVL23:
  53:Core/Inc/distance.h ****         dist = rad2deg(dist);
 213              		.loc 1 53 0
 214 00b8 FFF7FEFF 		bl	acos
 215              	.LVL24:
  54:Core/Inc/distance.h ****         dist = dist * 60 * 1.1515;
 216              		.loc 1 54 0
 217 00bc FFF7FEFF 		bl	rad2deg
 218              	.LVL25:
  55:Core/Inc/distance.h ****         switch (unit)
 219              		.loc 1 55 0
 220 00c0 0022     		movs	r2, #0
 221 00c2 154B     		ldr	r3, .L18+24
 222 00c4 FFF7FEFF 		bl	__aeabi_dmul
 223              	.LVL26:
 224 00c8 0DA3     		adr	r3, .L18
 225 00ca D3E90023 		ldrd	r2, [r3]
 226 00ce FFF7FEFF 		bl	__aeabi_dmul
 227              	.LVL27:
  56:Core/Inc/distance.h ****         {
 228              		.loc 1 56 0
 229 00d2 4B2C     		cmp	r4, #75
 230 00d4 07D0     		beq	.L13
 231 00d6 4E2C     		cmp	r4, #78
 232 00d8 0DD1     		bne	.L9
  64:Core/Inc/distance.h ****             break;
 233              		.loc 1 64 0
 234 00da 0BA3     		adr	r3, .L18+8
 235 00dc D3E90023 		ldrd	r2, [r3]
 236 00e0 FFF7FEFF 		bl	__aeabi_dmul
 237              	.LVL28:
  65:Core/Inc/distance.h ****         }
 238              		.loc 1 65 0
 239 00e4 07E0     		b	.L9
 240              	.L13:
  61:Core/Inc/distance.h ****             break;
 241              		.loc 1 61 0
 242 00e6 0AA3     		adr	r3, .L18+16
 243 00e8 D3E90023 		ldrd	r2, [r3]
 244 00ec FFF7FEFF 		bl	__aeabi_dmul
 245              	.LVL29:
  62:Core/Inc/distance.h ****         case 'N':
 246              		.loc 1 62 0
 247 00f0 01E0     		b	.L9
 248              	.LVL30:
 249              	.L15:
ARM GAS  /tmp/ccSlwDbG.s 			page 7


  47:Core/Inc/distance.h ****     }
 250              		.loc 1 47 0
 251 00f2 0020     		movs	r0, #0
 252 00f4 0021     		movs	r1, #0
 253              	.L9:
  69:Core/Inc/distance.h **** 
 254              		.loc 1 69 0
 255 00f6 04B0     		add	sp, sp, #16
 256              		.cfi_def_cfa_offset 32
 257              		@ sp needed
 258 00f8 BDE8D08F 		pop	{r4, r6, r7, r8, r9, r10, fp, pc}
 259              	.LVL31:
 260              	.L19:
 261 00fc AFF30080 		.align	3
 262              	.L18:
 263 0100 06819543 		.word	1133871366
 264 0104 8B6CF23F 		.word	1072852107
 265 0108 B515FBCB 		.word	3422229941
 266 010c EEC9EB3F 		.word	1072417262
 267 0110 A038807E 		.word	2122332320
 268 0114 DFBFF93F 		.word	1073332191
 269 0118 00004E40 		.word	1078853632
 270              		.cfi_endproc
 271              	.LFE66:
 273              		.global	__aeabi_f2iz
 274              		.section	.text.zero2sixty,"ax",%progbits
 275              		.align	1
 276              		.global	zero2sixty
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu softvfp
 282              	zero2sixty:
 283              	.LFB69:
 284              		.file 2 "Core/Src/dynamics.c"
   1:Core/Src/dynamics.c **** #include "dynamics.h"
   2:Core/Src/dynamics.c **** 
   3:Core/Src/dynamics.c **** int zero2sixty(void)
   4:Core/Src/dynamics.c **** {
 285              		.loc 2 4 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289 0000 08B5     		push	{r3, lr}
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 3, -8
 292              		.cfi_offset 14, -4
   5:Core/Src/dynamics.c ****     return GPS.lon;
 293              		.loc 2 5 0
 294 0002 024B     		ldr	r3, .L22
 295 0004 5868     		ldr	r0, [r3, #4]	@ float
 296 0006 FFF7FEFF 		bl	__aeabi_f2iz
 297              	.LVL32:
   6:Core/Src/dynamics.c **** }
 298              		.loc 2 6 0
 299 000a 08BD     		pop	{r3, pc}
 300              	.L23:
ARM GAS  /tmp/ccSlwDbG.s 			page 8


 301              		.align	2
 302              	.L22:
 303 000c 00000000 		.word	GPS
 304              		.cfi_endproc
 305              	.LFE69:
 307              		.section	.text.getPitch,"ax",%progbits
 308              		.align	1
 309              		.global	getPitch
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 313              		.fpu softvfp
 315              	getPitch:
 316              	.LFB70:
   7:Core/Src/dynamics.c **** 
   8:Core/Src/dynamics.c **** int getPitch(void)
   9:Core/Src/dynamics.c **** {
 317              		.loc 2 9 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321 0000 08B5     		push	{r3, lr}
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 3, -8
 324              		.cfi_offset 14, -4
  10:Core/Src/dynamics.c ****     return GPS.lat;
 325              		.loc 2 10 0
 326 0002 024B     		ldr	r3, .L26
 327 0004 1868     		ldr	r0, [r3]	@ float
 328 0006 FFF7FEFF 		bl	__aeabi_f2iz
 329              	.LVL33:
  11:Core/Src/dynamics.c **** }
 330              		.loc 2 11 0
 331 000a 08BD     		pop	{r3, pc}
 332              	.L27:
 333              		.align	2
 334              	.L26:
 335 000c 00000000 		.word	GPS
 336              		.cfi_endproc
 337              	.LFE70:
 339              		.global	__aeabi_i2f
 340              		.section	.text.getDynamics,"ax",%progbits
 341              		.align	1
 342              		.global	getDynamics
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 346              		.fpu softvfp
 348              	getDynamics:
 349              	.LFB71:
  12:Core/Src/dynamics.c **** 
  13:Core/Src/dynamics.c **** void getDynamics(CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx)
  14:Core/Src/dynamics.c **** {
 350              		.loc 2 14 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccSlwDbG.s 			page 9


 354              	.LVL34:
 355 0000 38B5     		push	{r3, r4, r5, lr}
 356              		.cfi_def_cfa_offset 16
 357              		.cfi_offset 3, -16
 358              		.cfi_offset 4, -12
 359              		.cfi_offset 5, -8
 360              		.cfi_offset 14, -4
  15:Core/Src/dynamics.c ****     switch (rxMsg->ExtId)
 361              		.loc 2 15 0
 362 0002 4368     		ldr	r3, [r0, #4]
 363 0004 A3F52023 		sub	r3, r3, #655360
 364 0008 042B     		cmp	r3, #4
 365 000a 67D8     		bhi	.L28
 366 000c DFE803F0 		tbb	[pc, r3]
 367              	.L31:
 368 0010 03       		.byte	(.L30-.L31)/2
 369 0011 20       		.byte	(.L32-.L31)/2
 370 0012 35       		.byte	(.L33-.L31)/2
 371 0013 45       		.byte	(.L34-.L31)/2
 372 0014 56       		.byte	(.L35-.L31)/2
 373 0015 00       		.p2align 1
 374              	.L30:
 375 0016 0C46     		mov	r4, r1
  16:Core/Src/dynamics.c ****     {
  17:Core/Src/dynamics.c ****     case 0x0000A0000:
  18:Core/Src/dynamics.c ****         GPS.lat = (canRx[0] << 24) + (canRx[1] << 16) + (canRx[2] << 8) + canRx[3];
 376              		.loc 2 18 0
 377 0018 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 378              	.LVL35:
 379 001a 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 380 001c 1B04     		lsls	r3, r3, #16
 381 001e 03EB0063 		add	r3, r3, r0, lsl #24
 382 0022 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 383 0024 03EB0023 		add	r3, r3, r0, lsl #8
 384 0028 C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 385 002a 2D4D     		ldr	r5, .L37
 386 002c 1844     		add	r0, r0, r3
 387 002e FFF7FEFF 		bl	__aeabi_i2f
 388              	.LVL36:
 389 0032 2860     		str	r0, [r5]	@ float
  19:Core/Src/dynamics.c ****         GPS.lon = (canRx[4] << 24) + (canRx[5] << 16) + (canRx[6] << 8) + canRx[7];
 390              		.loc 2 19 0
 391 0034 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 392 0036 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 393 0038 1B04     		lsls	r3, r3, #16
 394 003a 03EB0063 		add	r3, r3, r0, lsl #24
 395 003e A079     		ldrb	r0, [r4, #6]	@ zero_extendqisi2
 396 0040 03EB0023 		add	r3, r3, r0, lsl #8
 397 0044 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 398 0046 1844     		add	r0, r0, r3
 399 0048 FFF7FEFF 		bl	__aeabi_i2f
 400              	.LVL37:
 401 004c 6860     		str	r0, [r5, #4]	@ float
  20:Core/Src/dynamics.c ****         break;
 402              		.loc 2 20 0
 403 004e 38BD     		pop	{r3, r4, r5, pc}
 404              	.LVL38:
ARM GAS  /tmp/ccSlwDbG.s 			page 10


 405              	.L32:
  21:Core/Src/dynamics.c **** 
  22:Core/Src/dynamics.c ****     case 0x0000A0001:
  23:Core/Src/dynamics.c ****         GPS.speed = (canRx[0] << 8) + canRx[1];
 406              		.loc 2 23 0
 407 0050 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 408 0052 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 409 0054 02EB0322 		add	r2, r2, r3, lsl #8
 410 0058 214B     		ldr	r3, .L37
 411 005a 1A81     		strh	r2, [r3, #8]	@ movhi
  24:Core/Src/dynamics.c ****         GPS.alt = (canRx[2] << 8) + canRx[3];
 412              		.loc 2 24 0
 413 005c 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 414              	.LVL39:
 415 005e CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 416 0060 02EB0022 		add	r2, r2, r0, lsl #8
 417 0064 5A81     		strh	r2, [r3, #10]	@ movhi
  25:Core/Src/dynamics.c ****         GPS.course = (canRx[4] << 8) + canRx[5];
 418              		.loc 2 25 0
 419 0066 0879     		ldrb	r0, [r1, #4]	@ zero_extendqisi2
 420 0068 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 421 006a 02EB0022 		add	r2, r2, r0, lsl #8
 422 006e 9A81     		strh	r2, [r3, #12]	@ movhi
  26:Core/Src/dynamics.c ****         GPS.speed = canRx[6];
 423              		.loc 2 26 0
 424 0070 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 425 0072 1A81     		strh	r2, [r3, #8]	@ movhi
  27:Core/Src/dynamics.c ****         GPS.valid_10hz = canRx[7];
 426              		.loc 2 27 0
 427 0074 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 428 0076 DA73     		strb	r2, [r3, #15]
  28:Core/Src/dynamics.c ****         break;
 429              		.loc 2 28 0
 430 0078 38BD     		pop	{r3, r4, r5, pc}
 431              	.LVL40:
 432              	.L33:
  29:Core/Src/dynamics.c **** 
  30:Core/Src/dynamics.c ****     case 0x0000A0002:
  31:Core/Src/dynamics.c ****         UTC.valid_5hz = canRx[0];
 433              		.loc 2 31 0
 434 007a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 435 007c 194B     		ldr	r3, .L37+4
 436 007e 1A70     		strb	r2, [r3]
  32:Core/Src/dynamics.c ****         UTC.year = canRx[1];
 437              		.loc 2 32 0
 438 0080 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 439 0082 5A70     		strb	r2, [r3, #1]
  33:Core/Src/dynamics.c ****         UTC.month = canRx[2];
 440              		.loc 2 33 0
 441 0084 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 442 0086 9A70     		strb	r2, [r3, #2]
  34:Core/Src/dynamics.c ****         UTC.day = canRx[3];
 443              		.loc 2 34 0
 444 0088 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 445 008a DA70     		strb	r2, [r3, #3]
  35:Core/Src/dynamics.c ****         UTC.hours = canRx[5];
 446              		.loc 2 35 0
ARM GAS  /tmp/ccSlwDbG.s 			page 11


 447 008c 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 448 008e 1A71     		strb	r2, [r3, #4]
  36:Core/Src/dynamics.c ****         UTC.minutes = canRx[6];
 449              		.loc 2 36 0
 450 0090 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 451 0092 5A71     		strb	r2, [r3, #5]
  37:Core/Src/dynamics.c ****         UTC.seconds = canRx[7];
 452              		.loc 2 37 0
 453 0094 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 454 0096 9A71     		strb	r2, [r3, #6]
  38:Core/Src/dynamics.c ****         break;
 455              		.loc 2 38 0
 456 0098 38BD     		pop	{r3, r4, r5, pc}
 457              	.L34:
  39:Core/Src/dynamics.c **** 
  40:Core/Src/dynamics.c ****     case 0x0000A0003: // val*0x000244141 +8g to -8g
  41:Core/Src/dynamics.c ****         ACCEL.x = (canRx[0] << 8) + canRx[1];
 458              		.loc 2 41 0
 459 009a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 460 009c 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 461 009e 02EB0322 		add	r2, r2, r3, lsl #8
 462 00a2 114B     		ldr	r3, .L37+8
 463 00a4 1A80     		strh	r2, [r3]	@ movhi
  42:Core/Src/dynamics.c ****         ACCEL.y = (canRx[2] << 8) + canRx[3];
 464              		.loc 2 42 0
 465 00a6 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 466              	.LVL41:
 467 00a8 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 468 00aa 02EB0022 		add	r2, r2, r0, lsl #8
 469 00ae 5A80     		strh	r2, [r3, #2]	@ movhi
  43:Core/Src/dynamics.c ****         ACCEL.z = (canRx[4] << 8) + canRx[5];
 470              		.loc 2 43 0
 471 00b0 0879     		ldrb	r0, [r1, #4]	@ zero_extendqisi2
 472 00b2 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 473 00b4 02EB0022 		add	r2, r2, r0, lsl #8
 474 00b8 9A80     		strh	r2, [r3, #4]	@ movhi
  44:Core/Src/dynamics.c ****         break;
 475              		.loc 2 44 0
 476 00ba 38BD     		pop	{r3, r4, r5, pc}
 477              	.LVL42:
 478              	.L35:
  45:Core/Src/dynamics.c **** 
  46:Core/Src/dynamics.c ****     case 0x0000A0004: // val*0x015258789 +500deg/s to -500deg/s
  47:Core/Src/dynamics.c ****         YAW.x = (canRx[0] << 8) + canRx[1];
 479              		.loc 2 47 0
 480 00bc 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 481 00be 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 482 00c0 02EB0322 		add	r2, r2, r3, lsl #8
 483 00c4 094B     		ldr	r3, .L37+12
 484 00c6 1A80     		strh	r2, [r3]	@ movhi
  48:Core/Src/dynamics.c ****         YAW.y = (canRx[2] << 8) + canRx[3];
 485              		.loc 2 48 0
 486 00c8 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 487              	.LVL43:
 488 00ca CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 489 00cc 02EB0022 		add	r2, r2, r0, lsl #8
 490 00d0 5A80     		strh	r2, [r3, #2]	@ movhi
ARM GAS  /tmp/ccSlwDbG.s 			page 12


  49:Core/Src/dynamics.c ****         YAW.z = (canRx[4] << 8) + canRx[5];
 491              		.loc 2 49 0
 492 00d2 0879     		ldrb	r0, [r1, #4]	@ zero_extendqisi2
 493 00d4 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 494 00d6 02EB0022 		add	r2, r2, r0, lsl #8
 495 00da 9A80     		strh	r2, [r3, #4]	@ movhi
 496              	.L28:
 497 00dc 38BD     		pop	{r3, r4, r5, pc}
 498              	.L38:
 499 00de 00BF     		.align	2
 500              	.L37:
 501 00e0 00000000 		.word	GPS
 502 00e4 00000000 		.word	UTC
 503 00e8 00000000 		.word	ACCEL
 504 00ec 00000000 		.word	YAW
 505              		.cfi_endproc
 506              	.LFE71:
 508              		.comm	YAW,6,4
 509              		.comm	ACCEL,6,4
 510              		.comm	UTC,7,4
 511              		.comm	GPS,16,4
 512              		.comm	canDebug,4,4
 513              		.comm	txCycle2,4,4
 514              		.comm	txCycle,4,4
 515              		.comm	canTx2,8,4
 516              		.comm	canTx,8,4
 517              		.comm	canMailbox2,4,4
 518              		.comm	canMailbox,4,4
 519              		.comm	canRx2,8,4
 520              		.comm	canRx,8,4
 521              		.comm	txMsgExt2,24,4
 522              		.comm	txMsg2,24,4
 523              		.comm	rxMsg2,28,4
 524              		.comm	txMsgExt,24,4
 525              		.comm	txMsg,24,4
 526              		.comm	rxMsg,28,4
 527              		.comm	sf5,40,4
 528              		.comm	sf4,40,4
 529              		.comm	sf3,40,4
 530              		.comm	sf2,40,4
 531              		.comm	sf,40,4
 532              		.comm	hcan2,40,4
 533              		.comm	hcan1,40,4
 534              		.comm	LIDAR,8,4
 535              		.comm	te,12,4
 536              		.comm	BMS,20,4
 537              		.comm	charger,3,4
 538              		.comm	vcu,7,4
 539              		.comm	iboost,2,4
 540              		.comm	ldu,18,4
 541              		.comm	tempdata,4,4
 542              		.comm	ADC_data,12,4
 543              		.comm	tenderActive,1,1
 544              		.comm	time_now,4,4
 545              		.comm	period,4,4
 546              		.comm	DCDC,4,4
 547              		.text
ARM GAS  /tmp/ccSlwDbG.s 			page 13


 548              	.Letext0:
 549              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 550              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 551              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 552              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 553              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
 554              		.file 8 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 555              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 556              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 557              		.file 11 "/usr/include/newlib/sys/lock.h"
 558              		.file 12 "/usr/include/newlib/sys/_types.h"
 559              		.file 13 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 560              		.file 14 "/usr/include/newlib/sys/reent.h"
 561              		.file 15 "Core/Inc/dcdc.h"
 562              		.file 16 "Core/Inc/vcu.h"
 563              		.file 17 "Core/Inc/encoder.h"
 564              		.file 18 "Core/Inc/lidar.h"
 565              		.file 19 "Core/Inc/can_setup.h"
 566              		.file 20 "/usr/include/newlib/math.h"
 567              		.file 21 "Core/Inc/dynamics.h"
ARM GAS  /tmp/ccSlwDbG.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 dynamics.c
     /tmp/ccSlwDbG.s:18     .text.deg2rad:0000000000000000 $t
     /tmp/ccSlwDbG.s:25     .text.deg2rad:0000000000000000 deg2rad
     /tmp/ccSlwDbG.s:51     .text.deg2rad:0000000000000018 $d
     /tmp/ccSlwDbG.s:58     .text.rad2deg:0000000000000000 $t
     /tmp/ccSlwDbG.s:65     .text.rad2deg:0000000000000000 rad2deg
     /tmp/ccSlwDbG.s:90     .text.rad2deg:0000000000000018 $d
     /tmp/ccSlwDbG.s:100    .text.distance:0000000000000000 $t
     /tmp/ccSlwDbG.s:107    .text.distance:0000000000000000 distance
     /tmp/ccSlwDbG.s:263    .text.distance:0000000000000100 $d
     /tmp/ccSlwDbG.s:275    .text.zero2sixty:0000000000000000 $t
     /tmp/ccSlwDbG.s:282    .text.zero2sixty:0000000000000000 zero2sixty
     /tmp/ccSlwDbG.s:303    .text.zero2sixty:000000000000000c $d
                            *COM*:0000000000000010 GPS
     /tmp/ccSlwDbG.s:308    .text.getPitch:0000000000000000 $t
     /tmp/ccSlwDbG.s:315    .text.getPitch:0000000000000000 getPitch
     /tmp/ccSlwDbG.s:335    .text.getPitch:000000000000000c $d
     /tmp/ccSlwDbG.s:341    .text.getDynamics:0000000000000000 $t
     /tmp/ccSlwDbG.s:348    .text.getDynamics:0000000000000000 getDynamics
     /tmp/ccSlwDbG.s:368    .text.getDynamics:0000000000000010 $d
     /tmp/ccSlwDbG.s:501    .text.getDynamics:00000000000000e0 $d
                            *COM*:0000000000000007 UTC
                            *COM*:0000000000000006 ACCEL
                            *COM*:0000000000000006 YAW
                            *COM*:0000000000000004 canDebug
                            *COM*:0000000000000004 txCycle2
                            *COM*:0000000000000004 txCycle
                            *COM*:0000000000000008 canTx2
                            *COM*:0000000000000008 canTx
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000008 canRx2
                            *COM*:0000000000000008 canRx
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000018 txMsg2
                            *COM*:000000000000001c rxMsg2
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000018 txMsg
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000028 sf3
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000028 hcan2
                            *COM*:0000000000000028 hcan1
                            *COM*:0000000000000008 LIDAR
                            *COM*:000000000000000c te
                            *COM*:0000000000000014 BMS
                            *COM*:0000000000000003 charger
                            *COM*:0000000000000007 vcu
                            *COM*:0000000000000002 iboost
                            *COM*:0000000000000012 ldu
                            *COM*:0000000000000004 tempdata
                            *COM*:000000000000000c ADC_data
                            *COM*:0000000000000001 tenderActive
ARM GAS  /tmp/ccSlwDbG.s 			page 15


                            *COM*:0000000000000004 time_now
                            *COM*:0000000000000004 period
                            *COM*:0000000000000004 DCDC
                     .debug_frame:0000000000000010 $d
     /tmp/ccSlwDbG.s:373    .text.getDynamics:0000000000000015 $d
     /tmp/ccSlwDbG.s:373    .text.getDynamics:0000000000000016 $t

UNDEFINED SYMBOLS
__aeabi_dmul
__aeabi_ddiv
__aeabi_dcmpeq
__aeabi_dsub
__aeabi_dadd
sin
cos
acos
__aeabi_f2iz
__aeabi_i2f
