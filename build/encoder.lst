ARM GAS  /tmp/cc8nadcf.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"encoder.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.setWidget,"ax",%progbits
  16              		.align	1
  17              		.global	setWidget
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	setWidget:
  24              	.LFB66:
  25              		.file 1 "Core/Src/encoder.c"
   1:Core/Src/encoder.c **** 
   2:Core/Src/encoder.c **** #include "encoder.h"
   3:Core/Src/encoder.c **** 
   4:Core/Src/encoder.c **** void setWidget(uint8_t screenNum, uint8_t valueId, uint16_t currentVal)
   5:Core/Src/encoder.c **** {
  26              		.loc 1 5 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 38B5     		push	{r3, r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 3, -16
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
   6:Core/Src/encoder.c **** 
   7:Core/Src/encoder.c ****     txMsgExt2.ExtId = CONTROL;
  38              		.loc 1 7 0
  39 0002 0B4C     		ldr	r4, .L3
  40 0004 0B4B     		ldr	r3, .L3+4
  41 0006 6360     		str	r3, [r4, #4]
   8:Core/Src/encoder.c ****     txMsgExt2.DLC = 8;
  42              		.loc 1 8 0
  43 0008 0823     		movs	r3, #8
  44 000a 2361     		str	r3, [r4, #16]
   9:Core/Src/encoder.c ****     canTx2[0] = 0x11; //Force Widget Data
  45              		.loc 1 9 0
  46 000c 0A4B     		ldr	r3, .L3+8
  47 000e 1125     		movs	r5, #17
  48 0010 1D70     		strb	r5, [r3]
  10:Core/Src/encoder.c ****     canTx2[1] = screenNum;
ARM GAS  /tmp/cc8nadcf.s 			page 2


  49              		.loc 1 10 0
  50 0012 5870     		strb	r0, [r3, #1]
  11:Core/Src/encoder.c ****     canTx2[2] = valueId;
  51              		.loc 1 11 0
  52 0014 9970     		strb	r1, [r3, #2]
  12:Core/Src/encoder.c ****     canTx2[3] = currentVal & 0xFF;
  53              		.loc 1 12 0
  54 0016 DA70     		strb	r2, [r3, #3]
  13:Core/Src/encoder.c ****     canTx2[4] = (currentVal >> 8) & 0xFF;
  55              		.loc 1 13 0
  56 0018 120A     		lsrs	r2, r2, #8
  57              	.LVL1:
  58 001a 1A71     		strb	r2, [r3, #4]
  14:Core/Src/encoder.c ****     canTx2[5] = 0x00;    //Display Code placeholder
  59              		.loc 1 14 0
  60 001c 0022     		movs	r2, #0
  61 001e 5A71     		strb	r2, [r3, #5]
  15:Core/Src/encoder.c ****     canTx2[6] = valueId; // Value Active ID  0x00-not used, 0x01 Value 1 currently active
  62              		.loc 1 15 0
  63 0020 9971     		strb	r1, [r3, #6]
  16:Core/Src/encoder.c ****     canTx2[7] = 0xFF;
  64              		.loc 1 16 0
  65 0022 FF22     		movs	r2, #255
  66 0024 DA71     		strb	r2, [r3, #7]
  17:Core/Src/encoder.c ****     //te.currentScreen = screenNum; //rely on RX values
  18:Core/Src/encoder.c ****     c2txExt(&txMsgExt2, canTx2);
  67              		.loc 1 18 0
  68 0026 1946     		mov	r1, r3
  69              	.LVL2:
  70 0028 2046     		mov	r0, r4
  71              	.LVL3:
  72 002a FFF7FEFF 		bl	c2txExt
  73              	.LVL4:
  74 002e 38BD     		pop	{r3, r4, r5, pc}
  75              	.L4:
  76              		.align	2
  77              	.L3:
  78 0030 00000000 		.word	txMsgExt2
  79 0034 21F2EF18 		.word	418378273
  80 0038 00000000 		.word	canTx2
  81              		.cfi_endproc
  82              	.LFE66:
  84              		.section	.text.setBacklight,"ax",%progbits
  85              		.align	1
  86              		.global	setBacklight
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu softvfp
  92              	setBacklight:
  93              	.LFB67:
  19:Core/Src/encoder.c **** }
  20:Core/Src/encoder.c **** 
  21:Core/Src/encoder.c **** void setBacklight(uint8_t level)
  22:Core/Src/encoder.c **** {
  94              		.loc 1 22 0
  95              		.cfi_startproc
ARM GAS  /tmp/cc8nadcf.s 			page 3


  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              	.LVL5:
  99 0000 08B5     		push	{r3, lr}
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 3, -8
 103              		.cfi_offset 14, -4
  23:Core/Src/encoder.c ****     txMsgExt2.ExtId = CONTROL;
 104              		.loc 1 23 0
 105 0002 0A4A     		ldr	r2, .L7
 106 0004 0A4B     		ldr	r3, .L7+4
 107 0006 5360     		str	r3, [r2, #4]
  24:Core/Src/encoder.c ****     txMsgExt2.DLC = 8;
 108              		.loc 1 24 0
 109 0008 0823     		movs	r3, #8
 110 000a 1361     		str	r3, [r2, #16]
  25:Core/Src/encoder.c ****     canTx2[0] = 0x80; //Screen brightness
 111              		.loc 1 25 0
 112 000c 0949     		ldr	r1, .L7+8
 113 000e 8023     		movs	r3, #128
 114 0010 0B70     		strb	r3, [r1]
  26:Core/Src/encoder.c ****     canTx2[1] = 0xFF;
 115              		.loc 1 26 0
 116 0012 FF23     		movs	r3, #255
 117 0014 4B70     		strb	r3, [r1, #1]
  27:Core/Src/encoder.c ****     canTx2[2] = level; // value 0-100
 118              		.loc 1 27 0
 119 0016 8870     		strb	r0, [r1, #2]
  28:Core/Src/encoder.c ****     canTx2[3] = 0xFF;
 120              		.loc 1 28 0
 121 0018 CB70     		strb	r3, [r1, #3]
  29:Core/Src/encoder.c ****     canTx2[4] = 0xFF;
 122              		.loc 1 29 0
 123 001a 0B71     		strb	r3, [r1, #4]
  30:Core/Src/encoder.c ****     canTx2[5] = 0xFF;
 124              		.loc 1 30 0
 125 001c 4B71     		strb	r3, [r1, #5]
  31:Core/Src/encoder.c ****     canTx2[6] = 0xFF;
 126              		.loc 1 31 0
 127 001e 8B71     		strb	r3, [r1, #6]
  32:Core/Src/encoder.c ****     canTx2[7] = 0xFF;
 128              		.loc 1 32 0
 129 0020 CB71     		strb	r3, [r1, #7]
  33:Core/Src/encoder.c ****     c2txExt(&txMsgExt2, canTx2);
 130              		.loc 1 33 0
 131 0022 1046     		mov	r0, r2
 132              	.LVL6:
 133 0024 FFF7FEFF 		bl	c2txExt
 134              	.LVL7:
 135 0028 08BD     		pop	{r3, pc}
 136              	.L8:
 137 002a 00BF     		.align	2
 138              	.L7:
 139 002c 00000000 		.word	txMsgExt2
 140 0030 21F2EF18 		.word	418378273
 141 0034 00000000 		.word	canTx2
ARM GAS  /tmp/cc8nadcf.s 			page 4


 142              		.cfi_endproc
 143              	.LFE67:
 145              		.section	.text.getEvent,"ax",%progbits
 146              		.align	1
 147              		.global	getEvent
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
 151              		.fpu softvfp
 153              	getEvent:
 154              	.LFB68:
  34:Core/Src/encoder.c **** }
  35:Core/Src/encoder.c **** 
  36:Core/Src/encoder.c **** void getEvent(CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx)
  37:Core/Src/encoder.c **** {
 155              		.loc 1 37 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160              	.LVL8:
  38:Core/Src/encoder.c **** 
  39:Core/Src/encoder.c ****     if (rxMsg->ExtId == EVENT)
 161              		.loc 1 39 0
 162 0000 4268     		ldr	r2, [r0, #4]
 163 0002 084B     		ldr	r3, .L12
 164 0004 9A42     		cmp	r2, r3
 165 0006 00D0     		beq	.L11
 166              	.LVL9:
 167              	.L9:
 168 0008 7047     		bx	lr
 169              	.LVL10:
 170              	.L11:
  40:Core/Src/encoder.c ****     {
  41:Core/Src/encoder.c ****         te.currentScreen = canRx[0];
 171              		.loc 1 41 0
 172 000a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 173 000c 064B     		ldr	r3, .L12+4
 174 000e 1A70     		strb	r2, [r3]
  42:Core/Src/encoder.c ****         // canRx[1] Reserved
  43:Core/Src/encoder.c ****         // canRx[2] 0x01 Events
  44:Core/Src/encoder.c ****         te.knob = canRx[3];
 175              		.loc 1 44 0
 176 0010 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 177 0012 5A70     		strb	r2, [r3, #1]
  45:Core/Src/encoder.c ****         te.tap = (canRx[4]) + (canRx[5] << 8);
 178              		.loc 1 45 0
 179 0014 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 180 0016 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 181              	.LVL11:
 182 0018 02EB0022 		add	r2, r2, r0, lsl #8
 183 001c 5A80     		strh	r2, [r3, #2]	@ movhi
  46:Core/Src/encoder.c ****         te.swipe = canRx[6];
 184              		.loc 1 46 0
 185 001e 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 186 0020 1A71     		strb	r2, [r3, #4]
  47:Core/Src/encoder.c ****     }
ARM GAS  /tmp/cc8nadcf.s 			page 5


  48:Core/Src/encoder.c **** }
 187              		.loc 1 48 0
 188 0022 F1E7     		b	.L9
 189              	.L13:
 190              		.align	2
 191              	.L12:
 192 0024 F20FFF18 		.word	419368946
 193 0028 00000000 		.word	te
 194              		.cfi_endproc
 195              	.LFE68:
 197              		.section	.text.getData,"ax",%progbits
 198              		.align	1
 199              		.global	getData
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu softvfp
 205              	getData:
 206              	.LFB69:
  49:Core/Src/encoder.c **** 
  50:Core/Src/encoder.c **** void getData(CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx)
  51:Core/Src/encoder.c **** {
 207              		.loc 1 51 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 212              	.LVL12:
  52:Core/Src/encoder.c ****     if (rxMsg->ExtId == DATA)
 213              		.loc 1 52 0
 214 0000 4268     		ldr	r2, [r0, #4]
 215 0002 094B     		ldr	r3, .L17
 216 0004 9A42     		cmp	r2, r3
 217 0006 00D0     		beq	.L16
 218              	.LVL13:
 219              	.L14:
 220 0008 7047     		bx	lr
 221              	.LVL14:
 222              	.L16:
  53:Core/Src/encoder.c ****     {
  54:Core/Src/encoder.c ****         te.currentScreen = canRx[0];
 223              		.loc 1 54 0
 224 000a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 225 000c 074B     		ldr	r3, .L17+4
 226 000e 1A70     		strb	r2, [r3]
  55:Core/Src/encoder.c ****         // canRx[1] Reserved
  56:Core/Src/encoder.c ****         te.valueId = canRx[2];
 227              		.loc 1 56 0
 228 0010 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 229 0012 5A71     		strb	r2, [r3, #5]
  57:Core/Src/encoder.c ****         te.currentVal = canRx[3] + (canRx[4] << 8);
 230              		.loc 1 57 0
 231 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 232 0016 0879     		ldrb	r0, [r1, #4]	@ zero_extendqisi2
 233              	.LVL15:
 234 0018 02EB0022 		add	r2, r2, r0, lsl #8
 235 001c DA80     		strh	r2, [r3, #6]	@ movhi
ARM GAS  /tmp/cc8nadcf.s 			page 6


  58:Core/Src/encoder.c ****         te.dispCode = canRx[5];
 236              		.loc 1 58 0
 237 001e 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 238 0020 1A72     		strb	r2, [r3, #8]
  59:Core/Src/encoder.c ****         te.activeId = canRx[6];
 239              		.loc 1 59 0
 240 0022 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 241 0024 5A72     		strb	r2, [r3, #9]
  60:Core/Src/encoder.c ****     }
  61:Core/Src/encoder.c **** }
 242              		.loc 1 61 0
 243 0026 EFE7     		b	.L14
 244              	.L18:
 245              		.align	2
 246              	.L17:
 247 0028 F211FF18 		.word	419369458
 248 002c 00000000 		.word	te
 249              		.cfi_endproc
 250              	.LFE69:
 252              		.section	.text.encoderHandler,"ax",%progbits
 253              		.align	1
 254              		.global	encoderHandler
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu softvfp
 260              	encoderHandler:
 261              	.LFB70:
  62:Core/Src/encoder.c **** 
  63:Core/Src/encoder.c **** void encoderHandler(void)
  64:Core/Src/encoder.c **** {
 262              		.loc 1 64 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266 0000 10B5     		push	{r4, lr}
 267              	.LCFI2:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
  65:Core/Src/encoder.c **** 
  66:Core/Src/encoder.c ****     switch (vcu.state)
 271              		.loc 1 66 0
 272 0002 644B     		ldr	r3, .L40
 273 0004 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 274 0006 DBB2     		uxtb	r3, r3
 275 0008 062B     		cmp	r3, #6
 276 000a 15D8     		bhi	.L20
 277 000c DFE803F0 		tbb	[pc, r3]
 278              	.L22:
 279 0010 04       		.byte	(.L21-.L22)/2
 280 0011 11       		.byte	(.L23-.L22)/2
 281 0012 33       		.byte	(.L24-.L22)/2
 282 0013 14       		.byte	(.L20-.L22)/2
 283 0014 21       		.byte	(.L25-.L22)/2
 284 0015 14       		.byte	(.L20-.L22)/2
 285 0016 2D       		.byte	(.L26-.L22)/2
ARM GAS  /tmp/cc8nadcf.s 			page 7


 286 0017 00       		.p2align 1
 287              	.L21:
  67:Core/Src/encoder.c ****     {
  68:Core/Src/encoder.c ****     case off:
  69:Core/Src/encoder.c ****         setBacklight(0);
 288              		.loc 1 69 0
 289 0018 0020     		movs	r0, #0
 290 001a FFF7FEFF 		bl	setBacklight
 291              	.LVL16:
  70:Core/Src/encoder.c ****         if (te.currentScreen != HOME)
 292              		.loc 1 70 0
 293 001e 5E4B     		ldr	r3, .L40+4
 294 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 295 0022 012B     		cmp	r3, #1
 296 0024 08D0     		beq	.L20
  71:Core/Src/encoder.c ****         {
  72:Core/Src/encoder.c ****             setWidget(HOME, 0, 0);
 297              		.loc 1 72 0
 298 0026 0022     		movs	r2, #0
 299 0028 1146     		mov	r1, r2
 300 002a 0120     		movs	r0, #1
 301 002c FFF7FEFF 		bl	setWidget
 302              	.LVL17:
 303 0030 02E0     		b	.L20
 304              	.L23:
  73:Core/Src/encoder.c ****         }
  74:Core/Src/encoder.c ****         break;
  75:Core/Src/encoder.c **** 
  76:Core/Src/encoder.c ****     case on:
  77:Core/Src/encoder.c ****         setBacklight(95);
 305              		.loc 1 77 0
 306 0032 5F20     		movs	r0, #95
 307 0034 FFF7FEFF 		bl	setBacklight
 308              	.LVL18:
 309              	.L20:
  78:Core/Src/encoder.c ****         break;
  79:Core/Src/encoder.c **** 
  80:Core/Src/encoder.c ****     case idle:
  81:Core/Src/encoder.c **** 
  82:Core/Src/encoder.c ****         switch (te.currentScreen)
  83:Core/Src/encoder.c ****         {
  84:Core/Src/encoder.c ****         case HOME:
  85:Core/Src/encoder.c ****         case WINDOWS:
  86:Core/Src/encoder.c ****             setWidget(NTRL_REQ, 0, 0);
  87:Core/Src/encoder.c ****             break;
  88:Core/Src/encoder.c **** 
  89:Core/Src/encoder.c ****         default:
  90:Core/Src/encoder.c ****             break;
  91:Core/Src/encoder.c ****         }
  92:Core/Src/encoder.c **** 
  93:Core/Src/encoder.c ****         break;
  94:Core/Src/encoder.c **** 
  95:Core/Src/encoder.c ****     case launchMode:
  96:Core/Src/encoder.c ****         setWidget(LAUNCH, 0, 0);
  97:Core/Src/encoder.c ****         break;
  98:Core/Src/encoder.c **** 
  99:Core/Src/encoder.c ****     case charge_keyOff:
ARM GAS  /tmp/cc8nadcf.s 			page 8


 100:Core/Src/encoder.c ****         setWidget(CHARGE_STATS, CS_TEMP, BMS[0].temp);
 101:Core/Src/encoder.c ****         setWidget(CHARGE_STATS, CS_SOC, BMS[0].chargeState);
 102:Core/Src/encoder.c ****         setWidget(CHARGE_STATS, CS_AMP, charger.current);
 103:Core/Src/encoder.c ****         setBacklight(95);
 104:Core/Src/encoder.c ****         break;
 105:Core/Src/encoder.c **** 
 106:Core/Src/encoder.c ****     default:
 107:Core/Src/encoder.c ****         break;
 108:Core/Src/encoder.c ****     }
 109:Core/Src/encoder.c **** 
 110:Core/Src/encoder.c ****     switch (te.currentScreen)
 310              		.loc 1 110 0
 311 0038 574B     		ldr	r3, .L40+4
 312 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 313 003c 023B     		subs	r3, r3, #2
 314 003e 0B2B     		cmp	r3, #11
 315 0040 37D8     		bhi	.L19
 316 0042 DFE803F0 		tbb	[pc, r3]
 317              	.L30:
 318 0046 3D       		.byte	(.L29-.L30)/2
 319 0047 2D       		.byte	(.L31-.L30)/2
 320 0048 49       		.byte	(.L32-.L30)/2
 321 0049 36       		.byte	(.L19-.L30)/2
 322 004a 36       		.byte	(.L19-.L30)/2
 323 004b 5C       		.byte	(.L33-.L30)/2
 324 004c 36       		.byte	(.L19-.L30)/2
 325 004d 36       		.byte	(.L19-.L30)/2
 326 004e 6B       		.byte	(.L34-.L30)/2
 327 004f 77       		.byte	(.L35-.L30)/2
 328 0050 82       		.byte	(.L36-.L30)/2
 329 0051 99       		.byte	(.L37-.L30)/2
 330              		.p2align 1
 331              	.L25:
  82:Core/Src/encoder.c ****         {
 332              		.loc 1 82 0
 333 0052 514B     		ldr	r3, .L40+4
 334 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 335 0056 012B     		cmp	r3, #1
 336 0058 01D0     		beq	.L27
 337 005a 092B     		cmp	r3, #9
 338 005c ECD1     		bne	.L20
 339              	.L27:
  86:Core/Src/encoder.c ****             break;
 340              		.loc 1 86 0
 341 005e 0022     		movs	r2, #0
 342 0060 1146     		mov	r1, r2
 343 0062 0420     		movs	r0, #4
 344 0064 FFF7FEFF 		bl	setWidget
 345              	.LVL19:
  87:Core/Src/encoder.c **** 
 346              		.loc 1 87 0
 347 0068 E6E7     		b	.L20
 348              	.L26:
  96:Core/Src/encoder.c ****         break;
 349              		.loc 1 96 0
 350 006a 0022     		movs	r2, #0
 351 006c 1146     		mov	r1, r2
ARM GAS  /tmp/cc8nadcf.s 			page 9


 352 006e 0B20     		movs	r0, #11
 353 0070 FFF7FEFF 		bl	setWidget
 354              	.LVL20:
  97:Core/Src/encoder.c **** 
 355              		.loc 1 97 0
 356 0074 E0E7     		b	.L20
 357              	.L24:
 100:Core/Src/encoder.c ****         setWidget(CHARGE_STATS, CS_SOC, BMS[0].chargeState);
 358              		.loc 1 100 0
 359 0076 494C     		ldr	r4, .L40+8
 360 0078 A278     		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 361 007a 0121     		movs	r1, #1
 362 007c 0820     		movs	r0, #8
 363 007e FFF7FEFF 		bl	setWidget
 364              	.LVL21:
 101:Core/Src/encoder.c ****         setWidget(CHARGE_STATS, CS_AMP, charger.current);
 365              		.loc 1 101 0
 366 0082 227A     		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 367 0084 0421     		movs	r1, #4
 368 0086 0820     		movs	r0, #8
 369 0088 FFF7FEFF 		bl	setWidget
 370              	.LVL22:
 102:Core/Src/encoder.c ****         setBacklight(95);
 371              		.loc 1 102 0
 372 008c 444B     		ldr	r3, .L40+12
 373 008e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 374 0090 0821     		movs	r1, #8
 375 0092 0846     		mov	r0, r1
 376 0094 FFF7FEFF 		bl	setWidget
 377              	.LVL23:
 103:Core/Src/encoder.c ****         break;
 378              		.loc 1 103 0
 379 0098 5F20     		movs	r0, #95
 380 009a FFF7FEFF 		bl	setBacklight
 381              	.LVL24:
 104:Core/Src/encoder.c **** 
 382              		.loc 1 104 0
 383 009e CBE7     		b	.L20
 384              	.L31:
 111:Core/Src/encoder.c ****     {
 112:Core/Src/encoder.c ****     /////// Gear Selection Screens /////////
 113:Core/Src/encoder.c ****     case FWD_REQ:
 114:Core/Src/encoder.c **** 
 115:Core/Src/encoder.c ****         //vcu.dio = FORWARD;
 116:Core/Src/encoder.c ****         canIOset(forward, ON);
 385              		.loc 1 116 0
 386 00a0 0121     		movs	r1, #1
 387 00a2 0420     		movs	r0, #4
 388 00a4 FFF7FEFF 		bl	canIOset
 389              	.LVL25:
 117:Core/Src/encoder.c ****         if (ldu.dir == FWD)
 390              		.loc 1 117 0
 391 00a8 3E4B     		ldr	r3, .L40+16
 392 00aa 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 393 00ac DBB2     		uxtb	r3, r3
 394 00ae FF2B     		cmp	r3, #255
 395 00b0 00D0     		beq	.L39
ARM GAS  /tmp/cc8nadcf.s 			page 10


 396              	.L19:
 397 00b2 10BD     		pop	{r4, pc}
 398              	.L39:
 118:Core/Src/encoder.c ****         {
 119:Core/Src/encoder.c ****             setWidget(FWD_CFM, 0, 0);
 399              		.loc 1 119 0
 400 00b4 0022     		movs	r2, #0
 401 00b6 1146     		mov	r1, r2
 402 00b8 0220     		movs	r0, #2
 403 00ba FFF7FEFF 		bl	setWidget
 404              	.LVL26:
 405 00be 10BD     		pop	{r4, pc}
 406              	.L29:
 120:Core/Src/encoder.c ****         }
 121:Core/Src/encoder.c **** 
 122:Core/Src/encoder.c ****         break;
 123:Core/Src/encoder.c **** 
 124:Core/Src/encoder.c ****     case FWD_CFM:
 125:Core/Src/encoder.c ****         if (ldu.rpm >= 2000)
 407              		.loc 1 125 0
 408 00c0 384B     		ldr	r3, .L40+16
 409 00c2 1B88     		ldrh	r3, [r3]
 410 00c4 9BB2     		uxth	r3, r3
 411 00c6 B3F5FA6F 		cmp	r3, #2000
 412 00ca F2D3     		bcc	.L19
 126:Core/Src/encoder.c ****         {
 127:Core/Src/encoder.c ****             setWidget(HOME, 0, 0);
 413              		.loc 1 127 0
 414 00cc 0022     		movs	r2, #0
 415 00ce 1146     		mov	r1, r2
 416 00d0 0120     		movs	r0, #1
 417 00d2 FFF7FEFF 		bl	setWidget
 418              	.LVL27:
 419 00d6 10BD     		pop	{r4, pc}
 420              	.L32:
 128:Core/Src/encoder.c ****         }
 129:Core/Src/encoder.c ****         break;
 130:Core/Src/encoder.c **** 
 131:Core/Src/encoder.c ****     case NTRL_REQ:
 132:Core/Src/encoder.c ****         canIOset(forward, OFF);
 421              		.loc 1 132 0
 422 00d8 0021     		movs	r1, #0
 423 00da 0420     		movs	r0, #4
 424 00dc FFF7FEFF 		bl	canIOset
 425              	.LVL28:
 133:Core/Src/encoder.c ****         canIOset(reverse, OFF);
 426              		.loc 1 133 0
 427 00e0 0021     		movs	r1, #0
 428 00e2 0320     		movs	r0, #3
 429 00e4 FFF7FEFF 		bl	canIOset
 430              	.LVL29:
 134:Core/Src/encoder.c ****         if (ldu.dir == NTRL)
 431              		.loc 1 134 0
 432 00e8 2E4B     		ldr	r3, .L40+16
 433 00ea 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 434 00ec DBB2     		uxtb	r3, r3
 435 00ee 022B     		cmp	r3, #2
ARM GAS  /tmp/cc8nadcf.s 			page 11


 436 00f0 DFD1     		bne	.L19
 135:Core/Src/encoder.c ****         {
 136:Core/Src/encoder.c ****             setWidget(NTRL_CFM, 0, 0);
 437              		.loc 1 136 0
 438 00f2 0022     		movs	r2, #0
 439 00f4 1146     		mov	r1, r2
 440 00f6 0520     		movs	r0, #5
 441 00f8 FFF7FEFF 		bl	setWidget
 442              	.LVL30:
 443 00fc 10BD     		pop	{r4, pc}
 444              	.L33:
 137:Core/Src/encoder.c ****         }
 138:Core/Src/encoder.c ****         break;
 139:Core/Src/encoder.c **** 
 140:Core/Src/encoder.c ****     case REV_REQ:
 141:Core/Src/encoder.c ****         //vcu.dio = REVERSE;
 142:Core/Src/encoder.c ****         canIOset(reverse, ON);
 445              		.loc 1 142 0
 446 00fe 0121     		movs	r1, #1
 447 0100 0320     		movs	r0, #3
 448 0102 FFF7FEFF 		bl	canIOset
 449              	.LVL31:
 143:Core/Src/encoder.c ****         if (ldu.dir == REV)
 450              		.loc 1 143 0
 451 0106 274B     		ldr	r3, .L40+16
 452 0108 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 453 010a DBB2     		uxtb	r3, r3
 454 010c 032B     		cmp	r3, #3
 455 010e D0D1     		bne	.L19
 144:Core/Src/encoder.c ****         {
 145:Core/Src/encoder.c ****             setWidget(REV_CFM, 0, 0);
 456              		.loc 1 145 0
 457 0110 0022     		movs	r2, #0
 458 0112 1146     		mov	r1, r2
 459 0114 0620     		movs	r0, #6
 460 0116 FFF7FEFF 		bl	setWidget
 461              	.LVL32:
 462 011a 10BD     		pop	{r4, pc}
 463              	.L34:
 146:Core/Src/encoder.c ****         }
 147:Core/Src/encoder.c ****         break;
 148:Core/Src/encoder.c **** 
 149:Core/Src/encoder.c ****     /////////// Charging Data ///////////////////////
 150:Core/Src/encoder.c ****     case BATTERY:
 151:Core/Src/encoder.c ****         setWidget(BATTERY, BATT_VOLT, BMS[0].volt);
 464              		.loc 1 151 0
 465 011c 1F4C     		ldr	r4, .L40+8
 466 011e 2288     		ldrh	r2, [r4]
 467 0120 0121     		movs	r1, #1
 468 0122 0A20     		movs	r0, #10
 469 0124 FFF7FEFF 		bl	setWidget
 470              	.LVL33:
 152:Core/Src/encoder.c ****         setWidget(BATTERY, BATT_TEMP, BMS[0].temp);
 471              		.loc 1 152 0
 472 0128 A278     		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 473 012a 0421     		movs	r1, #4
 474 012c 0A20     		movs	r0, #10
ARM GAS  /tmp/cc8nadcf.s 			page 12


 475 012e FFF7FEFF 		bl	setWidget
 476              	.LVL34:
 153:Core/Src/encoder.c ****         break;
 477              		.loc 1 153 0
 478 0132 10BD     		pop	{r4, pc}
 479              	.L35:
 154:Core/Src/encoder.c **** 
 155:Core/Src/encoder.c ****     ////////// Launch Control ////////////////////////
 156:Core/Src/encoder.c ****     case LAUNCH:
 157:Core/Src/encoder.c ****         if (vcu.state != launchMode)
 480              		.loc 1 157 0
 481 0134 174B     		ldr	r3, .L40
 482 0136 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 483 0138 DBB2     		uxtb	r3, r3
 484 013a 062B     		cmp	r3, #6
 485 013c B9D0     		beq	.L19
 158:Core/Src/encoder.c ****         {
 159:Core/Src/encoder.c ****             setWidget(HOME, 0, 0);
 486              		.loc 1 159 0
 487 013e 0022     		movs	r2, #0
 488 0140 1146     		mov	r1, r2
 489 0142 0120     		movs	r0, #1
 490 0144 FFF7FEFF 		bl	setWidget
 491              	.LVL35:
 492 0148 10BD     		pop	{r4, pc}
 493              	.L36:
 160:Core/Src/encoder.c ****         }
 161:Core/Src/encoder.c ****         break;
 162:Core/Src/encoder.c **** 
 163:Core/Src/encoder.c ****     ////////// Burnout Mode //////////////////////////////
 164:Core/Src/encoder.c ****     case PRE_BURNOUT:
 165:Core/Src/encoder.c ****         if (ldu.pot > 4025 && iboost.pedal > 650)
 494              		.loc 1 165 0
 495 014a 164B     		ldr	r3, .L40+16
 496 014c DB89     		ldrh	r3, [r3, #14]
 497 014e 9BB2     		uxth	r3, r3
 498 0150 40F6B972 		movw	r2, #4025
 499 0154 9342     		cmp	r3, r2
 500 0156 ACD9     		bls	.L19
 501              		.loc 1 165 0 is_stmt 0 discriminator 1
 502 0158 134B     		ldr	r3, .L40+20
 503 015a 1B88     		ldrh	r3, [r3]
 504 015c 9BB2     		uxth	r3, r3
 505 015e 40F28A22 		movw	r2, #650
 506 0162 9342     		cmp	r3, r2
 507 0164 A5D9     		bls	.L19
 166:Core/Src/encoder.c ****         {
 167:Core/Src/encoder.c ****             vcu.burnFlag = ON;
 508              		.loc 1 167 0 is_stmt 1
 509 0166 0122     		movs	r2, #1
 510 0168 0A4B     		ldr	r3, .L40
 511 016a 9A71     		strb	r2, [r3, #6]
 168:Core/Src/encoder.c ****             setWidget(READY_BURNOUT, 0, 0);
 512              		.loc 1 168 0
 513 016c 0022     		movs	r2, #0
 514 016e 1146     		mov	r1, r2
 515 0170 0D20     		movs	r0, #13
ARM GAS  /tmp/cc8nadcf.s 			page 13


 516 0172 FFF7FEFF 		bl	setWidget
 517              	.LVL36:
 518 0176 10BD     		pop	{r4, pc}
 519              	.L37:
 169:Core/Src/encoder.c ****         }
 170:Core/Src/encoder.c ****         break;
 171:Core/Src/encoder.c **** 
 172:Core/Src/encoder.c ****     case READY_BURNOUT:  //HOME BUTTON DISBLED
 173:Core/Src/encoder.c ****         if (ldu.pot < 1000)
 520              		.loc 1 173 0
 521 0178 0A4B     		ldr	r3, .L40+16
 522 017a DB89     		ldrh	r3, [r3, #14]
 523 017c 9BB2     		uxth	r3, r3
 524 017e B3F57A7F 		cmp	r3, #1000
 525 0182 96D2     		bcs	.L19
 174:Core/Src/encoder.c ****         {
 175:Core/Src/encoder.c ****             vcu.burnFlag = OFF;
 526              		.loc 1 175 0
 527 0184 0021     		movs	r1, #0
 528 0186 034B     		ldr	r3, .L40
 529 0188 9971     		strb	r1, [r3, #6]
 176:Core/Src/encoder.c ****             setWidget(HOME, 0, 0);  
 530              		.loc 1 176 0
 531 018a 0A46     		mov	r2, r1
 532 018c 0120     		movs	r0, #1
 533 018e FFF7FEFF 		bl	setWidget
 534              	.LVL37:
 177:Core/Src/encoder.c ****         }
 178:Core/Src/encoder.c **** 
 179:Core/Src/encoder.c ****     default:
 180:Core/Src/encoder.c ****         break;
 181:Core/Src/encoder.c ****     }
 182:Core/Src/encoder.c **** }
 535              		.loc 1 182 0
 536 0192 8EE7     		b	.L19
 537              	.L41:
 538              		.align	2
 539              	.L40:
 540 0194 00000000 		.word	vcu
 541 0198 00000000 		.word	te
 542 019c 00000000 		.word	BMS
 543 01a0 00000000 		.word	charger
 544 01a4 00000000 		.word	ldu
 545 01a8 00000000 		.word	iboost
 546              		.cfi_endproc
 547              	.LFE70:
 549              		.comm	setPrevState,1,1
 550              		.comm	te,12,4
 551              		.comm	canDebug,4,4
 552              		.comm	txCycle2,4,4
 553              		.comm	txCycle,4,4
 554              		.comm	canTx2,8,4
 555              		.comm	canTx,8,4
 556              		.comm	canMailbox2,4,4
 557              		.comm	canMailbox,4,4
 558              		.comm	canRx2,8,4
 559              		.comm	canRx,8,4
ARM GAS  /tmp/cc8nadcf.s 			page 14


 560              		.comm	txMsgExt2,24,4
 561              		.comm	txMsg2,24,4
 562              		.comm	rxMsg2,28,4
 563              		.comm	txMsgExt,24,4
 564              		.comm	txMsg,24,4
 565              		.comm	rxMsg,28,4
 566              		.comm	sf5,40,4
 567              		.comm	sf4,40,4
 568              		.comm	sf3,40,4
 569              		.comm	sf2,40,4
 570              		.comm	sf,40,4
 571              		.comm	hcan2,40,4
 572              		.comm	hcan1,40,4
 573              		.comm	BMS,20,4
 574              		.comm	charger,2,4
 575              		.comm	vcu,7,4
 576              		.comm	iboost,2,4
 577              		.comm	ldu,18,4
 578              		.comm	tempdata,4,4
 579              		.comm	ADC_data,12,4
 580              		.comm	tenderActive,1,1
 581              		.comm	time_now,4,4
 582              		.comm	period,4,4
 583              		.comm	DCDC,4,4
 584              		.text
 585              	.Letext0:
 586              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 587              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 588              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 589              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 590              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
 591              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 592              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 593              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 594              		.file 10 "/usr/include/newlib/sys/lock.h"
 595              		.file 11 "/usr/include/newlib/sys/_types.h"
 596              		.file 12 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 597              		.file 13 "/usr/include/newlib/sys/reent.h"
 598              		.file 14 "Core/Inc/dcdc.h"
 599              		.file 15 "Core/Inc/vcu.h"
 600              		.file 16 "Core/Inc/can_setup.h"
 601              		.file 17 "Core/Inc/encoder.h"
ARM GAS  /tmp/cc8nadcf.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 encoder.c
     /tmp/cc8nadcf.s:16     .text.setWidget:0000000000000000 $t
     /tmp/cc8nadcf.s:23     .text.setWidget:0000000000000000 setWidget
     /tmp/cc8nadcf.s:78     .text.setWidget:0000000000000030 $d
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000008 canTx2
     /tmp/cc8nadcf.s:85     .text.setBacklight:0000000000000000 $t
     /tmp/cc8nadcf.s:92     .text.setBacklight:0000000000000000 setBacklight
     /tmp/cc8nadcf.s:139    .text.setBacklight:000000000000002c $d
     /tmp/cc8nadcf.s:146    .text.getEvent:0000000000000000 $t
     /tmp/cc8nadcf.s:153    .text.getEvent:0000000000000000 getEvent
     /tmp/cc8nadcf.s:192    .text.getEvent:0000000000000024 $d
                            *COM*:000000000000000c te
     /tmp/cc8nadcf.s:198    .text.getData:0000000000000000 $t
     /tmp/cc8nadcf.s:205    .text.getData:0000000000000000 getData
     /tmp/cc8nadcf.s:247    .text.getData:0000000000000028 $d
     /tmp/cc8nadcf.s:253    .text.encoderHandler:0000000000000000 $t
     /tmp/cc8nadcf.s:260    .text.encoderHandler:0000000000000000 encoderHandler
     /tmp/cc8nadcf.s:279    .text.encoderHandler:0000000000000010 $d
     /tmp/cc8nadcf.s:318    .text.encoderHandler:0000000000000046 $d
     /tmp/cc8nadcf.s:330    .text.encoderHandler:0000000000000052 $t
     /tmp/cc8nadcf.s:540    .text.encoderHandler:0000000000000194 $d
                            *COM*:0000000000000007 vcu
                            *COM*:0000000000000014 BMS
                            *COM*:0000000000000002 charger
                            *COM*:0000000000000012 ldu
                            *COM*:0000000000000002 iboost
                            *COM*:0000000000000001 setPrevState
                            *COM*:0000000000000004 canDebug
                            *COM*:0000000000000004 txCycle2
                            *COM*:0000000000000004 txCycle
                            *COM*:0000000000000008 canTx
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000008 canRx2
                            *COM*:0000000000000008 canRx
                            *COM*:0000000000000018 txMsg2
                            *COM*:000000000000001c rxMsg2
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000018 txMsg
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000028 sf3
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000028 hcan2
                            *COM*:0000000000000028 hcan1
                            *COM*:0000000000000004 tempdata
                            *COM*:000000000000000c ADC_data
                            *COM*:0000000000000001 tenderActive
                            *COM*:0000000000000004 time_now
                            *COM*:0000000000000004 period
                            *COM*:0000000000000004 DCDC
                     .debug_frame:0000000000000010 $d
     /tmp/cc8nadcf.s:286    .text.encoderHandler:0000000000000017 $d
ARM GAS  /tmp/cc8nadcf.s 			page 16


     /tmp/cc8nadcf.s:286    .text.encoderHandler:0000000000000018 $t

UNDEFINED SYMBOLS
c2txExt
canIOset
