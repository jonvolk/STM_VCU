ARM GAS  /tmp/ccbR3QlG.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"encoder.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.setWidget,"ax",%progbits
  16              		.align	1
  17              		.global	setWidget
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	setWidget:
  24              	.LFB66:
  25              		.file 1 "Core/Src/encoder.c"
   1:Core/Src/encoder.c **** 
   2:Core/Src/encoder.c **** #include "encoder.h"
   3:Core/Src/encoder.c **** 
   4:Core/Src/encoder.c **** void setWidget(uint8_t screenNum, uint8_t valueId, uint16_t currentVal, int gain)
   5:Core/Src/encoder.c **** {
  26              		.loc 1 5 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 0D46     		mov	r5, r1
   6:Core/Src/encoder.c **** 
   7:Core/Src/encoder.c ****     txMsgExt2.ExtId = CONTROL;
  38              		.loc 1 7 0
  39 0004 0A4C     		ldr	r4, .L3
  40 0006 0B49     		ldr	r1, .L3+4
  41              	.LVL1:
  42 0008 6160     		str	r1, [r4, #4]
   8:Core/Src/encoder.c ****     txMsgExt2.DLC = 8;
  43              		.loc 1 8 0
  44 000a 0821     		movs	r1, #8
  45 000c 2161     		str	r1, [r4, #16]
   9:Core/Src/encoder.c ****     canTx2[0] = 0x11; // Force Widget Data
  46              		.loc 1 9 0
  47 000e 0A49     		ldr	r1, .L3+8
  48 0010 1126     		movs	r6, #17
  49 0012 0E70     		strb	r6, [r1]
ARM GAS  /tmp/ccbR3QlG.s 			page 2


  10:Core/Src/encoder.c ****     canTx2[1] = screenNum;
  50              		.loc 1 10 0
  51 0014 4870     		strb	r0, [r1, #1]
  11:Core/Src/encoder.c ****     canTx2[2] = valueId;
  52              		.loc 1 11 0
  53 0016 8D70     		strb	r5, [r1, #2]
  12:Core/Src/encoder.c ****     canTx2[3] = currentVal & 0xFF;
  54              		.loc 1 12 0
  55 0018 CA70     		strb	r2, [r1, #3]
  13:Core/Src/encoder.c ****     canTx2[4] = (currentVal >> 8) & 0xFF;
  56              		.loc 1 13 0
  57 001a 120A     		lsrs	r2, r2, #8
  58              	.LVL2:
  59 001c 0A71     		strb	r2, [r1, #4]
  14:Core/Src/encoder.c ****     canTx2[5] = gain;    // Display Code placeholder
  60              		.loc 1 14 0
  61 001e 4B71     		strb	r3, [r1, #5]
  15:Core/Src/encoder.c ****     canTx2[6] = valueId; // Value Active ID  0x00-not used, 0x01 Value 1 currently active
  62              		.loc 1 15 0
  63 0020 8D71     		strb	r5, [r1, #6]
  16:Core/Src/encoder.c ****     canTx2[7] = 0xFF;
  64              		.loc 1 16 0
  65 0022 FF23     		movs	r3, #255
  66              	.LVL3:
  67 0024 CB71     		strb	r3, [r1, #7]
  17:Core/Src/encoder.c ****     // te.currentScreen = screenNum; //rely on RX values
  18:Core/Src/encoder.c ****     c2txExt(&txMsgExt2, canTx2);
  68              		.loc 1 18 0
  69 0026 2046     		mov	r0, r4
  70              	.LVL4:
  71 0028 FFF7FEFF 		bl	c2txExt
  72              	.LVL5:
  73 002c 70BD     		pop	{r4, r5, r6, pc}
  74              	.L4:
  75 002e 00BF     		.align	2
  76              	.L3:
  77 0030 00000000 		.word	txMsgExt2
  78 0034 21F2EF18 		.word	418378273
  79 0038 00000000 		.word	canTx2
  80              		.cfi_endproc
  81              	.LFE66:
  83              		.section	.text.setBacklight,"ax",%progbits
  84              		.align	1
  85              		.global	setBacklight
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  89              		.fpu softvfp
  91              	setBacklight:
  92              	.LFB67:
  19:Core/Src/encoder.c **** }
  20:Core/Src/encoder.c **** 
  21:Core/Src/encoder.c **** void setBacklight(uint8_t level)
  22:Core/Src/encoder.c **** {
  93              		.loc 1 22 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccbR3QlG.s 			page 3


  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              	.LVL6:
  98 0000 08B5     		push	{r3, lr}
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 3, -8
 101              		.cfi_offset 14, -4
  23:Core/Src/encoder.c ****     txMsgExt2.ExtId = CONTROL;
 102              		.loc 1 23 0
 103 0002 0A4A     		ldr	r2, .L7
 104 0004 0A4B     		ldr	r3, .L7+4
 105 0006 5360     		str	r3, [r2, #4]
  24:Core/Src/encoder.c ****     txMsgExt2.DLC = 8;
 106              		.loc 1 24 0
 107 0008 0823     		movs	r3, #8
 108 000a 1361     		str	r3, [r2, #16]
  25:Core/Src/encoder.c ****     canTx2[0] = 0x80; // Screen brightness
 109              		.loc 1 25 0
 110 000c 0949     		ldr	r1, .L7+8
 111 000e 8023     		movs	r3, #128
 112 0010 0B70     		strb	r3, [r1]
  26:Core/Src/encoder.c ****     canTx2[1] = 0xFF;
 113              		.loc 1 26 0
 114 0012 FF23     		movs	r3, #255
 115 0014 4B70     		strb	r3, [r1, #1]
  27:Core/Src/encoder.c ****     canTx2[2] = level; // value 0-100
 116              		.loc 1 27 0
 117 0016 8870     		strb	r0, [r1, #2]
  28:Core/Src/encoder.c ****     canTx2[3] = 0xFF;
 118              		.loc 1 28 0
 119 0018 CB70     		strb	r3, [r1, #3]
  29:Core/Src/encoder.c ****     canTx2[4] = 0xFF;
 120              		.loc 1 29 0
 121 001a 0B71     		strb	r3, [r1, #4]
  30:Core/Src/encoder.c ****     canTx2[5] = 0xFF;
 122              		.loc 1 30 0
 123 001c 4B71     		strb	r3, [r1, #5]
  31:Core/Src/encoder.c ****     canTx2[6] = 0xFF;
 124              		.loc 1 31 0
 125 001e 8B71     		strb	r3, [r1, #6]
  32:Core/Src/encoder.c ****     canTx2[7] = 0xFF;
 126              		.loc 1 32 0
 127 0020 CB71     		strb	r3, [r1, #7]
  33:Core/Src/encoder.c ****     c2txExt(&txMsgExt2, canTx2);
 128              		.loc 1 33 0
 129 0022 1046     		mov	r0, r2
 130              	.LVL7:
 131 0024 FFF7FEFF 		bl	c2txExt
 132              	.LVL8:
 133 0028 08BD     		pop	{r3, pc}
 134              	.L8:
 135 002a 00BF     		.align	2
 136              	.L7:
 137 002c 00000000 		.word	txMsgExt2
 138 0030 21F2EF18 		.word	418378273
 139 0034 00000000 		.word	canTx2
 140              		.cfi_endproc
 141              	.LFE67:
ARM GAS  /tmp/ccbR3QlG.s 			page 4


 143              		.section	.text.getEvent,"ax",%progbits
 144              		.align	1
 145              		.global	getEvent
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu softvfp
 151              	getEvent:
 152              	.LFB68:
  34:Core/Src/encoder.c **** }
  35:Core/Src/encoder.c **** 
  36:Core/Src/encoder.c **** void getEvent(CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx)
  37:Core/Src/encoder.c **** {
 153              		.loc 1 37 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158              	.LVL9:
  38:Core/Src/encoder.c **** 
  39:Core/Src/encoder.c ****     if (rxMsg->ExtId == EVENT)
 159              		.loc 1 39 0
 160 0000 4268     		ldr	r2, [r0, #4]
 161 0002 084B     		ldr	r3, .L12
 162 0004 9A42     		cmp	r2, r3
 163 0006 00D0     		beq	.L11
 164              	.LVL10:
 165              	.L9:
 166 0008 7047     		bx	lr
 167              	.LVL11:
 168              	.L11:
  40:Core/Src/encoder.c ****     {
  41:Core/Src/encoder.c ****         te.currentScreen = canRx[0];
 169              		.loc 1 41 0
 170 000a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 171 000c 064B     		ldr	r3, .L12+4
 172 000e 1A70     		strb	r2, [r3]
  42:Core/Src/encoder.c ****         // canRx[1] Reserved
  43:Core/Src/encoder.c ****         // canRx[2] 0x01 Events
  44:Core/Src/encoder.c ****         te.knob = canRx[3];
 173              		.loc 1 44 0
 174 0010 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 175 0012 5A70     		strb	r2, [r3, #1]
  45:Core/Src/encoder.c ****         te.tap = (canRx[4]) + (canRx[5] << 8);
 176              		.loc 1 45 0
 177 0014 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 178 0016 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 179              	.LVL12:
 180 0018 02EB0022 		add	r2, r2, r0, lsl #8
 181 001c 5A80     		strh	r2, [r3, #2]	@ movhi
  46:Core/Src/encoder.c ****         te.swipe = canRx[6];
 182              		.loc 1 46 0
 183 001e 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 184 0020 1A71     		strb	r2, [r3, #4]
  47:Core/Src/encoder.c ****     }
  48:Core/Src/encoder.c **** }
 185              		.loc 1 48 0
ARM GAS  /tmp/ccbR3QlG.s 			page 5


 186 0022 F1E7     		b	.L9
 187              	.L13:
 188              		.align	2
 189              	.L12:
 190 0024 F20FFF18 		.word	419368946
 191 0028 00000000 		.word	te
 192              		.cfi_endproc
 193              	.LFE68:
 195              		.section	.text.getData,"ax",%progbits
 196              		.align	1
 197              		.global	getData
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu softvfp
 203              	getData:
 204              	.LFB69:
  49:Core/Src/encoder.c **** 
  50:Core/Src/encoder.c **** void getData(CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx)
  51:Core/Src/encoder.c **** {
 205              		.loc 1 51 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210              	.LVL13:
  52:Core/Src/encoder.c ****     if (rxMsg->ExtId == DATA)
 211              		.loc 1 52 0
 212 0000 4268     		ldr	r2, [r0, #4]
 213 0002 094B     		ldr	r3, .L17
 214 0004 9A42     		cmp	r2, r3
 215 0006 00D0     		beq	.L16
 216              	.LVL14:
 217              	.L14:
 218 0008 7047     		bx	lr
 219              	.LVL15:
 220              	.L16:
  53:Core/Src/encoder.c ****     {
  54:Core/Src/encoder.c ****         te.currentScreen = canRx[0];
 221              		.loc 1 54 0
 222 000a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 223 000c 074B     		ldr	r3, .L17+4
 224 000e 1A70     		strb	r2, [r3]
  55:Core/Src/encoder.c ****         // canRx[1] Reserved
  56:Core/Src/encoder.c ****         te.valueId = canRx[2];
 225              		.loc 1 56 0
 226 0010 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 227 0012 5A71     		strb	r2, [r3, #5]
  57:Core/Src/encoder.c ****         te.currentVal = canRx[3] + (canRx[4] << 8);
 228              		.loc 1 57 0
 229 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 230 0016 0879     		ldrb	r0, [r1, #4]	@ zero_extendqisi2
 231              	.LVL16:
 232 0018 02EB0022 		add	r2, r2, r0, lsl #8
 233 001c DA80     		strh	r2, [r3, #6]	@ movhi
  58:Core/Src/encoder.c ****         te.dispCode = canRx[5];
 234              		.loc 1 58 0
ARM GAS  /tmp/ccbR3QlG.s 			page 6


 235 001e 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 236 0020 1A72     		strb	r2, [r3, #8]
  59:Core/Src/encoder.c ****         te.activeId = canRx[6];
 237              		.loc 1 59 0
 238 0022 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 239 0024 5A72     		strb	r2, [r3, #9]
  60:Core/Src/encoder.c ****     }
  61:Core/Src/encoder.c **** }
 240              		.loc 1 61 0
 241 0026 EFE7     		b	.L14
 242              	.L18:
 243              		.align	2
 244              	.L17:
 245 0028 F211FF18 		.word	419369458
 246 002c 00000000 		.word	te
 247              		.cfi_endproc
 248              	.LFE69:
 250              		.section	.text.encoderHandler,"ax",%progbits
 251              		.align	1
 252              		.global	encoderHandler
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu softvfp
 258              	encoderHandler:
 259              	.LFB70:
  62:Core/Src/encoder.c **** 
  63:Core/Src/encoder.c **** void encoderHandler(void)
  64:Core/Src/encoder.c **** {
 260              		.loc 1 64 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 10B5     		push	{r4, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 4, -8
 267              		.cfi_offset 14, -4
  65:Core/Src/encoder.c ****     switch (te.currentScreen)
 268              		.loc 1 65 0
 269 0002 614B     		ldr	r3, .L40
 270 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 271 0006 013B     		subs	r3, r3, #1
 272 0008 0B2B     		cmp	r3, #11
 273 000a 0AD8     		bhi	.L20
 274 000c DFE803F0 		tbb	[pc, r3]
 275              	.L22:
 276 0010 06       		.byte	(.L21-.L22)/2
 277 0011 25       		.byte	(.L23-.L22)/2
 278 0012 15       		.byte	(.L24-.L22)/2
 279 0013 32       		.byte	(.L25-.L22)/2
 280 0014 09       		.byte	(.L20-.L22)/2
 281 0015 09       		.byte	(.L20-.L22)/2
 282 0016 46       		.byte	(.L26-.L22)/2
 283 0017 09       		.byte	(.L20-.L22)/2
 284 0018 09       		.byte	(.L20-.L22)/2
 285 0019 56       		.byte	(.L27-.L22)/2
 286 001a 64       		.byte	(.L28-.L22)/2
ARM GAS  /tmp/ccbR3QlG.s 			page 7


 287 001b 70       		.byte	(.L29-.L22)/2
 288              		.p2align 1
 289              	.L21:
  66:Core/Src/encoder.c ****     {
  67:Core/Src/encoder.c **** 
  68:Core/Src/encoder.c ****     case HOME:
  69:Core/Src/encoder.c ****         vcu.burnFlag = OFF;
 290              		.loc 1 69 0
 291 001c 0022     		movs	r2, #0
 292 001e 5B4B     		ldr	r3, .L40+4
 293 0020 9A71     		strb	r2, [r3, #6]
 294              	.L20:
  70:Core/Src/encoder.c ****         break;
  71:Core/Src/encoder.c **** 
  72:Core/Src/encoder.c ****     /////// Gear Selection Screens /////////
  73:Core/Src/encoder.c ****     case FWD_REQ:
  74:Core/Src/encoder.c **** 
  75:Core/Src/encoder.c ****         // vcu.dio = FORWARD;
  76:Core/Src/encoder.c ****         canIOset(forward, ON);
  77:Core/Src/encoder.c ****         if (ldu.dir == FWD)
  78:Core/Src/encoder.c ****         {
  79:Core/Src/encoder.c ****             setWidget(FWD_CFM, 0, 0, 0);
  80:Core/Src/encoder.c ****         }
  81:Core/Src/encoder.c **** 
  82:Core/Src/encoder.c ****         break;
  83:Core/Src/encoder.c **** 
  84:Core/Src/encoder.c ****     case FWD_CFM:
  85:Core/Src/encoder.c ****         if (ldu.rpm >= 2000)
  86:Core/Src/encoder.c ****         {
  87:Core/Src/encoder.c ****             setWidget(HOME, 0, 0, 0);
  88:Core/Src/encoder.c ****         }
  89:Core/Src/encoder.c ****         break;
  90:Core/Src/encoder.c **** 
  91:Core/Src/encoder.c ****     case NTRL_REQ:
  92:Core/Src/encoder.c ****         canIOset(forward, OFF);
  93:Core/Src/encoder.c ****         canIOset(reverse, OFF);
  94:Core/Src/encoder.c ****         if (ldu.dir == NTRL)
  95:Core/Src/encoder.c ****         {
  96:Core/Src/encoder.c ****             setWidget(NTRL_CFM, 0, 0, 0);
  97:Core/Src/encoder.c ****         }
  98:Core/Src/encoder.c ****         break;
  99:Core/Src/encoder.c **** 
 100:Core/Src/encoder.c ****     case REV_REQ:
 101:Core/Src/encoder.c ****         // vcu.dio = REVERSE;
 102:Core/Src/encoder.c ****         canIOset(reverse, ON);
 103:Core/Src/encoder.c ****         if (ldu.dir == REV)
 104:Core/Src/encoder.c ****         {
 105:Core/Src/encoder.c ****             setWidget(REV_CFM, 0, 0, 0);
 106:Core/Src/encoder.c ****         }
 107:Core/Src/encoder.c ****         break;
 108:Core/Src/encoder.c **** 
 109:Core/Src/encoder.c ****     /////////// Charging Data ///////////////////////
 110:Core/Src/encoder.c ****     case BATTERY:
 111:Core/Src/encoder.c ****         // if (vcu.state != charge_keyOff || vcu.state != charge_keyOn)
 112:Core/Src/encoder.c ****         //{
 113:Core/Src/encoder.c ****         setWidget(BATTERY, BATT_VOLT, BMS[0].volt, x1);
 114:Core/Src/encoder.c ****         setWidget(BATTERY, BATT_TEMP, BMS[0].temp, x1);
ARM GAS  /tmp/ccbR3QlG.s 			page 8


 115:Core/Src/encoder.c ****         //}
 116:Core/Src/encoder.c ****         break;
 117:Core/Src/encoder.c **** 
 118:Core/Src/encoder.c ****     ////////// Launch Control ////////////////////////
 119:Core/Src/encoder.c ****     case LAUNCH:
 120:Core/Src/encoder.c ****         if (vcu.state != launchMode)
 121:Core/Src/encoder.c ****         {
 122:Core/Src/encoder.c ****             setWidget(HOME, 0, 0, 0);
 123:Core/Src/encoder.c ****         }
 124:Core/Src/encoder.c ****         break;
 125:Core/Src/encoder.c **** 
 126:Core/Src/encoder.c ****         ////////// Burnout Mode //////////////////////////////
 127:Core/Src/encoder.c **** 
 128:Core/Src/encoder.c ****     case BURNOUT:
 129:Core/Src/encoder.c ****         vcu.burnFlag = ON;
 130:Core/Src/encoder.c ****         break;
 131:Core/Src/encoder.c ****         /*
 132:Core/Src/encoder.c ****     case READY_BURNOUT: //HOME BUTTON DISBLED
 133:Core/Src/encoder.c ****         if (ldu.pot < 1000)
 134:Core/Src/encoder.c ****         {
 135:Core/Src/encoder.c ****             vcu.burnFlag = OFF;
 136:Core/Src/encoder.c ****             setWidget(HOME, 0, 0, 0);
 137:Core/Src/encoder.c ****         }
 138:Core/Src/encoder.c ****     */
 139:Core/Src/encoder.c **** 
 140:Core/Src/encoder.c ****     default:
 141:Core/Src/encoder.c ****         break;
 142:Core/Src/encoder.c ****     }
 143:Core/Src/encoder.c **** 
 144:Core/Src/encoder.c ****     switch (vcu.state)
 295              		.loc 1 144 0
 296 0022 5A4B     		ldr	r3, .L40+4
 297 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 298 0026 DBB2     		uxtb	r3, r3
 299 0028 062B     		cmp	r3, #6
 300 002a 00F2AB80 		bhi	.L19
 301 002e DFE803F0 		tbb	[pc, r3]
 302              	.L32:
 303 0032 63       		.byte	(.L31-.L32)/2
 304 0033 6D       		.byte	(.L33-.L32)/2
 305 0034 92       		.byte	(.L34-.L32)/2
 306 0035 A9       		.byte	(.L19-.L32)/2
 307 0036 71       		.byte	(.L35-.L32)/2
 308 0037 A9       		.byte	(.L19-.L32)/2
 309 0038 8B       		.byte	(.L36-.L32)/2
 310 0039 00       		.p2align 1
 311              	.L24:
  76:Core/Src/encoder.c ****         if (ldu.dir == FWD)
 312              		.loc 1 76 0
 313 003a 0121     		movs	r1, #1
 314 003c 0420     		movs	r0, #4
 315 003e FFF7FEFF 		bl	canIOset
 316              	.LVL17:
  77:Core/Src/encoder.c ****         {
 317              		.loc 1 77 0
 318 0042 534B     		ldr	r3, .L40+8
 319 0044 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
ARM GAS  /tmp/ccbR3QlG.s 			page 9


 320 0046 DBB2     		uxtb	r3, r3
 321 0048 FF2B     		cmp	r3, #255
 322 004a EAD1     		bne	.L20
  79:Core/Src/encoder.c ****         }
 323              		.loc 1 79 0
 324 004c 0023     		movs	r3, #0
 325 004e 1A46     		mov	r2, r3
 326 0050 1946     		mov	r1, r3
 327 0052 0220     		movs	r0, #2
 328 0054 FFF7FEFF 		bl	setWidget
 329              	.LVL18:
 330 0058 E3E7     		b	.L20
 331              	.L23:
  85:Core/Src/encoder.c ****         {
 332              		.loc 1 85 0
 333 005a 4D4B     		ldr	r3, .L40+8
 334 005c 1B88     		ldrh	r3, [r3]
 335 005e 9BB2     		uxth	r3, r3
 336 0060 B3F5FA6F 		cmp	r3, #2000
 337 0064 DDD3     		bcc	.L20
  87:Core/Src/encoder.c ****         }
 338              		.loc 1 87 0
 339 0066 0023     		movs	r3, #0
 340 0068 1A46     		mov	r2, r3
 341 006a 1946     		mov	r1, r3
 342 006c 0120     		movs	r0, #1
 343 006e FFF7FEFF 		bl	setWidget
 344              	.LVL19:
 345 0072 D6E7     		b	.L20
 346              	.L25:
  92:Core/Src/encoder.c ****         canIOset(reverse, OFF);
 347              		.loc 1 92 0
 348 0074 0021     		movs	r1, #0
 349 0076 0420     		movs	r0, #4
 350 0078 FFF7FEFF 		bl	canIOset
 351              	.LVL20:
  93:Core/Src/encoder.c ****         if (ldu.dir == NTRL)
 352              		.loc 1 93 0
 353 007c 0021     		movs	r1, #0
 354 007e 0320     		movs	r0, #3
 355 0080 FFF7FEFF 		bl	canIOset
 356              	.LVL21:
  94:Core/Src/encoder.c ****         {
 357              		.loc 1 94 0
 358 0084 424B     		ldr	r3, .L40+8
 359 0086 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 360 0088 DBB2     		uxtb	r3, r3
 361 008a 022B     		cmp	r3, #2
 362 008c C9D1     		bne	.L20
  96:Core/Src/encoder.c ****         }
 363              		.loc 1 96 0
 364 008e 0023     		movs	r3, #0
 365 0090 1A46     		mov	r2, r3
 366 0092 1946     		mov	r1, r3
 367 0094 0520     		movs	r0, #5
 368 0096 FFF7FEFF 		bl	setWidget
 369              	.LVL22:
ARM GAS  /tmp/ccbR3QlG.s 			page 10


 370 009a C2E7     		b	.L20
 371              	.L26:
 102:Core/Src/encoder.c ****         if (ldu.dir == REV)
 372              		.loc 1 102 0
 373 009c 0121     		movs	r1, #1
 374 009e 0320     		movs	r0, #3
 375 00a0 FFF7FEFF 		bl	canIOset
 376              	.LVL23:
 103:Core/Src/encoder.c ****         {
 377              		.loc 1 103 0
 378 00a4 3A4B     		ldr	r3, .L40+8
 379 00a6 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 380 00a8 DBB2     		uxtb	r3, r3
 381 00aa 032B     		cmp	r3, #3
 382 00ac B9D1     		bne	.L20
 105:Core/Src/encoder.c ****         }
 383              		.loc 1 105 0
 384 00ae 0023     		movs	r3, #0
 385 00b0 1A46     		mov	r2, r3
 386 00b2 1946     		mov	r1, r3
 387 00b4 0620     		movs	r0, #6
 388 00b6 FFF7FEFF 		bl	setWidget
 389              	.LVL24:
 390 00ba B2E7     		b	.L20
 391              	.L27:
 113:Core/Src/encoder.c ****         setWidget(BATTERY, BATT_TEMP, BMS[0].temp, x1);
 392              		.loc 1 113 0
 393 00bc 354C     		ldr	r4, .L40+12
 394 00be 0023     		movs	r3, #0
 395 00c0 2288     		ldrh	r2, [r4]
 396 00c2 0121     		movs	r1, #1
 397 00c4 0A20     		movs	r0, #10
 398 00c6 FFF7FEFF 		bl	setWidget
 399              	.LVL25:
 114:Core/Src/encoder.c ****         //}
 400              		.loc 1 114 0
 401 00ca 0023     		movs	r3, #0
 402 00cc A278     		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 403 00ce 0421     		movs	r1, #4
 404 00d0 0A20     		movs	r0, #10
 405 00d2 FFF7FEFF 		bl	setWidget
 406              	.LVL26:
 116:Core/Src/encoder.c **** 
 407              		.loc 1 116 0
 408 00d6 A4E7     		b	.L20
 409              	.L28:
 120:Core/Src/encoder.c ****         {
 410              		.loc 1 120 0
 411 00d8 2C4B     		ldr	r3, .L40+4
 412 00da 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 413 00dc DBB2     		uxtb	r3, r3
 414 00de 062B     		cmp	r3, #6
 415 00e0 9FD0     		beq	.L20
 122:Core/Src/encoder.c ****         }
 416              		.loc 1 122 0
 417 00e2 0023     		movs	r3, #0
 418 00e4 1A46     		mov	r2, r3
ARM GAS  /tmp/ccbR3QlG.s 			page 11


 419 00e6 1946     		mov	r1, r3
 420 00e8 0120     		movs	r0, #1
 421 00ea FFF7FEFF 		bl	setWidget
 422              	.LVL27:
 423 00ee 98E7     		b	.L20
 424              	.L29:
 129:Core/Src/encoder.c ****         break;
 425              		.loc 1 129 0
 426 00f0 0122     		movs	r2, #1
 427 00f2 264B     		ldr	r3, .L40+4
 428 00f4 9A71     		strb	r2, [r3, #6]
 130:Core/Src/encoder.c ****         /*
 429              		.loc 1 130 0
 430 00f6 94E7     		b	.L20
 431              	.L31:
 145:Core/Src/encoder.c ****     {
 146:Core/Src/encoder.c ****     case off:
 147:Core/Src/encoder.c ****         setBacklight(0);
 432              		.loc 1 147 0
 433 00f8 0020     		movs	r0, #0
 434 00fa FFF7FEFF 		bl	setBacklight
 435              	.LVL28:
 148:Core/Src/encoder.c ****         setWidget(HOME, 0, 0, 0);
 436              		.loc 1 148 0
 437 00fe 0023     		movs	r3, #0
 438 0100 1A46     		mov	r2, r3
 439 0102 1946     		mov	r1, r3
 440 0104 0120     		movs	r0, #1
 441 0106 FFF7FEFF 		bl	setWidget
 442              	.LVL29:
 149:Core/Src/encoder.c ****         break;
 443              		.loc 1 149 0
 444 010a 10BD     		pop	{r4, pc}
 445              	.L33:
 150:Core/Src/encoder.c **** 
 151:Core/Src/encoder.c ****     case on:
 152:Core/Src/encoder.c ****         setBacklight(95);
 446              		.loc 1 152 0
 447 010c 5F20     		movs	r0, #95
 448 010e FFF7FEFF 		bl	setBacklight
 449              	.LVL30:
 153:Core/Src/encoder.c ****         break;
 450              		.loc 1 153 0
 451 0112 10BD     		pop	{r4, pc}
 452              	.L35:
 154:Core/Src/encoder.c **** 
 155:Core/Src/encoder.c ****     case idle:
 156:Core/Src/encoder.c **** 
 157:Core/Src/encoder.c ****         switch (te.currentScreen)
 453              		.loc 1 157 0
 454 0114 1C4B     		ldr	r3, .L40
 455 0116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 456 0118 DBB2     		uxtb	r3, r3
 457 011a 012B     		cmp	r3, #1
 458 011c 03D0     		beq	.L37
 459 011e 8BB3     		cbz	r3, .L19
 460 0120 083B     		subs	r3, r3, #8
ARM GAS  /tmp/ccbR3QlG.s 			page 12


 461 0122 012B     		cmp	r3, #1
 462 0124 2ED8     		bhi	.L19
 463              	.L37:
 158:Core/Src/encoder.c ****         {
 159:Core/Src/encoder.c ****         case HOME:
 160:Core/Src/encoder.c ****         case WINDOWS:
 161:Core/Src/encoder.c ****         case CHARGE_STATS:
 162:Core/Src/encoder.c ****             if (charger.proximity)
 464              		.loc 1 162 0
 465 0126 1C4B     		ldr	r3, .L40+16
 466 0128 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 467 012a 33B1     		cbz	r3, .L38
 163:Core/Src/encoder.c ****             {
 164:Core/Src/encoder.c ****                 setWidget(DRIVEAWAY, 0, 0, 0);
 468              		.loc 1 164 0
 469 012c 0023     		movs	r3, #0
 470 012e 1A46     		mov	r2, r3
 471 0130 1946     		mov	r1, r3
 472 0132 1020     		movs	r0, #16
 473 0134 FFF7FEFF 		bl	setWidget
 474              	.LVL31:
 475 0138 10BD     		pop	{r4, pc}
 476              	.L38:
 165:Core/Src/encoder.c ****             }
 166:Core/Src/encoder.c ****             else
 167:Core/Src/encoder.c ****             {
 168:Core/Src/encoder.c ****                 setWidget(NTRL_REQ, 0, 0, 0);
 477              		.loc 1 168 0
 478 013a 0023     		movs	r3, #0
 479 013c 1A46     		mov	r2, r3
 480 013e 1946     		mov	r1, r3
 481 0140 0420     		movs	r0, #4
 482 0142 FFF7FEFF 		bl	setWidget
 483              	.LVL32:
 484 0146 10BD     		pop	{r4, pc}
 485              	.L36:
 169:Core/Src/encoder.c ****             }
 170:Core/Src/encoder.c ****             break;
 171:Core/Src/encoder.c **** 
 172:Core/Src/encoder.c ****         default:
 173:Core/Src/encoder.c ****             break;
 174:Core/Src/encoder.c ****         }
 175:Core/Src/encoder.c **** 
 176:Core/Src/encoder.c ****         break;
 177:Core/Src/encoder.c **** 
 178:Core/Src/encoder.c ****     case launchMode:
 179:Core/Src/encoder.c ****         setWidget(LAUNCH, 0, 0, 0);
 486              		.loc 1 179 0
 487 0148 0023     		movs	r3, #0
 488 014a 1A46     		mov	r2, r3
 489 014c 1946     		mov	r1, r3
 490 014e 0B20     		movs	r0, #11
 491 0150 FFF7FEFF 		bl	setWidget
 492              	.LVL33:
 180:Core/Src/encoder.c ****         break;
 493              		.loc 1 180 0
 494 0154 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccbR3QlG.s 			page 13


 495              	.L34:
 181:Core/Src/encoder.c **** 
 182:Core/Src/encoder.c ****     case charge_keyOff:
 183:Core/Src/encoder.c ****         setWidget(CHARGE_STATS, CS_TEMP, BMS[0].temp, x1);
 496              		.loc 1 183 0
 497 0156 0F4C     		ldr	r4, .L40+12
 498 0158 0023     		movs	r3, #0
 499 015a A278     		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 500 015c 0121     		movs	r1, #1
 501 015e 0820     		movs	r0, #8
 502 0160 FFF7FEFF 		bl	setWidget
 503              	.LVL34:
 184:Core/Src/encoder.c ****         setWidget(CHARGE_STATS, CS_SOC, BMS[0].chargeState, x1);
 504              		.loc 1 184 0
 505 0164 0023     		movs	r3, #0
 506 0166 227A     		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 507 0168 0421     		movs	r1, #4
 508 016a 0820     		movs	r0, #8
 509 016c FFF7FEFF 		bl	setWidget
 510              	.LVL35:
 185:Core/Src/encoder.c ****         setWidget(CHARGE_STATS, CS_AMP, charger.current, x1);
 511              		.loc 1 185 0
 512 0170 0023     		movs	r3, #0
 513 0172 094A     		ldr	r2, .L40+16
 514 0174 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 515 0176 0821     		movs	r1, #8
 516 0178 0846     		mov	r0, r1
 517 017a FFF7FEFF 		bl	setWidget
 518              	.LVL36:
 186:Core/Src/encoder.c ****         setBacklight(95);
 519              		.loc 1 186 0
 520 017e 5F20     		movs	r0, #95
 521 0180 FFF7FEFF 		bl	setBacklight
 522              	.LVL37:
 523              	.L19:
 524 0184 10BD     		pop	{r4, pc}
 525              	.L41:
 526 0186 00BF     		.align	2
 527              	.L40:
 528 0188 00000000 		.word	te
 529 018c 00000000 		.word	vcu
 530 0190 00000000 		.word	ldu
 531 0194 00000000 		.word	BMS
 532 0198 00000000 		.word	charger
 533              		.cfi_endproc
 534              	.LFE70:
 536              		.comm	te,12,4
 537              		.comm	canDebug,4,4
 538              		.comm	txCycle2,4,4
 539              		.comm	txCycle,4,4
 540              		.comm	canTx2,8,4
 541              		.comm	canTx,8,4
 542              		.comm	canMailbox2,4,4
 543              		.comm	canMailbox,4,4
 544              		.comm	canRx2,8,4
 545              		.comm	canRx,8,4
 546              		.comm	txMsgExt2,24,4
ARM GAS  /tmp/ccbR3QlG.s 			page 14


 547              		.comm	txMsg2,24,4
 548              		.comm	rxMsg2,28,4
 549              		.comm	txMsgExt,24,4
 550              		.comm	txMsg,24,4
 551              		.comm	rxMsg,28,4
 552              		.comm	sf5,40,4
 553              		.comm	sf4,40,4
 554              		.comm	sf3,40,4
 555              		.comm	sf2,40,4
 556              		.comm	sf,40,4
 557              		.comm	hcan2,40,4
 558              		.comm	hcan1,40,4
 559              		.comm	LIDAR,8,4
 560              		.comm	BMS,20,4
 561              		.comm	charger,3,4
 562              		.comm	vcu,7,4
 563              		.comm	iboost,2,4
 564              		.comm	ldu,18,4
 565              		.comm	tempdata,4,4
 566              		.comm	ADC_data,12,4
 567              		.comm	tenderActive,1,1
 568              		.comm	time_now,4,4
 569              		.comm	period,4,4
 570              		.comm	DCDC,4,4
 571              		.text
 572              	.Letext0:
 573              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 574              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 575              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 576              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 577              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
 578              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 579              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 580              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 581              		.file 10 "/usr/include/newlib/sys/lock.h"
 582              		.file 11 "/usr/include/newlib/sys/_types.h"
 583              		.file 12 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 584              		.file 13 "/usr/include/newlib/sys/reent.h"
 585              		.file 14 "Core/Inc/dcdc.h"
 586              		.file 15 "Core/Inc/vcu.h"
 587              		.file 16 "Core/Inc/lidar.h"
 588              		.file 17 "Core/Inc/can_setup.h"
 589              		.file 18 "Core/Inc/encoder.h"
ARM GAS  /tmp/ccbR3QlG.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 encoder.c
     /tmp/ccbR3QlG.s:16     .text.setWidget:0000000000000000 $t
     /tmp/ccbR3QlG.s:23     .text.setWidget:0000000000000000 setWidget
     /tmp/ccbR3QlG.s:77     .text.setWidget:0000000000000030 $d
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000008 canTx2
     /tmp/ccbR3QlG.s:84     .text.setBacklight:0000000000000000 $t
     /tmp/ccbR3QlG.s:91     .text.setBacklight:0000000000000000 setBacklight
     /tmp/ccbR3QlG.s:137    .text.setBacklight:000000000000002c $d
     /tmp/ccbR3QlG.s:144    .text.getEvent:0000000000000000 $t
     /tmp/ccbR3QlG.s:151    .text.getEvent:0000000000000000 getEvent
     /tmp/ccbR3QlG.s:190    .text.getEvent:0000000000000024 $d
                            *COM*:000000000000000c te
     /tmp/ccbR3QlG.s:196    .text.getData:0000000000000000 $t
     /tmp/ccbR3QlG.s:203    .text.getData:0000000000000000 getData
     /tmp/ccbR3QlG.s:245    .text.getData:0000000000000028 $d
     /tmp/ccbR3QlG.s:251    .text.encoderHandler:0000000000000000 $t
     /tmp/ccbR3QlG.s:258    .text.encoderHandler:0000000000000000 encoderHandler
     /tmp/ccbR3QlG.s:276    .text.encoderHandler:0000000000000010 $d
     /tmp/ccbR3QlG.s:288    .text.encoderHandler:000000000000001c $t
     /tmp/ccbR3QlG.s:303    .text.encoderHandler:0000000000000032 $d
     /tmp/ccbR3QlG.s:528    .text.encoderHandler:0000000000000188 $d
                            *COM*:0000000000000007 vcu
                            *COM*:0000000000000012 ldu
                            *COM*:0000000000000014 BMS
                            *COM*:0000000000000003 charger
                            *COM*:0000000000000004 canDebug
                            *COM*:0000000000000004 txCycle2
                            *COM*:0000000000000004 txCycle
                            *COM*:0000000000000008 canTx
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000008 canRx2
                            *COM*:0000000000000008 canRx
                            *COM*:0000000000000018 txMsg2
                            *COM*:000000000000001c rxMsg2
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000018 txMsg
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000028 sf3
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000028 hcan2
                            *COM*:0000000000000028 hcan1
                            *COM*:0000000000000008 LIDAR
                            *COM*:0000000000000002 iboost
                            *COM*:0000000000000004 tempdata
                            *COM*:000000000000000c ADC_data
                            *COM*:0000000000000001 tenderActive
                            *COM*:0000000000000004 time_now
                            *COM*:0000000000000004 period
                            *COM*:0000000000000004 DCDC
                     .debug_frame:0000000000000010 $d
     /tmp/ccbR3QlG.s:310    .text.encoderHandler:0000000000000039 $d
ARM GAS  /tmp/ccbR3QlG.s 			page 16


     /tmp/ccbR3QlG.s:310    .text.encoderHandler:000000000000003a $t

UNDEFINED SYMBOLS
c2txExt
canIOset
