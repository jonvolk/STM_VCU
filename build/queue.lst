ARM GAS  /tmp/ccE5IrFh.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"queue.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	prvGetDisinheritPriorityAfterTimeout:
  23              	.LFB32:
  24              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
ARM GAS  /tmp/ccE5IrFh.s 			page 2


  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** header files above, but not in this file, in order to generate the correct
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** privileged Vs unprivileged linkage and placement. */
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** the code is maintained despite this dual use of two structure members.  An
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** alternative implementation would be to use a union, but use of a union is
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** against the coding standard (although an exception to the standard has been
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** permitted where the dual use also significantly changes the type of the
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure member). */
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define pxMutexHolder					pcTail
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
ARM GAS  /tmp/ccE5IrFh.s 			page 3


  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
ARM GAS  /tmp/ccE5IrFh.s 			page 4


 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
ARM GAS  /tmp/ccE5IrFh.s 			page 5


 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * that priority.
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
ARM GAS  /tmp/ccE5IrFh.s 			page 6


 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
ARM GAS  /tmp/ccE5IrFh.s 			page 7


 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is not going to be a queue storage area. */
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be in the queue at any time. */
 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccE5IrFh.s 			page 8


 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccE5IrFh.s 			page 9


 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
ARM GAS  /tmp/ccE5IrFh.s 			page 10


 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccE5IrFh.s 			page 11


 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( xSemaphore );
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not required here. */
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = NULL;
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/ccE5IrFh.s 			page 12


 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccE5IrFh.s 			page 13


 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccE5IrFh.s 			page 14


 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
ARM GAS  /tmp/ccE5IrFh.s 			page 15


 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
ARM GAS  /tmp/ccE5IrFh.s 			page 16


 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible that interrupts occurring now
 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event list again - but as the
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
ARM GAS  /tmp/ccE5IrFh.s 			page 17


 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
ARM GAS  /tmp/ccE5IrFh.s 			page 18


 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
ARM GAS  /tmp/ccE5IrFh.s 			page 19


1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
ARM GAS  /tmp/ccE5IrFh.s 			page 20


1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
ARM GAS  /tmp/ccE5IrFh.s 			page 21


1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
ARM GAS  /tmp/ccE5IrFh.s 			page 22


1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccE5IrFh.s 			page 23


1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data available, remove one item. */
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task. */
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  /tmp/ccE5IrFh.s 			page 24


1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/ccE5IrFh.s 			page 25


1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data. */
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			back and attempt to read the data. */
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the queue pointer is not NULL. */
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	0. */
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
ARM GAS  /tmp/ccE5IrFh.s 			page 26


1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* Record the information required to implement
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						priority inheritance should it become necessary. */
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is n
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccE5IrFh.s 			page 27


1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* For inheritance to have occurred there must have been an
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if it were 0 the function would have exited. */
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					(or the block time has expired) so exit now. */
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					so configure the timeout structure ready to block. */
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			become available.  As semaphores are implemented with queues the
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  /tmp/ccE5IrFh.s 			page 28


1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				attempt to take the semaphore again. */
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out. */
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* xInheritanceOccurred could only have be set if
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccE5IrFh.s 			page 29


1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This task blocking on the mutex caused another
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to inherit this task's priority.  Now this task
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							has timed out the priority should be disinherited
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							again, but only as low as the next highest priority
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task that is waiting for the same mutex. */
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccE5IrFh.s 			page 30


1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position so it can be reset after the data
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is read from the queue as this function is only peeking the
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data, not removing it. */
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is being left in the queue, so see if there are
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				any other tasks waiting for the data. */
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than this task. */
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure ready to enter the blocked
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					state. */
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  /tmp/ccE5IrFh.s 			page 31


1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				state, instead return to try and obtain the data. */
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			exit, otherwise go back and try to read the data again. */
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccE5IrFh.s 			page 32


1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
ARM GAS  /tmp/ccE5IrFh.s 			page 33


1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
ARM GAS  /tmp/ccE5IrFh.s 			page 34


1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t *pxQueue;
1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
ARM GAS  /tmp/ccE5IrFh.s 			page 35


1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
ARM GAS  /tmp/ccE5IrFh.s 			page 36


1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  25              		.loc 1 2015 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		priority, but the waiting task times out, then the holder should
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return the priority of the highest priority task that is waiting for the
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutex. */
ARM GAS  /tmp/ccE5IrFh.s 			page 37


2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0 )
  31              		.loc 1 2024 0
  32 0000 436A     		ldr	r3, [r0, #36]
  33 0002 23B1     		cbz	r3, .L3
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = configMAX_PRIORITIES - listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( px
  34              		.loc 1 2026 0
  35 0004 036B     		ldr	r3, [r0, #48]
  36 0006 1868     		ldr	r0, [r3]
  37              	.LVL1:
  38 0008 C0F13800 		rsb	r0, r0, #56
  39              	.LVL2:
  40 000c 7047     		bx	lr
  41              	.LVL3:
  42              	.L3:
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
  43              		.loc 1 2030 0
  44 000e 0020     		movs	r0, #0
  45              	.LVL4:
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
  46              		.loc 1 2034 0
  47 0010 7047     		bx	lr
  48              		.cfi_endproc
  49              	.LFE32:
  51              		.section	.text.prvIsQueueFull,"ax",%progbits
  52              		.align	1
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  56              		.fpu softvfp
  58              	prvIsQueueFull:
  59              	.LFB38:
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/ccE5IrFh.s 			page 38


2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
ARM GAS  /tmp/ccE5IrFh.s 			page 39


2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
ARM GAS  /tmp/ccE5IrFh.s 			page 40


2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
ARM GAS  /tmp/ccE5IrFh.s 			page 41


2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
ARM GAS  /tmp/ccE5IrFh.s 			page 42


2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  60              		.loc 1 2296 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              	.LVL5:
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 0446     		mov	r4, r0
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  70              		.loc 1 2299 0
  71 0004 FFF7FEFF 		bl	vPortEnterCritical
  72              	.LVL6:
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  73              		.loc 1 2301 0
  74 0008 A26B     		ldr	r2, [r4, #56]
  75 000a E36B     		ldr	r3, [r4, #60]
  76 000c 9A42     		cmp	r2, r3
  77 000e 04D0     		beq	.L8
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
  78              		.loc 1 2307 0
  79 0010 0024     		movs	r4, #0
  80              	.LVL7:
  81              	.L5:
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  82              		.loc 1 2310 0
  83 0012 FFF7FEFF 		bl	vPortExitCritical
  84              	.LVL8:
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
ARM GAS  /tmp/ccE5IrFh.s 			page 43


  85              		.loc 1 2313 0
  86 0016 2046     		mov	r0, r4
  87 0018 10BD     		pop	{r4, pc}
  88              	.LVL9:
  89              	.L8:
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
  90              		.loc 1 2303 0
  91 001a 0124     		movs	r4, #1
  92              	.LVL10:
  93 001c F9E7     		b	.L5
  94              		.cfi_endproc
  95              	.LFE38:
  97              		.section	.text.prvIsQueueEmpty,"ax",%progbits
  98              		.align	1
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 102              		.fpu softvfp
 104              	prvIsQueueEmpty:
 105              	.LFB36:
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 106              		.loc 1 2257 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              	.LVL11:
 111 0000 10B5     		push	{r4, lr}
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 4, -8
 114              		.cfi_offset 14, -4
 115 0002 0446     		mov	r4, r0
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 116              		.loc 1 2260 0
 117 0004 FFF7FEFF 		bl	vPortEnterCritical
 118              	.LVL12:
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 119              		.loc 1 2262 0
 120 0008 A36B     		ldr	r3, [r4, #56]
 121 000a 23B1     		cbz	r3, .L13
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 122              		.loc 1 2268 0
 123 000c 0024     		movs	r4, #0
 124              	.LVL13:
 125              	.L10:
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 126              		.loc 1 2271 0
 127 000e FFF7FEFF 		bl	vPortExitCritical
 128              	.LVL14:
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 129              		.loc 1 2274 0
 130 0012 2046     		mov	r0, r4
 131 0014 10BD     		pop	{r4, pc}
 132              	.LVL15:
 133              	.L13:
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 134              		.loc 1 2264 0
 135 0016 0124     		movs	r4, #1
ARM GAS  /tmp/ccE5IrFh.s 			page 44


 136              	.LVL16:
 137 0018 F9E7     		b	.L10
 138              		.cfi_endproc
 139              	.LFE36:
 141              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 142              		.align	1
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu softvfp
 148              	prvCopyDataToQueue:
 149              	.LFB33:
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 150              		.loc 1 2040 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              	.LVL17:
 155 0000 70B5     		push	{r4, r5, r6, lr}
 156              		.cfi_def_cfa_offset 16
 157              		.cfi_offset 4, -16
 158              		.cfi_offset 5, -12
 159              		.cfi_offset 6, -8
 160              		.cfi_offset 14, -4
 161 0002 0446     		mov	r4, r0
 162 0004 1646     		mov	r6, r2
 163              	.LVL18:
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 164              		.loc 1 2046 0
 165 0006 856B     		ldr	r5, [r0, #56]
 166              	.LVL19:
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 167              		.loc 1 2048 0
 168 0008 026C     		ldr	r2, [r0, #64]
 169              	.LVL20:
 170 000a 4AB9     		cbnz	r2, .L15
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 171              		.loc 1 2052 0
 172 000c 0368     		ldr	r3, [r0]
 173 000e 53BB     		cbnz	r3, .L19
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 174              		.loc 1 2055 0
 175 0010 4068     		ldr	r0, [r0, #4]
 176              	.LVL21:
 177 0012 FFF7FEFF 		bl	xTaskPriorityDisinherit
 178              	.LVL22:
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 179              		.loc 1 2056 0
 180 0016 0023     		movs	r3, #0
 181 0018 6360     		str	r3, [r4, #4]
 182              	.LVL23:
 183              	.L16:
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 184              		.loc 1 2112 0
 185 001a 0135     		adds	r5, r5, #1
 186              	.LVL24:
 187 001c A563     		str	r5, [r4, #56]
ARM GAS  /tmp/ccE5IrFh.s 			page 45


2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 188              		.loc 1 2115 0
 189 001e 70BD     		pop	{r4, r5, r6, pc}
 190              	.LVL25:
 191              	.L15:
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 192              		.loc 1 2065 0
 193 0020 6EB9     		cbnz	r6, .L17
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 194              		.loc 1 2067 0
 195 0022 8068     		ldr	r0, [r0, #8]
 196              	.LVL26:
 197 0024 FFF7FEFF 		bl	memcpy
 198              	.LVL27:
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 199              		.loc 1 2068 0
 200 0028 226C     		ldr	r2, [r4, #64]
 201 002a A368     		ldr	r3, [r4, #8]
 202 002c 1344     		add	r3, r3, r2
 203 002e A360     		str	r3, [r4, #8]
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 204              		.loc 1 2069 0
 205 0030 6268     		ldr	r2, [r4, #4]
 206 0032 9342     		cmp	r3, r2
 207 0034 19D3     		bcc	.L20
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 208              		.loc 1 2071 0
 209 0036 2368     		ldr	r3, [r4]
 210 0038 A360     		str	r3, [r4, #8]
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 211              		.loc 1 2041 0
 212 003a 0020     		movs	r0, #0
 213 003c EDE7     		b	.L16
 214              	.LVL28:
 215              	.L17:
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 216              		.loc 1 2080 0
 217 003e C068     		ldr	r0, [r0, #12]
 218              	.LVL29:
 219 0040 FFF7FEFF 		bl	memcpy
 220              	.LVL30:
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 221              		.loc 1 2081 0
 222 0044 236C     		ldr	r3, [r4, #64]
 223 0046 5B42     		negs	r3, r3
 224 0048 E268     		ldr	r2, [r4, #12]
 225 004a 1A44     		add	r2, r2, r3
 226 004c E260     		str	r2, [r4, #12]
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 227              		.loc 1 2082 0
 228 004e 2168     		ldr	r1, [r4]
 229 0050 8A42     		cmp	r2, r1
 230 0052 02D2     		bcs	.L18
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 231              		.loc 1 2084 0
 232 0054 6268     		ldr	r2, [r4, #4]
 233 0056 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccE5IrFh.s 			page 46


 234 0058 E360     		str	r3, [r4, #12]
 235              	.L18:
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 236              		.loc 1 2091 0
 237 005a 022E     		cmp	r6, #2
 238 005c 07D1     		bne	.L21
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 239              		.loc 1 2093 0
 240 005e 45B1     		cbz	r5, .L22
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 241              		.loc 1 2099 0
 242 0060 013D     		subs	r5, r5, #1
 243              	.LVL31:
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 244              		.loc 1 2041 0
 245 0062 0020     		movs	r0, #0
 246 0064 D9E7     		b	.L16
 247              	.LVL32:
 248              	.L19:
 249 0066 0020     		movs	r0, #0
 250              	.LVL33:
 251 0068 D7E7     		b	.L16
 252              	.LVL34:
 253              	.L20:
 254 006a 0020     		movs	r0, #0
 255 006c D5E7     		b	.L16
 256              	.L21:
 257 006e 0020     		movs	r0, #0
 258 0070 D3E7     		b	.L16
 259              	.L22:
 260 0072 0020     		movs	r0, #0
 261 0074 D1E7     		b	.L16
 262              		.cfi_endproc
 263              	.LFE33:
 265              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 266              		.align	1
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 270              		.fpu softvfp
 272              	prvCopyDataFromQueue:
 273              	.LFB34:
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 274              		.loc 1 2119 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              	.LVL35:
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 279              		.loc 1 2120 0
 280 0000 026C     		ldr	r2, [r0, #64]
 281 0002 72B1     		cbz	r2, .L28
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 282              		.loc 1 2119 0
 283 0004 10B5     		push	{r4, lr}
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 4, -8
ARM GAS  /tmp/ccE5IrFh.s 			page 47


 286              		.cfi_offset 14, -4
 287 0006 0346     		mov	r3, r0
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 288              		.loc 1 2122 0
 289 0008 C468     		ldr	r4, [r0, #12]
 290 000a 1444     		add	r4, r4, r2
 291 000c C460     		str	r4, [r0, #12]
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 292              		.loc 1 2123 0
 293 000e 4068     		ldr	r0, [r0, #4]
 294              	.LVL36:
 295 0010 8442     		cmp	r4, r0
 296 0012 01D3     		bcc	.L26
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 297              		.loc 1 2125 0
 298 0014 1868     		ldr	r0, [r3]
 299 0016 D860     		str	r0, [r3, #12]
 300              	.L26:
 301 0018 0846     		mov	r0, r1
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 302              		.loc 1 2131 0
 303 001a D968     		ldr	r1, [r3, #12]
 304              	.LVL37:
 305 001c FFF7FEFF 		bl	memcpy
 306              	.LVL38:
 307 0020 10BD     		pop	{r4, pc}
 308              	.LVL39:
 309              	.L28:
 310              		.cfi_def_cfa_offset 0
 311              		.cfi_restore 4
 312              		.cfi_restore 14
 313 0022 7047     		bx	lr
 314              		.cfi_endproc
 315              	.LFE34:
 317              		.section	.text.prvUnlockQueue,"ax",%progbits
 318              		.align	1
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 322              		.fpu softvfp
 324              	prvUnlockQueue:
 325              	.LFB35:
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 326              		.loc 1 2137 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              	.LVL40:
 331 0000 38B5     		push	{r3, r4, r5, lr}
 332              		.cfi_def_cfa_offset 16
 333              		.cfi_offset 3, -16
 334              		.cfi_offset 4, -12
 335              		.cfi_offset 5, -8
 336              		.cfi_offset 14, -4
 337 0002 0546     		mov	r5, r0
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 338              		.loc 1 2144 0
ARM GAS  /tmp/ccE5IrFh.s 			page 48


 339 0004 FFF7FEFF 		bl	vPortEnterCritical
 340              	.LVL41:
 341              	.LBB118:
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 342              		.loc 1 2146 0
 343 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 344 000c 64B2     		sxtb	r4, r4
 345              	.LVL42:
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 346              		.loc 1 2149 0
 347 000e 01E0     		b	.L32
 348              	.L34:
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 349              		.loc 1 2217 0
 350 0010 013C     		subs	r4, r4, #1
 351              	.LVL43:
 352 0012 64B2     		sxtb	r4, r4
 353              	.LVL44:
 354              	.L32:
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 355              		.loc 1 2149 0
 356 0014 002C     		cmp	r4, #0
 357 0016 0ADD     		ble	.L33
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 358              		.loc 1 2197 0
 359 0018 6B6A     		ldr	r3, [r5, #36]
 360 001a 43B1     		cbz	r3, .L33
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 361              		.loc 1 2199 0
 362 001c 05F12400 		add	r0, r5, #36
 363 0020 FFF7FEFF 		bl	xTaskRemoveFromEventList
 364              	.LVL45:
 365 0024 0028     		cmp	r0, #0
 366 0026 F3D0     		beq	.L34
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 367              		.loc 1 2203 0
 368 0028 FFF7FEFF 		bl	vTaskMissedYield
 369              	.LVL46:
 370 002c F0E7     		b	.L34
 371              	.L33:
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 372              		.loc 1 2220 0
 373 002e FF23     		movs	r3, #255
 374 0030 85F84530 		strb	r3, [r5, #69]
 375              	.LBE118:
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 376              		.loc 1 2222 0
 377 0034 FFF7FEFF 		bl	vPortExitCritical
 378              	.LVL47:
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 379              		.loc 1 2225 0
 380 0038 FFF7FEFF 		bl	vPortEnterCritical
 381              	.LVL48:
 382              	.LBB119:
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 383              		.loc 1 2227 0
 384 003c 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
ARM GAS  /tmp/ccE5IrFh.s 			page 49


 385              	.LVL49:
 386 0040 64B2     		sxtb	r4, r4
 387              	.LVL50:
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 388              		.loc 1 2229 0
 389 0042 01E0     		b	.L36
 390              	.L38:
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 391              		.loc 1 2242 0
 392 0044 013C     		subs	r4, r4, #1
 393              	.LVL51:
 394 0046 64B2     		sxtb	r4, r4
 395              	.LVL52:
 396              	.L36:
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 397              		.loc 1 2229 0
 398 0048 002C     		cmp	r4, #0
 399 004a 0ADD     		ble	.L37
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 400              		.loc 1 2231 0
 401 004c 2B69     		ldr	r3, [r5, #16]
 402 004e 43B1     		cbz	r3, .L37
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 403              		.loc 1 2233 0
 404 0050 05F11000 		add	r0, r5, #16
 405 0054 FFF7FEFF 		bl	xTaskRemoveFromEventList
 406              	.LVL53:
 407 0058 0028     		cmp	r0, #0
 408 005a F3D0     		beq	.L38
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 409              		.loc 1 2235 0
 410 005c FFF7FEFF 		bl	vTaskMissedYield
 411              	.LVL54:
 412 0060 F0E7     		b	.L38
 413              	.L37:
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 414              		.loc 1 2250 0
 415 0062 FF23     		movs	r3, #255
 416 0064 85F84430 		strb	r3, [r5, #68]
 417              	.LBE119:
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 418              		.loc 1 2252 0
 419 0068 FFF7FEFF 		bl	vPortExitCritical
 420              	.LVL55:
 421 006c 38BD     		pop	{r3, r4, r5, pc}
 422              		.cfi_endproc
 423              	.LFE35:
 425              		.section	.text.xQueueGenericReset,"ax",%progbits
 426              		.align	1
 427              		.global	xQueueGenericReset
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu softvfp
 433              	xQueueGenericReset:
 434              	.LFB4:
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
ARM GAS  /tmp/ccE5IrFh.s 			page 50


 435              		.loc 1 248 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              	.LVL56:
 440 0000 38B5     		push	{r3, r4, r5, lr}
 441              		.cfi_def_cfa_offset 16
 442              		.cfi_offset 3, -16
 443              		.cfi_offset 4, -12
 444              		.cfi_offset 5, -8
 445              		.cfi_offset 14, -4
 446              	.LVL57:
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 447              		.loc 1 251 0
 448 0002 30B3     		cbz	r0, .L47
 449 0004 0446     		mov	r4, r0
 450 0006 0D46     		mov	r5, r1
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 451              		.loc 1 253 0
 452 0008 FFF7FEFF 		bl	vPortEnterCritical
 453              	.LVL58:
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 454              		.loc 1 255 0
 455 000c 2168     		ldr	r1, [r4]
 456 000e E26B     		ldr	r2, [r4, #60]
 457 0010 236C     		ldr	r3, [r4, #64]
 458 0012 03FB0210 		mla	r0, r3, r2, r1
 459 0016 6060     		str	r0, [r4, #4]
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 460              		.loc 1 256 0
 461 0018 0020     		movs	r0, #0
 462 001a A063     		str	r0, [r4, #56]
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 463              		.loc 1 257 0
 464 001c A160     		str	r1, [r4, #8]
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 465              		.loc 1 258 0
 466 001e 013A     		subs	r2, r2, #1
 467 0020 02FB0313 		mla	r3, r2, r3, r1
 468 0024 E360     		str	r3, [r4, #12]
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 469              		.loc 1 259 0
 470 0026 FF23     		movs	r3, #255
 471 0028 84F84430 		strb	r3, [r4, #68]
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 472              		.loc 1 260 0
 473 002c 84F84530 		strb	r3, [r4, #69]
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 474              		.loc 1 262 0
 475 0030 C5B9     		cbnz	r5, .L44
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 476              		.loc 1 269 0
 477 0032 2369     		ldr	r3, [r4, #16]
 478 0034 F3B1     		cbz	r3, .L45
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 479              		.loc 1 271 0
 480 0036 04F11000 		add	r0, r4, #16
ARM GAS  /tmp/ccE5IrFh.s 			page 51


 481 003a FFF7FEFF 		bl	xTaskRemoveFromEventList
 482              	.LVL59:
 483 003e C8B1     		cbz	r0, .L45
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 484              		.loc 1 273 0
 485 0040 4FF08052 		mov	r2, #268435456
 486 0044 0D4B     		ldr	r3, .L48
 487 0046 1A60     		str	r2, [r3]
 488              		.syntax unified
 489              	@ 273 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 490 0048 BFF34F8F 		dsb
 491              	@ 0 "" 2
 492              	@ 273 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 493 004c BFF36F8F 		isb
 494              	@ 0 "" 2
 495              		.thumb
 496              		.syntax unified
 497 0050 10E0     		b	.L45
 498              	.LVL60:
 499              	.L47:
 500              	.LBB120:
 501              	.LBB121:
 502              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
ARM GAS  /tmp/ccE5IrFh.s 			page 52


  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
ARM GAS  /tmp/ccE5IrFh.s 			page 53


  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  /tmp/ccE5IrFh.s 			page 54


 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 503              		.loc 2 195 0
 504              		.syntax unified
 505              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 506 0052 4FF05003 			mov r3, #80												
 507 0056 83F31188 		msr basepri, r3											
 508 005a BFF36F8F 		isb														
 509 005e BFF34F8F 		dsb														
 510              	
 511              	@ 0 "" 2
 512              	.LVL61:
ARM GAS  /tmp/ccE5IrFh.s 			page 55


 513              		.thumb
 514              		.syntax unified
 515              	.L43:
 516 0062 FEE7     		b	.L43
 517              	.LVL62:
 518              	.L44:
 519              	.LBE121:
 520              	.LBE120:
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 521              		.loc 1 288 0
 522 0064 04F11000 		add	r0, r4, #16
 523 0068 FFF7FEFF 		bl	vListInitialise
 524              	.LVL63:
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 525              		.loc 1 289 0
 526 006c 04F12400 		add	r0, r4, #36
 527 0070 FFF7FEFF 		bl	vListInitialise
 528              	.LVL64:
 529              	.L45:
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 530              		.loc 1 292 0
 531 0074 FFF7FEFF 		bl	vPortExitCritical
 532              	.LVL65:
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 533              		.loc 1 297 0
 534 0078 0120     		movs	r0, #1
 535 007a 38BD     		pop	{r3, r4, r5, pc}
 536              	.LVL66:
 537              	.L49:
 538              		.align	2
 539              	.L48:
 540 007c 04ED00E0 		.word	-536810236
 541              		.cfi_endproc
 542              	.LFE4:
 544              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 545              		.align	1
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 549              		.fpu softvfp
 551              	prvInitialiseNewQueue:
 552              	.LFB7:
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 553              		.loc 1 409 0
 554              		.cfi_startproc
 555              		@ args = 4, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              	.LVL67:
 558 0000 38B5     		push	{r3, r4, r5, lr}
 559              		.cfi_def_cfa_offset 16
 560              		.cfi_offset 3, -16
 561              		.cfi_offset 4, -12
 562              		.cfi_offset 5, -8
 563              		.cfi_offset 14, -4
 564 0002 1D46     		mov	r5, r3
 565 0004 049C     		ldr	r4, [sp, #16]
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
ARM GAS  /tmp/ccE5IrFh.s 			page 56


 566              		.loc 1 414 0
 567 0006 0B46     		mov	r3, r1
 568              	.LVL68:
 569 0008 49B1     		cbz	r1, .L54
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 570              		.loc 1 425 0
 571 000a 2260     		str	r2, [r4]
 572              	.L52:
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 573              		.loc 1 430 0
 574 000c E063     		str	r0, [r4, #60]
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 575              		.loc 1 431 0
 576 000e 2364     		str	r3, [r4, #64]
 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 577              		.loc 1 432 0
 578 0010 0121     		movs	r1, #1
 579              	.LVL69:
 580 0012 2046     		mov	r0, r4
 581              	.LVL70:
 582 0014 FFF7FEFF 		bl	xQueueGenericReset
 583              	.LVL71:
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 584              		.loc 1 436 0
 585 0018 84F84C50 		strb	r5, [r4, #76]
 586 001c 38BD     		pop	{r3, r4, r5, pc}
 587              	.LVL72:
 588              	.L54:
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 589              		.loc 1 420 0
 590 001e 2460     		str	r4, [r4]
 591 0020 F4E7     		b	.L52
 592              		.cfi_endproc
 593              	.LFE7:
 595              		.section	.text.xQueueGenericCreateStatic,"ax",%progbits
 596              		.align	1
 597              		.global	xQueueGenericCreateStatic
 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 601              		.fpu softvfp
 603              	xQueueGenericCreateStatic:
 604              	.LFB5:
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 605              		.loc 1 303 0
 606              		.cfi_startproc
 607              		@ args = 4, pretend = 0, frame = 8
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              	.LVL73:
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 610              		.loc 1 306 0
 611 0000 40B9     		cbnz	r0, .L56
 612              	.LBB122:
 613              	.LBB123:
 614              		.loc 2 195 0
 615              		.syntax unified
 616              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
ARM GAS  /tmp/ccE5IrFh.s 			page 57


 617 0002 4FF05003 			mov r3, #80												
 618 0006 83F31188 		msr basepri, r3											
 619 000a BFF36F8F 		isb														
 620 000e BFF34F8F 		dsb														
 621              	
 622              	@ 0 "" 2
 623              	.LVL74:
 624              		.thumb
 625              		.syntax unified
 626              	.L57:
 627 0012 FEE7     		b	.L57
 628              	.LVL75:
 629              	.L56:
 630              	.LBE123:
 631              	.LBE122:
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 632              		.loc 1 303 0
 633 0014 10B5     		push	{r4, lr}
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 4, -8
 636              		.cfi_offset 14, -4
 637 0016 84B0     		sub	sp, sp, #16
 638              		.cfi_def_cfa_offset 24
 639 0018 0446     		mov	r4, r0
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 640              		.loc 1 310 0
 641 001a 63B1     		cbz	r3, .L73
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 642              		.loc 1 314 0
 643 001c A2B1     		cbz	r2, .L68
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 644              		.loc 1 314 0 is_stmt 0 discriminator 2
 645 001e A9B1     		cbz	r1, .L69
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 646              		.loc 1 314 0
 647 0020 0120     		movs	r0, #1
 648              	.LVL76:
 649              	.L60:
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 650              		.loc 1 314 0 discriminator 6
 651 0022 A8B9     		cbnz	r0, .L61
 652              	.LBB124:
 653              	.LBB125:
 654              		.loc 2 195 0 is_stmt 1
 655              		.syntax unified
 656              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 657 0024 4FF05003 			mov r3, #80												
 658 0028 83F31188 		msr basepri, r3											
 659 002c BFF36F8F 		isb														
 660 0030 BFF34F8F 		dsb														
 661              	
 662              	@ 0 "" 2
 663              	.LVL77:
 664              		.thumb
 665              		.syntax unified
 666              	.L62:
 667 0034 FEE7     		b	.L62
ARM GAS  /tmp/ccE5IrFh.s 			page 58


 668              	.LVL78:
 669              	.L73:
 670              	.LBE125:
 671              	.LBE124:
 672              	.LBB126:
 673              	.LBB127:
 674              		.syntax unified
 675              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 676 0036 4FF05003 			mov r3, #80												
 677 003a 83F31188 		msr basepri, r3											
 678 003e BFF36F8F 		isb														
 679 0042 BFF34F8F 		dsb														
 680              	
 681              	@ 0 "" 2
 682              	.LVL79:
 683              		.thumb
 684              		.syntax unified
 685              	.L59:
 686 0046 FEE7     		b	.L59
 687              	.LVL80:
 688              	.L68:
 689              	.LBE127:
 690              	.LBE126:
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 691              		.loc 1 314 0
 692 0048 0120     		movs	r0, #1
 693              	.LVL81:
 694 004a EAE7     		b	.L60
 695              	.LVL82:
 696              	.L69:
 697 004c 0020     		movs	r0, #0
 698              	.LVL83:
 699 004e E8E7     		b	.L60
 700              	.L61:
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 701              		.loc 1 315 0
 702 0050 0AB9     		cbnz	r2, .L63
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 703              		.loc 1 315 0 is_stmt 0 discriminator 2
 704 0052 01B1     		cbz	r1, .L63
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 705              		.loc 1 315 0
 706 0054 0020     		movs	r0, #0
 707              	.L63:
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 708              		.loc 1 315 0 discriminator 6
 709 0056 40B9     		cbnz	r0, .L64
 710              	.LBB128:
 711              	.LBB129:
 712              		.loc 2 195 0 is_stmt 1
 713              		.syntax unified
 714              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 715 0058 4FF05003 			mov r3, #80												
 716 005c 83F31188 		msr basepri, r3											
 717 0060 BFF36F8F 		isb														
 718 0064 BFF34F8F 		dsb														
 719              	
ARM GAS  /tmp/ccE5IrFh.s 			page 59


 720              	@ 0 "" 2
 721              	.LVL84:
 722              		.thumb
 723              		.syntax unified
 724              	.L65:
 725 0068 FEE7     		b	.L65
 726              	.LVL85:
 727              	.L64:
 728              	.LBE129:
 729              	.LBE128:
 730              	.LBB130:
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 731              		.loc 1 322 0
 732 006a 5020     		movs	r0, #80
 733 006c 0390     		str	r0, [sp, #12]
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 734              		.loc 1 323 0
 735 006e 0398     		ldr	r0, [sp, #12]
 736 0070 5028     		cmp	r0, #80
 737 0072 08D0     		beq	.L66
 738              	.LBB131:
 739              	.LBB132:
 740              		.loc 2 195 0
 741              		.syntax unified
 742              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 743 0074 4FF05003 			mov r3, #80												
 744 0078 83F31188 		msr basepri, r3											
 745 007c BFF36F8F 		isb														
 746 0080 BFF34F8F 		dsb														
 747              	
 748              	@ 0 "" 2
 749              	.LVL86:
 750              		.thumb
 751              		.syntax unified
 752              	.L67:
 753 0084 FEE7     		b	.L67
 754              	.LVL87:
 755              	.L66:
 756 0086 2046     		mov	r0, r4
 757 0088 1C46     		mov	r4, r3
 758              	.LVL88:
 759              	.LBE132:
 760              	.LBE131:
 761              	.LBE130:
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 762              		.loc 1 339 0
 763 008a 0123     		movs	r3, #1
 764              	.LVL89:
 765 008c 84F84630 		strb	r3, [r4, #70]
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 766              		.loc 1 343 0
 767 0090 0094     		str	r4, [sp]
 768 0092 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 769 0096 FFF7FEFF 		bl	prvInitialiseNewQueue
 770              	.LVL90:
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 771              		.loc 1 351 0
ARM GAS  /tmp/ccE5IrFh.s 			page 60


 772 009a 2046     		mov	r0, r4
 773 009c 04B0     		add	sp, sp, #16
 774              		.cfi_def_cfa_offset 8
 775              		@ sp needed
 776 009e 10BD     		pop	{r4, pc}
 777              		.cfi_endproc
 778              	.LFE5:
 780              		.section	.text.xQueueGenericCreate,"ax",%progbits
 781              		.align	1
 782              		.global	xQueueGenericCreate
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 786              		.fpu softvfp
 788              	xQueueGenericCreate:
 789              	.LFB6:
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 790              		.loc 1 359 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 0
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794              	.LVL91:
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 795              		.loc 1 364 0
 796 0000 40B9     		cbnz	r0, .L75
 797              	.LBB133:
 798              	.LBB134:
 799              		.loc 2 195 0
 800              		.syntax unified
 801              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 802 0002 4FF05003 			mov r3, #80												
 803 0006 83F31188 		msr basepri, r3											
 804 000a BFF36F8F 		isb														
 805 000e BFF34F8F 		dsb														
 806              	
 807              	@ 0 "" 2
 808              	.LVL92:
 809              		.thumb
 810              		.syntax unified
 811              	.L76:
 812 0012 FEE7     		b	.L76
 813              	.L75:
 814              	.LBE134:
 815              	.LBE133:
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 816              		.loc 1 359 0
 817 0014 F0B5     		push	{r4, r5, r6, r7, lr}
 818              		.cfi_def_cfa_offset 20
 819              		.cfi_offset 4, -20
 820              		.cfi_offset 5, -16
 821              		.cfi_offset 6, -12
 822              		.cfi_offset 7, -8
 823              		.cfi_offset 14, -4
 824 0016 83B0     		sub	sp, sp, #12
 825              		.cfi_def_cfa_offset 32
 826 0018 0646     		mov	r6, r0
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccE5IrFh.s 			page 61


 827              		.loc 1 366 0
 828 001a 11B1     		cbz	r1, .L79
 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 829              		.loc 1 375 0
 830 001c 01FB00F0 		mul	r0, r1, r0
 831              	.LVL93:
 832 0020 00E0     		b	.L77
 833              	.LVL94:
 834              	.L79:
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 835              		.loc 1 369 0
 836 0022 0020     		movs	r0, #0
 837              	.LVL95:
 838              	.L77:
 839 0024 1746     		mov	r7, r2
 840 0026 0C46     		mov	r4, r1
 841              	.LVL96:
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 842              		.loc 1 378 0
 843 0028 5030     		adds	r0, r0, #80
 844              	.LVL97:
 845 002a FFF7FEFF 		bl	pvPortMalloc
 846              	.LVL98:
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 847              		.loc 1 380 0
 848 002e 0546     		mov	r5, r0
 849 0030 50B1     		cbz	r0, .L78
 850              	.LVL99:
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 851              		.loc 1 391 0
 852 0032 0023     		movs	r3, #0
 853 0034 80F84630 		strb	r3, [r0, #70]
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 854              		.loc 1 395 0
 855 0038 0090     		str	r0, [sp]
 856 003a 3B46     		mov	r3, r7
 857 003c 00F15002 		add	r2, r0, #80
 858              	.LVL100:
 859 0040 2146     		mov	r1, r4
 860 0042 3046     		mov	r0, r6
 861              	.LVL101:
 862 0044 FFF7FEFF 		bl	prvInitialiseNewQueue
 863              	.LVL102:
 864              	.L78:
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 865              		.loc 1 403 0
 866 0048 2846     		mov	r0, r5
 867 004a 03B0     		add	sp, sp, #12
 868              		.cfi_def_cfa_offset 20
 869              		@ sp needed
 870 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 871              		.cfi_endproc
 872              	.LFE6:
 874              		.section	.text.xQueueGetMutexHolder,"ax",%progbits
 875              		.align	1
 876              		.global	xQueueGetMutexHolder
 877              		.syntax unified
ARM GAS  /tmp/ccE5IrFh.s 			page 62


 878              		.thumb
 879              		.thumb_func
 880              		.fpu softvfp
 882              	xQueueGetMutexHolder:
 883              	.LFB11:
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 884              		.loc 1 519 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888              	.LVL103:
 889 0000 10B5     		push	{r4, lr}
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 4, -8
 892              		.cfi_offset 14, -4
 893 0002 0446     		mov	r4, r0
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 894              		.loc 1 527 0
 895 0004 FFF7FEFF 		bl	vPortEnterCritical
 896              	.LVL104:
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 897              		.loc 1 529 0
 898 0008 2368     		ldr	r3, [r4]
 899 000a 23B9     		cbnz	r3, .L84
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 900              		.loc 1 531 0
 901 000c 6468     		ldr	r4, [r4, #4]
 902              	.LVL105:
 903              	.L83:
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 904              		.loc 1 538 0
 905 000e FFF7FEFF 		bl	vPortExitCritical
 906              	.LVL106:
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 907              		.loc 1 541 0
 908 0012 2046     		mov	r0, r4
 909 0014 10BD     		pop	{r4, pc}
 910              	.LVL107:
 911              	.L84:
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 912              		.loc 1 535 0
 913 0016 0024     		movs	r4, #0
 914              	.LVL108:
 915 0018 F9E7     		b	.L83
 916              		.cfi_endproc
 917              	.LFE11:
 919              		.section	.text.xQueueGetMutexHolderFromISR,"ax",%progbits
 920              		.align	1
 921              		.global	xQueueGetMutexHolderFromISR
 922              		.syntax unified
 923              		.thumb
 924              		.thumb_func
 925              		.fpu softvfp
 927              	xQueueGetMutexHolderFromISR:
 928              	.LFB12:
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 929              		.loc 1 549 0
ARM GAS  /tmp/ccE5IrFh.s 			page 63


 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 933              		@ link register save eliminated.
 934              	.LVL109:
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 935              		.loc 1 552 0
 936 0000 18B1     		cbz	r0, .L91
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 937              		.loc 1 557 0
 938 0002 0268     		ldr	r2, [r0]
 939 0004 52B9     		cbnz	r2, .L90
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 940              		.loc 1 559 0
 941 0006 4068     		ldr	r0, [r0, #4]
 942              	.LVL110:
 943 0008 7047     		bx	lr
 944              	.LVL111:
 945              	.L91:
 946              	.LBB135:
 947              	.LBB136:
 948              		.loc 2 195 0
 949              		.syntax unified
 950              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 951 000a 4FF05003 			mov r3, #80												
 952 000e 83F31188 		msr basepri, r3											
 953 0012 BFF36F8F 		isb														
 954 0016 BFF34F8F 		dsb														
 955              	
 956              	@ 0 "" 2
 957              	.LVL112:
 958              		.thumb
 959              		.syntax unified
 960              	.L88:
 961 001a FEE7     		b	.L88
 962              	.L90:
 963              	.LBE136:
 964              	.LBE135:
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 965              		.loc 1 563 0
 966 001c 0020     		movs	r0, #0
 967              	.LVL113:
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 968              		.loc 1 567 0
 969 001e 7047     		bx	lr
 970              		.cfi_endproc
 971              	.LFE12:
 973              		.section	.text.xQueueCreateCountingSemaphoreStatic,"ax",%progbits
 974              		.align	1
 975              		.global	xQueueCreateCountingSemaphoreStatic
 976              		.syntax unified
 977              		.thumb
 978              		.thumb_func
 979              		.fpu softvfp
 981              	xQueueCreateCountingSemaphoreStatic:
 982              	.LFB15:
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
ARM GAS  /tmp/ccE5IrFh.s 			page 64


 983              		.loc 1 672 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987              	.LVL114:
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 988              		.loc 1 675 0
 989 0000 40B9     		cbnz	r0, .L93
 990              	.LBB137:
 991              	.LBB138:
 992              		.loc 2 195 0
 993              		.syntax unified
 994              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 995 0002 4FF05003 			mov r3, #80												
 996 0006 83F31188 		msr basepri, r3											
 997 000a BFF36F8F 		isb														
 998 000e BFF34F8F 		dsb														
 999              	
 1000              	@ 0 "" 2
 1001              	.LVL115:
 1002              		.thumb
 1003              		.syntax unified
 1004              	.L94:
 1005 0012 FEE7     		b	.L94
 1006              	.L93:
 1007              	.LBE138:
 1008              	.LBE137:
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1009              		.loc 1 676 0
 1010 0014 8842     		cmp	r0, r1
 1011 0016 08D2     		bcs	.L95
 1012              	.LBB139:
 1013              	.LBB140:
 1014              		.loc 2 195 0
 1015              		.syntax unified
 1016              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1017 0018 4FF05003 			mov r3, #80												
 1018 001c 83F31188 		msr basepri, r3											
 1019 0020 BFF36F8F 		isb														
 1020 0024 BFF34F8F 		dsb														
 1021              	
 1022              	@ 0 "" 2
 1023              	.LVL116:
 1024              		.thumb
 1025              		.syntax unified
 1026              	.L96:
 1027 0028 FEE7     		b	.L96
 1028              	.L95:
 1029              	.LBE140:
 1030              	.LBE139:
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1031              		.loc 1 672 0
 1032 002a 10B5     		push	{r4, lr}
 1033              		.cfi_def_cfa_offset 8
 1034              		.cfi_offset 4, -8
 1035              		.cfi_offset 14, -4
 1036 002c 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccE5IrFh.s 			page 65


 1037              		.cfi_def_cfa_offset 16
 1038 002e 1346     		mov	r3, r2
 1039 0030 0C46     		mov	r4, r1
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1040              		.loc 1 678 0
 1041 0032 0222     		movs	r2, #2
 1042              	.LVL117:
 1043 0034 0092     		str	r2, [sp]
 1044 0036 0022     		movs	r2, #0
 1045 0038 1146     		mov	r1, r2
 1046              	.LVL118:
 1047 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 1048              	.LVL119:
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1049              		.loc 1 680 0
 1050 003e 0346     		mov	r3, r0
 1051 0040 00B1     		cbz	r0, .L92
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1052              		.loc 1 682 0
 1053 0042 8463     		str	r4, [r0, #56]
 1054              	.L92:
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1055              		.loc 1 692 0
 1056 0044 1846     		mov	r0, r3
 1057              	.LVL120:
 1058 0046 02B0     		add	sp, sp, #8
 1059              		.cfi_def_cfa_offset 8
 1060              		@ sp needed
 1061 0048 10BD     		pop	{r4, pc}
 1062              		.cfi_endproc
 1063              	.LFE15:
 1065              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 1066              		.align	1
 1067              		.global	xQueueCreateCountingSemaphore
 1068              		.syntax unified
 1069              		.thumb
 1070              		.thumb_func
 1071              		.fpu softvfp
 1073              	xQueueCreateCountingSemaphore:
 1074              	.LFB16:
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1075              		.loc 1 700 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 0
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079              	.LVL121:
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1080              		.loc 1 703 0
 1081 0000 40B9     		cbnz	r0, .L101
 1082              	.LBB141:
 1083              	.LBB142:
 1084              		.loc 2 195 0
 1085              		.syntax unified
 1086              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1087 0002 4FF05003 			mov r3, #80												
 1088 0006 83F31188 		msr basepri, r3											
 1089 000a BFF36F8F 		isb														
ARM GAS  /tmp/ccE5IrFh.s 			page 66


 1090 000e BFF34F8F 		dsb														
 1091              	
 1092              	@ 0 "" 2
 1093              	.LVL122:
 1094              		.thumb
 1095              		.syntax unified
 1096              	.L102:
 1097 0012 FEE7     		b	.L102
 1098              	.L101:
 1099              	.LBE142:
 1100              	.LBE141:
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1101              		.loc 1 704 0
 1102 0014 8842     		cmp	r0, r1
 1103 0016 08D2     		bcs	.L103
 1104              	.LBB143:
 1105              	.LBB144:
 1106              		.loc 2 195 0
 1107              		.syntax unified
 1108              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1109 0018 4FF05003 			mov r3, #80												
 1110 001c 83F31188 		msr basepri, r3											
 1111 0020 BFF36F8F 		isb														
 1112 0024 BFF34F8F 		dsb														
 1113              	
 1114              	@ 0 "" 2
 1115              	.LVL123:
 1116              		.thumb
 1117              		.syntax unified
 1118              	.L104:
 1119 0028 FEE7     		b	.L104
 1120              	.L103:
 1121              	.LBE144:
 1122              	.LBE143:
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1123              		.loc 1 700 0
 1124 002a 10B5     		push	{r4, lr}
 1125              		.cfi_def_cfa_offset 8
 1126              		.cfi_offset 4, -8
 1127              		.cfi_offset 14, -4
 1128 002c 0C46     		mov	r4, r1
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1129              		.loc 1 706 0
 1130 002e 0222     		movs	r2, #2
 1131 0030 0021     		movs	r1, #0
 1132              	.LVL124:
 1133 0032 FFF7FEFF 		bl	xQueueGenericCreate
 1134              	.LVL125:
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1135              		.loc 1 708 0
 1136 0036 0346     		mov	r3, r0
 1137 0038 00B1     		cbz	r0, .L100
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1138              		.loc 1 710 0
 1139 003a 8463     		str	r4, [r0, #56]
 1140              	.L100:
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccE5IrFh.s 			page 67


 1141              		.loc 1 720 0
 1142 003c 1846     		mov	r0, r3
 1143              	.LVL126:
 1144 003e 10BD     		pop	{r4, pc}
 1145              		.cfi_endproc
 1146              	.LFE16:
 1148              		.section	.text.xQueueGenericSend,"ax",%progbits
 1149              		.align	1
 1150              		.global	xQueueGenericSend
 1151              		.syntax unified
 1152              		.thumb
 1153              		.thumb_func
 1154              		.fpu softvfp
 1156              	xQueueGenericSend:
 1157              	.LFB17:
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 1158              		.loc 1 726 0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 16
 1161              		@ frame_needed = 0, uses_anonymous_args = 0
 1162              	.LVL127:
 1163 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1164              		.cfi_def_cfa_offset 20
 1165              		.cfi_offset 4, -20
 1166              		.cfi_offset 5, -16
 1167              		.cfi_offset 6, -12
 1168              		.cfi_offset 7, -8
 1169              		.cfi_offset 14, -4
 1170 0002 85B0     		sub	sp, sp, #20
 1171              		.cfi_def_cfa_offset 40
 1172 0004 0192     		str	r2, [sp, #4]
 1173              	.LVL128:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1174              		.loc 1 731 0
 1175 0006 60B1     		cbz	r0, .L138
 1176 0008 0446     		mov	r4, r0
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1177              		.loc 1 732 0
 1178 000a 99B1     		cbz	r1, .L139
 1179 000c 0125     		movs	r5, #1
 1180              	.LVL129:
 1181              	.L111:
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1182              		.loc 1 732 0 is_stmt 0 discriminator 6
 1183 000e BDB9     		cbnz	r5, .L112
 1184              	.LBB145:
 1185              	.LBB146:
 1186              		.loc 2 195 0 is_stmt 1
 1187              		.syntax unified
 1188              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1189 0010 4FF05003 			mov r3, #80												
 1190 0014 83F31188 		msr basepri, r3											
 1191 0018 BFF36F8F 		isb														
 1192 001c BFF34F8F 		dsb														
 1193              	
 1194              	@ 0 "" 2
 1195              	.LVL130:
ARM GAS  /tmp/ccE5IrFh.s 			page 68


 1196              		.thumb
 1197              		.syntax unified
 1198              	.L113:
 1199 0020 FEE7     		b	.L113
 1200              	.LVL131:
 1201              	.L138:
 1202              	.LBE146:
 1203              	.LBE145:
 1204              	.LBB147:
 1205              	.LBB148:
 1206              		.syntax unified
 1207              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1208 0022 4FF05003 			mov r3, #80												
 1209 0026 83F31188 		msr basepri, r3											
 1210 002a BFF36F8F 		isb														
 1211 002e BFF34F8F 		dsb														
 1212              	
 1213              	@ 0 "" 2
 1214              	.LVL132:
 1215              		.thumb
 1216              		.syntax unified
 1217              	.L110:
 1218 0032 FEE7     		b	.L110
 1219              	.LVL133:
 1220              	.L139:
 1221              	.LBE148:
 1222              	.LBE147:
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1223              		.loc 1 732 0 discriminator 2
 1224 0034 026C     		ldr	r2, [r0, #64]
 1225              	.LVL134:
 1226 0036 0AB9     		cbnz	r2, .L133
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1227              		.loc 1 732 0 is_stmt 0
 1228 0038 0125     		movs	r5, #1
 1229 003a E8E7     		b	.L111
 1230              	.L133:
 1231 003c 0025     		movs	r5, #0
 1232 003e E6E7     		b	.L111
 1233              	.L112:
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1234              		.loc 1 733 0 is_stmt 1
 1235 0040 022B     		cmp	r3, #2
 1236 0042 09D0     		beq	.L140
 1237              	.L114:
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1238              		.loc 1 733 0 is_stmt 0 discriminator 6
 1239 0044 6DB9     		cbnz	r5, .L115
 1240              	.LBB149:
 1241              	.LBB150:
 1242              		.loc 2 195 0 is_stmt 1
 1243              		.syntax unified
 1244              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1245 0046 4FF05003 			mov r3, #80												
 1246 004a 83F31188 		msr basepri, r3											
 1247 004e BFF36F8F 		isb														
 1248 0052 BFF34F8F 		dsb														
ARM GAS  /tmp/ccE5IrFh.s 			page 69


 1249              	
 1250              	@ 0 "" 2
 1251              	.LVL135:
 1252              		.thumb
 1253              		.syntax unified
 1254              	.L116:
 1255 0056 FEE7     		b	.L116
 1256              	.LVL136:
 1257              	.L140:
 1258              	.LBE150:
 1259              	.LBE149:
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1260              		.loc 1 733 0 discriminator 2
 1261 0058 E26B     		ldr	r2, [r4, #60]
 1262 005a 012A     		cmp	r2, #1
 1263 005c F2D0     		beq	.L114
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1264              		.loc 1 733 0 is_stmt 0
 1265 005e 0025     		movs	r5, #0
 1266 0060 F0E7     		b	.L114
 1267              	.L115:
 1268 0062 1E46     		mov	r6, r3
 1269 0064 0F46     		mov	r7, r1
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1270              		.loc 1 736 0 is_stmt 1
 1271 0066 FFF7FEFF 		bl	xTaskGetSchedulerState
 1272              	.LVL137:
 1273 006a 10B9     		cbnz	r0, .L117
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1274              		.loc 1 736 0 is_stmt 0 discriminator 2
 1275 006c 019B     		ldr	r3, [sp, #4]
 1276 006e 03B1     		cbz	r3, .L117
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1277              		.loc 1 736 0
 1278 0070 0025     		movs	r5, #0
 1279              	.L117:
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1280              		.loc 1 736 0 discriminator 6
 1281 0072 45B9     		cbnz	r5, .L136
 1282              	.LBB151:
 1283              	.LBB152:
 1284              		.loc 2 195 0 is_stmt 1
 1285              		.syntax unified
 1286              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1287 0074 4FF05003 			mov r3, #80												
 1288 0078 83F31188 		msr basepri, r3											
 1289 007c BFF36F8F 		isb														
 1290 0080 BFF34F8F 		dsb														
 1291              	
 1292              	@ 0 "" 2
 1293              	.LVL138:
 1294              		.thumb
 1295              		.syntax unified
 1296              	.L119:
 1297 0084 FEE7     		b	.L119
 1298              	.L136:
 1299              	.LBE152:
ARM GAS  /tmp/ccE5IrFh.s 			page 70


 1300              	.LBE151:
 1301 0086 0025     		movs	r5, #0
 1302 0088 2CE0     		b	.L118
 1303              	.LVL139:
 1304              	.L120:
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1305              		.loc 1 755 0
 1306 008a 3246     		mov	r2, r6
 1307 008c 3946     		mov	r1, r7
 1308 008e 2046     		mov	r0, r4
 1309 0090 FFF7FEFF 		bl	prvCopyDataToQueue
 1310              	.LVL140:
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1311              		.loc 1 810 0
 1312 0094 636A     		ldr	r3, [r4, #36]
 1313 0096 8BB1     		cbz	r3, .L122
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1314              		.loc 1 812 0
 1315 0098 04F12400 		add	r0, r4, #36
 1316              	.LVL141:
 1317 009c FFF7FEFF 		bl	xTaskRemoveFromEventList
 1318              	.LVL142:
 1319 00a0 38B1     		cbz	r0, .L123
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1320              		.loc 1 818 0
 1321 00a2 4FF08052 		mov	r2, #268435456
 1322 00a6 374B     		ldr	r3, .L142
 1323 00a8 1A60     		str	r2, [r3]
 1324              		.syntax unified
 1325              	@ 818 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1326 00aa BFF34F8F 		dsb
 1327              	@ 0 "" 2
 1328              	@ 818 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1329 00ae BFF36F8F 		isb
 1330              	@ 0 "" 2
 1331              		.thumb
 1332              		.syntax unified
 1333              	.L123:
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1334              		.loc 1 840 0
 1335 00b2 FFF7FEFF 		bl	vPortExitCritical
 1336              	.LVL143:
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1337              		.loc 1 841 0
 1338 00b6 0120     		movs	r0, #1
 1339              	.L108:
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1340              		.loc 1 920 0
 1341 00b8 05B0     		add	sp, sp, #20
 1342              		.cfi_remember_state
 1343              		.cfi_def_cfa_offset 20
 1344              		@ sp needed
 1345 00ba F0BD     		pop	{r4, r5, r6, r7, pc}
 1346              	.LVL144:
 1347              	.L122:
 1348              		.cfi_restore_state
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  /tmp/ccE5IrFh.s 			page 71


 1349              		.loc 1 825 0
 1350 00bc 0028     		cmp	r0, #0
 1351 00be F8D0     		beq	.L123
 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1352              		.loc 1 831 0
 1353 00c0 4FF08052 		mov	r2, #268435456
 1354 00c4 2F4B     		ldr	r3, .L142
 1355 00c6 1A60     		str	r2, [r3]
 1356              		.syntax unified
 1357              	@ 831 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1358 00c8 BFF34F8F 		dsb
 1359              	@ 0 "" 2
 1360              	@ 831 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1361 00cc BFF36F8F 		isb
 1362              	@ 0 "" 2
 1363              		.thumb
 1364              		.syntax unified
 1365 00d0 EFE7     		b	.L123
 1366              	.LVL145:
 1367              	.L141:
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1368              		.loc 1 849 0
 1369 00d2 FFF7FEFF 		bl	vPortExitCritical
 1370              	.LVL146:
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1371              		.loc 1 854 0
 1372 00d6 0020     		movs	r0, #0
 1373 00d8 EEE7     		b	.L108
 1374              	.L130:
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1375              		.loc 1 906 0
 1376 00da 2046     		mov	r0, r4
 1377 00dc FFF7FEFF 		bl	prvUnlockQueue
 1378              	.LVL147:
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1379              		.loc 1 907 0
 1380 00e0 FFF7FEFF 		bl	xTaskResumeAll
 1381              	.LVL148:
 1382              	.L118:
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1383              		.loc 1 746 0
 1384 00e4 FFF7FEFF 		bl	vPortEnterCritical
 1385              	.LVL149:
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1386              		.loc 1 752 0
 1387 00e8 A26B     		ldr	r2, [r4, #56]
 1388 00ea E36B     		ldr	r3, [r4, #60]
 1389 00ec 9A42     		cmp	r2, r3
 1390 00ee CCD3     		bcc	.L120
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1391              		.loc 1 752 0 is_stmt 0 discriminator 1
 1392 00f0 022E     		cmp	r6, #2
 1393 00f2 CAD0     		beq	.L120
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1394              		.loc 1 845 0 is_stmt 1
 1395 00f4 019B     		ldr	r3, [sp, #4]
 1396 00f6 002B     		cmp	r3, #0
ARM GAS  /tmp/ccE5IrFh.s 			page 72


 1397 00f8 EBD0     		beq	.L141
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1398              		.loc 1 856 0
 1399 00fa 1DB9     		cbnz	r5, .L126
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1400              		.loc 1 860 0
 1401 00fc 02A8     		add	r0, sp, #8
 1402 00fe FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1403              	.LVL150:
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1404              		.loc 1 861 0
 1405 0102 0125     		movs	r5, #1
 1406              	.LVL151:
 1407              	.L126:
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1408              		.loc 1 870 0
 1409 0104 FFF7FEFF 		bl	vPortExitCritical
 1410              	.LVL152:
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1411              		.loc 1 875 0
 1412 0108 FFF7FEFF 		bl	vTaskSuspendAll
 1413              	.LVL153:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1414              		.loc 1 876 0
 1415 010c FFF7FEFF 		bl	vPortEnterCritical
 1416              	.LVL154:
 1417 0110 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1418 0114 5BB2     		sxtb	r3, r3
 1419 0116 B3F1FF3F 		cmp	r3, #-1
 1420 011a 02D1     		bne	.L127
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1421              		.loc 1 876 0 is_stmt 0 discriminator 1
 1422 011c 0023     		movs	r3, #0
 1423 011e 84F84430 		strb	r3, [r4, #68]
 1424              	.L127:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1425              		.loc 1 876 0 discriminator 3
 1426 0122 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1427 0126 5BB2     		sxtb	r3, r3
 1428 0128 B3F1FF3F 		cmp	r3, #-1
 1429 012c 02D1     		bne	.L128
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1430              		.loc 1 876 0 discriminator 4
 1431 012e 0023     		movs	r3, #0
 1432 0130 84F84530 		strb	r3, [r4, #69]
 1433              	.L128:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1434              		.loc 1 876 0 discriminator 6
 1435 0134 FFF7FEFF 		bl	vPortExitCritical
 1436              	.LVL155:
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1437              		.loc 1 879 0 is_stmt 1 discriminator 6
 1438 0138 01A9     		add	r1, sp, #4
 1439 013a 02A8     		add	r0, sp, #8
 1440 013c FFF7FEFF 		bl	xTaskCheckForTimeOut
 1441              	.LVL156:
 1442 0140 C8B9     		cbnz	r0, .L129
ARM GAS  /tmp/ccE5IrFh.s 			page 73


 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1443              		.loc 1 881 0
 1444 0142 2046     		mov	r0, r4
 1445 0144 FFF7FEFF 		bl	prvIsQueueFull
 1446              	.LVL157:
 1447 0148 0028     		cmp	r0, #0
 1448 014a C6D0     		beq	.L130
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1449              		.loc 1 884 0
 1450 014c 0199     		ldr	r1, [sp, #4]
 1451 014e 04F11000 		add	r0, r4, #16
 1452 0152 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1453              	.LVL158:
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1454              		.loc 1 891 0
 1455 0156 2046     		mov	r0, r4
 1456 0158 FFF7FEFF 		bl	prvUnlockQueue
 1457              	.LVL159:
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1458              		.loc 1 898 0
 1459 015c FFF7FEFF 		bl	xTaskResumeAll
 1460              	.LVL160:
 1461 0160 0028     		cmp	r0, #0
 1462 0162 BFD1     		bne	.L118
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1463              		.loc 1 900 0
 1464 0164 4FF08052 		mov	r2, #268435456
 1465 0168 064B     		ldr	r3, .L142
 1466 016a 1A60     		str	r2, [r3]
 1467              		.syntax unified
 1468              	@ 900 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1469 016c BFF34F8F 		dsb
 1470              	@ 0 "" 2
 1471              	@ 900 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1472 0170 BFF36F8F 		isb
 1473              	@ 0 "" 2
 1474              		.thumb
 1475              		.syntax unified
 1476 0174 B6E7     		b	.L118
 1477              	.L129:
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1478              		.loc 1 913 0
 1479 0176 2046     		mov	r0, r4
 1480 0178 FFF7FEFF 		bl	prvUnlockQueue
 1481              	.LVL161:
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1482              		.loc 1 914 0
 1483 017c FFF7FEFF 		bl	xTaskResumeAll
 1484              	.LVL162:
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1485              		.loc 1 917 0
 1486 0180 0020     		movs	r0, #0
 1487 0182 99E7     		b	.L108
 1488              	.L143:
 1489              		.align	2
 1490              	.L142:
 1491 0184 04ED00E0 		.word	-536810236
ARM GAS  /tmp/ccE5IrFh.s 			page 74


 1492              		.cfi_endproc
 1493              	.LFE17:
 1495              		.section	.text.prvInitialiseMutex,"ax",%progbits
 1496              		.align	1
 1497              		.syntax unified
 1498              		.thumb
 1499              		.thumb_func
 1500              		.fpu softvfp
 1502              	prvInitialiseMutex:
 1503              	.LFB8:
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1504              		.loc 1 453 0
 1505              		.cfi_startproc
 1506              		@ args = 0, pretend = 0, frame = 0
 1507              		@ frame_needed = 0, uses_anonymous_args = 0
 1508              	.LVL163:
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1509              		.loc 1 454 0
 1510 0000 48B1     		cbz	r0, .L147
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1511              		.loc 1 453 0
 1512 0002 08B5     		push	{r3, lr}
 1513              		.cfi_def_cfa_offset 8
 1514              		.cfi_offset 3, -8
 1515              		.cfi_offset 14, -4
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1516              		.loc 1 460 0
 1517 0004 0021     		movs	r1, #0
 1518 0006 4160     		str	r1, [r0, #4]
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1519              		.loc 1 461 0
 1520 0008 0160     		str	r1, [r0]
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1521              		.loc 1 464 0
 1522 000a C160     		str	r1, [r0, #12]
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1523              		.loc 1 469 0
 1524 000c 0B46     		mov	r3, r1
 1525 000e 0A46     		mov	r2, r1
 1526 0010 FFF7FEFF 		bl	xQueueGenericSend
 1527              	.LVL164:
 1528 0014 08BD     		pop	{r3, pc}
 1529              	.LVL165:
 1530              	.L147:
 1531              		.cfi_def_cfa_offset 0
 1532              		.cfi_restore 3
 1533              		.cfi_restore 14
 1534 0016 7047     		bx	lr
 1535              		.cfi_endproc
 1536              	.LFE8:
 1538              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1539              		.align	1
 1540              		.global	xQueueCreateMutex
 1541              		.syntax unified
 1542              		.thumb
 1543              		.thumb_func
 1544              		.fpu softvfp
ARM GAS  /tmp/ccE5IrFh.s 			page 75


 1546              	xQueueCreateMutex:
 1547              	.LFB9:
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1548              		.loc 1 483 0
 1549              		.cfi_startproc
 1550              		@ args = 0, pretend = 0, frame = 0
 1551              		@ frame_needed = 0, uses_anonymous_args = 0
 1552              	.LVL166:
 1553 0000 10B5     		push	{r4, lr}
 1554              		.cfi_def_cfa_offset 8
 1555              		.cfi_offset 4, -8
 1556              		.cfi_offset 14, -4
 1557              	.LVL167:
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1558              		.loc 1 487 0
 1559 0002 0246     		mov	r2, r0
 1560 0004 0021     		movs	r1, #0
 1561 0006 0120     		movs	r0, #1
 1562              	.LVL168:
 1563 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1564              	.LVL169:
 1565 000c 0446     		mov	r4, r0
 1566              	.LVL170:
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1567              		.loc 1 488 0
 1568 000e FFF7FEFF 		bl	prvInitialiseMutex
 1569              	.LVL171:
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1570              		.loc 1 491 0
 1571 0012 2046     		mov	r0, r4
 1572 0014 10BD     		pop	{r4, pc}
 1573              		.cfi_endproc
 1574              	.LFE9:
 1576              		.section	.text.xQueueCreateMutexStatic,"ax",%progbits
 1577              		.align	1
 1578              		.global	xQueueCreateMutexStatic
 1579              		.syntax unified
 1580              		.thumb
 1581              		.thumb_func
 1582              		.fpu softvfp
 1584              	xQueueCreateMutexStatic:
 1585              	.LFB10:
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1586              		.loc 1 499 0
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 0
 1589              		@ frame_needed = 0, uses_anonymous_args = 0
 1590              	.LVL172:
 1591 0000 10B5     		push	{r4, lr}
 1592              		.cfi_def_cfa_offset 8
 1593              		.cfi_offset 4, -8
 1594              		.cfi_offset 14, -4
 1595 0002 82B0     		sub	sp, sp, #8
 1596              		.cfi_def_cfa_offset 16
 1597              	.LVL173:
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1598              		.loc 1 507 0
ARM GAS  /tmp/ccE5IrFh.s 			page 76


 1599 0004 0090     		str	r0, [sp]
 1600 0006 0B46     		mov	r3, r1
 1601 0008 0022     		movs	r2, #0
 1602 000a 1146     		mov	r1, r2
 1603              	.LVL174:
 1604 000c 0120     		movs	r0, #1
 1605              	.LVL175:
 1606 000e FFF7FEFF 		bl	xQueueGenericCreateStatic
 1607              	.LVL176:
 1608 0012 0446     		mov	r4, r0
 1609              	.LVL177:
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1610              		.loc 1 508 0
 1611 0014 FFF7FEFF 		bl	prvInitialiseMutex
 1612              	.LVL178:
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1613              		.loc 1 511 0
 1614 0018 2046     		mov	r0, r4
 1615 001a 02B0     		add	sp, sp, #8
 1616              		.cfi_def_cfa_offset 8
 1617              		@ sp needed
 1618 001c 10BD     		pop	{r4, pc}
 1619              		.cfi_endproc
 1620              	.LFE10:
 1622              		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 1623              		.align	1
 1624              		.global	xQueueGiveMutexRecursive
 1625              		.syntax unified
 1626              		.thumb
 1627              		.thumb_func
 1628              		.fpu softvfp
 1630              	xQueueGiveMutexRecursive:
 1631              	.LFB13:
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 1632              		.loc 1 575 0
 1633              		.cfi_startproc
 1634              		@ args = 0, pretend = 0, frame = 0
 1635              		@ frame_needed = 0, uses_anonymous_args = 0
 1636              	.LVL179:
 1637 0000 38B5     		push	{r3, r4, r5, lr}
 1638              		.cfi_def_cfa_offset 16
 1639              		.cfi_offset 3, -16
 1640              		.cfi_offset 4, -12
 1641              		.cfi_offset 5, -8
 1642              		.cfi_offset 14, -4
 1643              	.LVL180:
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1644              		.loc 1 579 0
 1645 0002 38B1     		cbz	r0, .L161
 1646 0004 0446     		mov	r4, r0
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1647              		.loc 1 587 0
 1648 0006 4568     		ldr	r5, [r0, #4]
 1649 0008 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1650              	.LVL181:
 1651 000c 8542     		cmp	r5, r0
 1652 000e 0AD0     		beq	.L162
ARM GAS  /tmp/ccE5IrFh.s 			page 77


 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1653              		.loc 1 616 0
 1654 0010 0020     		movs	r0, #0
 1655 0012 38BD     		pop	{r3, r4, r5, pc}
 1656              	.LVL182:
 1657              	.L161:
 1658              	.LBB153:
 1659              	.LBB154:
 1660              		.loc 2 195 0
 1661              		.syntax unified
 1662              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1663 0014 4FF05003 			mov r3, #80												
 1664 0018 83F31188 		msr basepri, r3											
 1665 001c BFF36F8F 		isb														
 1666 0020 BFF34F8F 		dsb														
 1667              	
 1668              	@ 0 "" 2
 1669              	.LVL183:
 1670              		.thumb
 1671              		.syntax unified
 1672              	.L156:
 1673 0024 FEE7     		b	.L156
 1674              	.LVL184:
 1675              	.L162:
 1676              	.LBE154:
 1677              	.LBE153:
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1678              		.loc 1 596 0
 1679 0026 E368     		ldr	r3, [r4, #12]
 1680 0028 013B     		subs	r3, r3, #1
 1681 002a E360     		str	r3, [r4, #12]
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1682              		.loc 1 599 0
 1683 002c 0BB1     		cbz	r3, .L163
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1684              		.loc 1 610 0
 1685 002e 0120     		movs	r0, #1
 1686              	.LVL185:
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1687              		.loc 1 622 0
 1688 0030 38BD     		pop	{r3, r4, r5, pc}
 1689              	.LVL186:
 1690              	.L163:
 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1691              		.loc 1 603 0
 1692 0032 1A46     		mov	r2, r3
 1693 0034 1946     		mov	r1, r3
 1694 0036 2046     		mov	r0, r4
 1695 0038 FFF7FEFF 		bl	xQueueGenericSend
 1696              	.LVL187:
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1697              		.loc 1 610 0
 1698 003c 0120     		movs	r0, #1
 1699 003e 38BD     		pop	{r3, r4, r5, pc}
 1700              		.cfi_endproc
 1701              	.LFE13:
 1703              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
ARM GAS  /tmp/ccE5IrFh.s 			page 78


 1704              		.align	1
 1705              		.global	xQueueGenericSendFromISR
 1706              		.syntax unified
 1707              		.thumb
 1708              		.thumb_func
 1709              		.fpu softvfp
 1711              	xQueueGenericSendFromISR:
 1712              	.LFB18:
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1713              		.loc 1 924 0
 1714              		.cfi_startproc
 1715              		@ args = 0, pretend = 0, frame = 0
 1716              		@ frame_needed = 0, uses_anonymous_args = 0
 1717              	.LVL188:
 1718 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1719              		.cfi_def_cfa_offset 32
 1720              		.cfi_offset 3, -32
 1721              		.cfi_offset 4, -28
 1722              		.cfi_offset 5, -24
 1723              		.cfi_offset 6, -20
 1724              		.cfi_offset 7, -16
 1725              		.cfi_offset 8, -12
 1726              		.cfi_offset 9, -8
 1727              		.cfi_offset 14, -4
 1728              	.LVL189:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1729              		.loc 1 929 0
 1730 0004 60B1     		cbz	r0, .L184
 1731 0006 0446     		mov	r4, r0
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1732              		.loc 1 930 0
 1733 0008 99B1     		cbz	r1, .L185
 1734 000a 0120     		movs	r0, #1
 1735              	.LVL190:
 1736              	.L167:
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1737              		.loc 1 930 0 is_stmt 0 discriminator 6
 1738 000c B8B9     		cbnz	r0, .L168
 1739              	.LBB155:
 1740              	.LBB156:
 1741              		.loc 2 195 0 is_stmt 1
 1742              		.syntax unified
 1743              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1744 000e 4FF05003 			mov r3, #80												
 1745 0012 83F31188 		msr basepri, r3											
 1746 0016 BFF36F8F 		isb														
 1747 001a BFF34F8F 		dsb														
 1748              	
 1749              	@ 0 "" 2
 1750              	.LVL191:
 1751              		.thumb
 1752              		.syntax unified
 1753              	.L169:
 1754 001e FEE7     		b	.L169
 1755              	.LVL192:
 1756              	.L184:
 1757              	.LBE156:
ARM GAS  /tmp/ccE5IrFh.s 			page 79


 1758              	.LBE155:
 1759              	.LBB157:
 1760              	.LBB158:
 1761              		.syntax unified
 1762              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1763 0020 4FF05003 			mov r3, #80												
 1764 0024 83F31188 		msr basepri, r3											
 1765 0028 BFF36F8F 		isb														
 1766 002c BFF34F8F 		dsb														
 1767              	
 1768              	@ 0 "" 2
 1769              	.LVL193:
 1770              		.thumb
 1771              		.syntax unified
 1772              	.L166:
 1773 0030 FEE7     		b	.L166
 1774              	.LVL194:
 1775              	.L185:
 1776              	.LBE158:
 1777              	.LBE157:
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1778              		.loc 1 930 0 discriminator 2
 1779 0032 006C     		ldr	r0, [r0, #64]
 1780              	.LVL195:
 1781 0034 08B9     		cbnz	r0, .L177
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1782              		.loc 1 930 0 is_stmt 0
 1783 0036 0120     		movs	r0, #1
 1784 0038 E8E7     		b	.L167
 1785              	.L177:
 1786 003a 0020     		movs	r0, #0
 1787 003c E6E7     		b	.L167
 1788              	.L168:
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1789              		.loc 1 931 0 is_stmt 1
 1790 003e 022B     		cmp	r3, #2
 1791 0040 09D0     		beq	.L186
 1792              	.L170:
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1793              		.loc 1 931 0 is_stmt 0 discriminator 6
 1794 0042 68B9     		cbnz	r0, .L171
 1795              	.LBB159:
 1796              	.LBB160:
 1797              		.loc 2 195 0 is_stmt 1
 1798              		.syntax unified
 1799              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1800 0044 4FF05003 			mov r3, #80												
 1801 0048 83F31188 		msr basepri, r3											
 1802 004c BFF36F8F 		isb														
 1803 0050 BFF34F8F 		dsb														
 1804              	
 1805              	@ 0 "" 2
 1806              	.LVL196:
 1807              		.thumb
 1808              		.syntax unified
 1809              	.L172:
 1810 0054 FEE7     		b	.L172
ARM GAS  /tmp/ccE5IrFh.s 			page 80


 1811              	.LVL197:
 1812              	.L186:
 1813              	.LBE160:
 1814              	.LBE159:
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1815              		.loc 1 931 0 discriminator 2
 1816 0056 E56B     		ldr	r5, [r4, #60]
 1817 0058 012D     		cmp	r5, #1
 1818 005a F2D0     		beq	.L170
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1819              		.loc 1 931 0 is_stmt 0
 1820 005c 0020     		movs	r0, #0
 1821 005e F0E7     		b	.L170
 1822              	.L171:
 1823 0060 1F46     		mov	r7, r3
 1824 0062 9046     		mov	r8, r2
 1825 0064 8946     		mov	r9, r1
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1826              		.loc 1 947 0 is_stmt 1
 1827 0066 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1828              	.LVL198:
 1829              	.LBB161:
 1830              	.LBB162:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1831              		.loc 2 211 0
 1832              		.syntax unified
 1833              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1834 006a EFF31186 			mrs r6, basepri											
 1835 006e 4FF05003 		mov r3, #80												
 1836 0072 83F31188 		msr basepri, r3											
 1837 0076 BFF36F8F 		isb														
 1838 007a BFF34F8F 		dsb														
 1839              	
 1840              	@ 0 "" 2
 1841              		.thumb
 1842              		.syntax unified
 1843              	.LBE162:
 1844              	.LBE161:
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1845              		.loc 1 956 0
 1846 007e A26B     		ldr	r2, [r4, #56]
 1847 0080 E36B     		ldr	r3, [r4, #60]
ARM GAS  /tmp/ccE5IrFh.s 			page 81


 1848 0082 9A42     		cmp	r2, r3
 1849 0084 01D3     		bcc	.L173
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1850              		.loc 1 956 0 is_stmt 0 discriminator 1
 1851 0086 022F     		cmp	r7, #2
 1852 0088 21D1     		bne	.L179
 1853              	.L173:
 1854              	.LBB163:
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1855              		.loc 1 958 0 is_stmt 1
 1856 008a 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 1857 008e 6DB2     		sxtb	r5, r5
 1858              	.LVL199:
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1859              		.loc 1 967 0
 1860 0090 3A46     		mov	r2, r7
 1861 0092 4946     		mov	r1, r9
 1862 0094 2046     		mov	r0, r4
 1863 0096 FFF7FEFF 		bl	prvCopyDataToQueue
 1864              	.LVL200:
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1865              		.loc 1 971 0
 1866 009a B5F1FF3F 		cmp	r5, #-1
 1867 009e 10D1     		bne	.L175
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1868              		.loc 1 1026 0
 1869 00a0 636A     		ldr	r3, [r4, #36]
 1870 00a2 B3B1     		cbz	r3, .L180
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1871              		.loc 1 1028 0
 1872 00a4 04F12400 		add	r0, r4, #36
 1873 00a8 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1874              	.LVL201:
 1875 00ac 98B1     		cbz	r0, .L181
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1876              		.loc 1 1032 0
 1877 00ae B8F1000F 		cmp	r8, #0
 1878 00b2 12D0     		beq	.L182
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1879              		.loc 1 1034 0
 1880 00b4 0120     		movs	r0, #1
 1881 00b6 C8F80000 		str	r0, [r8]
 1882              	.LVL202:
 1883              	.L174:
 1884              	.LBE163:
 1885              	.LBB164:
 1886              	.LBB165:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
ARM GAS  /tmp/ccE5IrFh.s 			page 82


 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1887              		.loc 2 229 0
 1888              		.syntax unified
 1889              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1890 00ba 86F31188 			msr basepri, r6	
 1891              	@ 0 "" 2
 1892              	.LVL203:
 1893              		.thumb
 1894              		.syntax unified
 1895              	.LBE165:
 1896              	.LBE164:
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1897              		.loc 1 1071 0
 1898 00be BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1899              	.LVL204:
 1900              	.L175:
 1901              	.LBB166:
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1902              		.loc 1 1057 0
 1903 00c2 6B1C     		adds	r3, r5, #1
 1904 00c4 5BB2     		sxtb	r3, r3
 1905 00c6 84F84530 		strb	r3, [r4, #69]
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1906              		.loc 1 1060 0
 1907 00ca 0120     		movs	r0, #1
 1908 00cc F5E7     		b	.L174
 1909              	.LVL205:
 1910              	.L179:
 1911              	.LBE166:
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1912              		.loc 1 1065 0
 1913 00ce 0020     		movs	r0, #0
 1914 00d0 F3E7     		b	.L174
 1915              	.LVL206:
 1916              	.L180:
 1917              	.LBB167:
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1918              		.loc 1 1060 0
 1919 00d2 0120     		movs	r0, #1
 1920 00d4 F1E7     		b	.L174
 1921              	.L181:
 1922 00d6 0120     		movs	r0, #1
 1923 00d8 EFE7     		b	.L174
 1924              	.L182:
 1925 00da 0120     		movs	r0, #1
 1926 00dc EDE7     		b	.L174
 1927              	.LBE167:
 1928              		.cfi_endproc
 1929              	.LFE18:
 1931              		.section	.text.xQueueGiveFromISR,"ax",%progbits
ARM GAS  /tmp/ccE5IrFh.s 			page 83


 1932              		.align	1
 1933              		.global	xQueueGiveFromISR
 1934              		.syntax unified
 1935              		.thumb
 1936              		.thumb_func
 1937              		.fpu softvfp
 1939              	xQueueGiveFromISR:
 1940              	.LFB19:
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1941              		.loc 1 1075 0
 1942              		.cfi_startproc
 1943              		@ args = 0, pretend = 0, frame = 0
 1944              		@ frame_needed = 0, uses_anonymous_args = 0
 1945              	.LVL207:
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1946              		.loc 1 1086 0
 1947 0000 60B1     		cbz	r0, .L205
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1948              		.loc 1 1075 0
 1949 0002 70B5     		push	{r4, r5, r6, lr}
 1950              		.cfi_def_cfa_offset 16
 1951              		.cfi_offset 4, -16
 1952              		.cfi_offset 5, -12
 1953              		.cfi_offset 6, -8
 1954              		.cfi_offset 14, -4
 1955 0004 0446     		mov	r4, r0
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1956              		.loc 1 1090 0
 1957 0006 036C     		ldr	r3, [r0, #64]
 1958 0008 8BB1     		cbz	r3, .L190
 1959              	.LBB168:
 1960              	.LBB169:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1961              		.loc 2 195 0
 1962              		.syntax unified
 1963              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1964 000a 4FF05003 			mov r3, #80												
 1965 000e 83F31188 		msr basepri, r3											
 1966 0012 BFF36F8F 		isb														
 1967 0016 BFF34F8F 		dsb														
 1968              	
 1969              	@ 0 "" 2
 1970              	.LVL208:
 1971              		.thumb
 1972              		.syntax unified
 1973              	.L191:
 1974 001a FEE7     		b	.L191
 1975              	.L205:
 1976              		.cfi_def_cfa_offset 0
 1977              		.cfi_restore 4
 1978              		.cfi_restore 5
 1979              		.cfi_restore 6
 1980              		.cfi_restore 14
 1981              	.LBE169:
 1982              	.LBE168:
 1983              	.LBB170:
 1984              	.LBB171:
ARM GAS  /tmp/ccE5IrFh.s 			page 84


 1985              		.syntax unified
 1986              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1987 001c 4FF05003 			mov r3, #80												
 1988 0020 83F31188 		msr basepri, r3											
 1989 0024 BFF36F8F 		isb														
 1990 0028 BFF34F8F 		dsb														
 1991              	
 1992              	@ 0 "" 2
 1993              	.LVL209:
 1994              		.thumb
 1995              		.syntax unified
 1996              	.L189:
 1997 002c FEE7     		b	.L189
 1998              	.L190:
 1999              		.cfi_def_cfa_offset 16
 2000              		.cfi_offset 4, -16
 2001              		.cfi_offset 5, -12
 2002              		.cfi_offset 6, -8
 2003              		.cfi_offset 14, -4
 2004              	.LBE171:
 2005              	.LBE170:
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2006              		.loc 1 1095 0
 2007 002e 0368     		ldr	r3, [r0]
 2008 0030 53B1     		cbz	r3, .L206
 2009 0032 0123     		movs	r3, #1
 2010              	.L192:
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2011              		.loc 1 1095 0 is_stmt 0 discriminator 6
 2012 0034 73B9     		cbnz	r3, .L193
 2013              	.LBB172:
 2014              	.LBB173:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2015              		.loc 2 195 0 is_stmt 1
 2016              		.syntax unified
 2017              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2018 0036 4FF05003 			mov r3, #80												
 2019 003a 83F31188 		msr basepri, r3											
 2020 003e BFF36F8F 		isb														
 2021 0042 BFF34F8F 		dsb														
 2022              	
 2023              	@ 0 "" 2
 2024              	.LVL210:
 2025              		.thumb
 2026              		.syntax unified
 2027              	.L194:
 2028 0046 FEE7     		b	.L194
 2029              	.L206:
 2030              	.LBE173:
 2031              	.LBE172:
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2032              		.loc 1 1095 0 discriminator 2
 2033 0048 4368     		ldr	r3, [r0, #4]
 2034 004a 0BB9     		cbnz	r3, .L198
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2035              		.loc 1 1095 0 is_stmt 0
 2036 004c 0123     		movs	r3, #1
ARM GAS  /tmp/ccE5IrFh.s 			page 85


 2037 004e F1E7     		b	.L192
 2038              	.L198:
 2039 0050 0023     		movs	r3, #0
 2040 0052 EFE7     		b	.L192
 2041              	.L193:
 2042 0054 0E46     		mov	r6, r1
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2043              		.loc 1 1111 0 is_stmt 1
 2044 0056 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2045              	.LVL211:
 2046              	.LBB174:
 2047              	.LBB175:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2048              		.loc 2 211 0
 2049              		.syntax unified
 2050              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2051 005a EFF31185 			mrs r5, basepri											
 2052 005e 4FF05003 		mov r3, #80												
 2053 0062 83F31188 		msr basepri, r3											
 2054 0066 BFF36F8F 		isb														
 2055 006a BFF34F8F 		dsb														
 2056              	
 2057              	@ 0 "" 2
 2058              		.thumb
 2059              		.syntax unified
 2060              	.LBE175:
 2061              	.LBE174:
 2062              	.LBB176:
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2063              		.loc 1 1115 0
 2064 006e A26B     		ldr	r2, [r4, #56]
 2065              	.LVL212:
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2066              		.loc 1 1120 0
 2067 0070 E36B     		ldr	r3, [r4, #60]
 2068 0072 9A42     		cmp	r2, r3
 2069 0074 1AD2     		bcs	.L199
 2070              	.LBB177:
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2071              		.loc 1 1122 0
 2072 0076 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2073 007a 5BB2     		sxtb	r3, r3
 2074              	.LVL213:
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2075              		.loc 1 1132 0
 2076 007c 0132     		adds	r2, r2, #1
 2077              	.LVL214:
 2078 007e A263     		str	r2, [r4, #56]
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2079              		.loc 1 1136 0
 2080 0080 B3F1FF3F 		cmp	r3, #-1
 2081 0084 0CD1     		bne	.L196
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2082              		.loc 1 1191 0
 2083 0086 636A     		ldr	r3, [r4, #36]
 2084              	.LVL215:
 2085 0088 93B1     		cbz	r3, .L200
ARM GAS  /tmp/ccE5IrFh.s 			page 86


1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2086              		.loc 1 1193 0
 2087 008a 04F12400 		add	r0, r4, #36
 2088 008e FFF7FEFF 		bl	xTaskRemoveFromEventList
 2089              	.LVL216:
 2090 0092 78B1     		cbz	r0, .L201
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 2091              		.loc 1 1197 0
 2092 0094 86B1     		cbz	r6, .L202
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 2093              		.loc 1 1199 0
 2094 0096 0120     		movs	r0, #1
 2095 0098 3060     		str	r0, [r6]
 2096              	.L195:
 2097              	.LVL217:
 2098              	.LBE177:
 2099              	.LBE176:
 2100              	.LBB180:
 2101              	.LBB181:
 2102              		.loc 2 229 0
 2103              		.syntax unified
 2104              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2105 009a 85F31188 			msr basepri, r5	
 2106              	@ 0 "" 2
 2107              	.LVL218:
 2108              		.thumb
 2109              		.syntax unified
 2110              	.LBE181:
 2111              	.LBE180:
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2112              		.loc 1 1236 0
 2113 009e 70BD     		pop	{r4, r5, r6, pc}
 2114              	.LVL219:
 2115              	.L196:
 2116              	.LBB182:
 2117              	.LBB178:
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2118              		.loc 1 1222 0
 2119 00a0 0133     		adds	r3, r3, #1
 2120              	.LVL220:
 2121 00a2 5BB2     		sxtb	r3, r3
 2122              	.LVL221:
 2123 00a4 84F84530 		strb	r3, [r4, #69]
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2124              		.loc 1 1225 0
 2125 00a8 0120     		movs	r0, #1
 2126 00aa F6E7     		b	.L195
 2127              	.LVL222:
 2128              	.L199:
 2129              	.LBE178:
1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2130              		.loc 1 1230 0
 2131 00ac 0020     		movs	r0, #0
 2132 00ae F4E7     		b	.L195
 2133              	.LVL223:
 2134              	.L200:
 2135              	.LBB179:
ARM GAS  /tmp/ccE5IrFh.s 			page 87


1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2136              		.loc 1 1225 0
 2137 00b0 0120     		movs	r0, #1
 2138 00b2 F2E7     		b	.L195
 2139              	.LVL224:
 2140              	.L201:
 2141 00b4 0120     		movs	r0, #1
 2142 00b6 F0E7     		b	.L195
 2143              	.L202:
 2144 00b8 0120     		movs	r0, #1
 2145 00ba EEE7     		b	.L195
 2146              	.LBE179:
 2147              	.LBE182:
 2148              		.cfi_endproc
 2149              	.LFE19:
 2151              		.section	.text.xQueueReceive,"ax",%progbits
 2152              		.align	1
 2153              		.global	xQueueReceive
 2154              		.syntax unified
 2155              		.thumb
 2156              		.thumb_func
 2157              		.fpu softvfp
 2159              	xQueueReceive:
 2160              	.LFB20:
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2161              		.loc 1 1240 0
 2162              		.cfi_startproc
 2163              		@ args = 0, pretend = 0, frame = 16
 2164              		@ frame_needed = 0, uses_anonymous_args = 0
 2165              	.LVL225:
 2166 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2167              		.cfi_def_cfa_offset 20
 2168              		.cfi_offset 4, -20
 2169              		.cfi_offset 5, -16
 2170              		.cfi_offset 6, -12
 2171              		.cfi_offset 7, -8
 2172              		.cfi_offset 14, -4
 2173 0002 85B0     		sub	sp, sp, #20
 2174              		.cfi_def_cfa_offset 40
 2175 0004 0192     		str	r2, [sp, #4]
 2176              	.LVL226:
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2177              		.loc 1 1246 0
 2178 0006 60B1     		cbz	r0, .L231
 2179 0008 0446     		mov	r4, r0
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2180              		.loc 1 1250 0
 2181 000a 99B1     		cbz	r1, .L232
 2182 000c 0125     		movs	r5, #1
 2183              	.L210:
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2184              		.loc 1 1250 0 is_stmt 0 discriminator 6
 2185 000e BDB9     		cbnz	r5, .L211
 2186              	.LBB183:
 2187              	.LBB184:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2188              		.loc 2 195 0 is_stmt 1
ARM GAS  /tmp/ccE5IrFh.s 			page 88


 2189              		.syntax unified
 2190              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2191 0010 4FF05003 			mov r3, #80												
 2192 0014 83F31188 		msr basepri, r3											
 2193 0018 BFF36F8F 		isb														
 2194 001c BFF34F8F 		dsb														
 2195              	
 2196              	@ 0 "" 2
 2197              	.LVL227:
 2198              		.thumb
 2199              		.syntax unified
 2200              	.L212:
 2201 0020 FEE7     		b	.L212
 2202              	.L231:
 2203              	.LBE184:
 2204              	.LBE183:
 2205              	.LBB185:
 2206              	.LBB186:
 2207              		.syntax unified
 2208              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2209 0022 4FF05003 			mov r3, #80												
 2210 0026 83F31188 		msr basepri, r3											
 2211 002a BFF36F8F 		isb														
 2212 002e BFF34F8F 		dsb														
 2213              	
 2214              	@ 0 "" 2
 2215              	.LVL228:
 2216              		.thumb
 2217              		.syntax unified
 2218              	.L209:
 2219 0032 FEE7     		b	.L209
 2220              	.L232:
 2221              	.LBE186:
 2222              	.LBE185:
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2223              		.loc 1 1250 0 discriminator 2
 2224 0034 036C     		ldr	r3, [r0, #64]
 2225 0036 0BB9     		cbnz	r3, .L227
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2226              		.loc 1 1250 0 is_stmt 0
 2227 0038 0125     		movs	r5, #1
 2228 003a E8E7     		b	.L210
 2229              	.L227:
 2230 003c 0025     		movs	r5, #0
 2231 003e E6E7     		b	.L210
 2232              	.L211:
 2233 0040 0E46     		mov	r6, r1
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2234              		.loc 1 1255 0 is_stmt 1
 2235 0042 FFF7FEFF 		bl	xTaskGetSchedulerState
 2236              	.LVL229:
 2237 0046 10B9     		cbnz	r0, .L213
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2238              		.loc 1 1255 0 is_stmt 0 discriminator 2
 2239 0048 019B     		ldr	r3, [sp, #4]
 2240 004a 03B1     		cbz	r3, .L213
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
ARM GAS  /tmp/ccE5IrFh.s 			page 89


 2241              		.loc 1 1255 0
 2242 004c 0025     		movs	r5, #0
 2243              	.L213:
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2244              		.loc 1 1255 0 discriminator 6
 2245 004e 45B9     		cbnz	r5, .L229
 2246              	.LBB187:
 2247              	.LBB188:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2248              		.loc 2 195 0 is_stmt 1
 2249              		.syntax unified
 2250              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2251 0050 4FF05003 			mov r3, #80												
 2252 0054 83F31188 		msr basepri, r3											
 2253 0058 BFF36F8F 		isb														
 2254 005c BFF34F8F 		dsb														
 2255              	
 2256              	@ 0 "" 2
 2257              	.LVL230:
 2258              		.thumb
 2259              		.syntax unified
 2260              	.L215:
 2261 0060 FEE7     		b	.L215
 2262              	.L229:
 2263              	.LBE188:
 2264              	.LBE187:
 2265 0062 0027     		movs	r7, #0
 2266 0064 2FE0     		b	.L214
 2267              	.LVL231:
 2268              	.L233:
 2269              	.LBB189:
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 2270              		.loc 1 1274 0
 2271 0066 3146     		mov	r1, r6
 2272 0068 2046     		mov	r0, r4
 2273 006a FFF7FEFF 		bl	prvCopyDataFromQueue
 2274              	.LVL232:
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2275              		.loc 1 1276 0
 2276 006e 013D     		subs	r5, r5, #1
 2277              	.LVL233:
 2278 0070 A563     		str	r5, [r4, #56]
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2279              		.loc 1 1281 0
 2280 0072 2369     		ldr	r3, [r4, #16]
 2281 0074 63B1     		cbz	r3, .L217
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2282              		.loc 1 1283 0
 2283 0076 04F11000 		add	r0, r4, #16
 2284 007a FFF7FEFF 		bl	xTaskRemoveFromEventList
 2285              	.LVL234:
 2286 007e 38B1     		cbz	r0, .L217
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2287              		.loc 1 1285 0
 2288 0080 4FF08052 		mov	r2, #268435456
 2289 0084 344B     		ldr	r3, .L238
 2290 0086 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccE5IrFh.s 			page 90


 2291              		.syntax unified
 2292              	@ 1285 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2293 0088 BFF34F8F 		dsb
 2294              	@ 0 "" 2
 2295              	@ 1285 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2296 008c BFF36F8F 		isb
 2297              	@ 0 "" 2
 2298              		.thumb
 2299              		.syntax unified
 2300              	.L217:
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2301              		.loc 1 1297 0
 2302 0090 FFF7FEFF 		bl	vPortExitCritical
 2303              	.LVL235:
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2304              		.loc 1 1298 0
 2305 0094 0120     		movs	r0, #1
 2306              	.LVL236:
 2307              	.L207:
 2308              	.LBE189:
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2309              		.loc 1 1377 0
 2310 0096 05B0     		add	sp, sp, #20
 2311              		.cfi_remember_state
 2312              		.cfi_def_cfa_offset 20
 2313              		@ sp needed
 2314 0098 F0BD     		pop	{r4, r5, r6, r7, pc}
 2315              	.LVL237:
 2316              	.L234:
 2317              		.cfi_restore_state
 2318              	.LBB190:
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2319              		.loc 1 1306 0
 2320 009a FFF7FEFF 		bl	vPortExitCritical
 2321              	.LVL238:
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2322              		.loc 1 1308 0
 2323 009e 0020     		movs	r0, #0
 2324 00a0 F9E7     		b	.L207
 2325              	.L235:
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2326              		.loc 1 1314 0
 2327 00a2 02A8     		add	r0, sp, #8
 2328 00a4 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2329              	.LVL239:
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2330              		.loc 1 1315 0
 2331 00a8 0127     		movs	r7, #1
 2332 00aa 16E0     		b	.L220
 2333              	.LVL240:
 2334              	.L236:
 2335              	.LBE190:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2336              		.loc 1 1330 0 discriminator 1
 2337 00ac 0023     		movs	r3, #0
 2338 00ae 84F84430 		strb	r3, [r4, #68]
 2339 00b2 1EE0     		b	.L221
ARM GAS  /tmp/ccE5IrFh.s 			page 91


 2340              	.L237:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2341              		.loc 1 1330 0 is_stmt 0 discriminator 4
 2342 00b4 0023     		movs	r3, #0
 2343 00b6 84F84530 		strb	r3, [r4, #69]
 2344 00ba 20E0     		b	.L222
 2345              	.L224:
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2346              		.loc 1 1355 0 is_stmt 1
 2347 00bc 2046     		mov	r0, r4
 2348 00be FFF7FEFF 		bl	prvUnlockQueue
 2349              	.LVL241:
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2350              		.loc 1 1356 0
 2351 00c2 FFF7FEFF 		bl	xTaskResumeAll
 2352              	.LVL242:
 2353              	.L214:
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2354              		.loc 1 1265 0
 2355 00c6 FFF7FEFF 		bl	vPortEnterCritical
 2356              	.LVL243:
 2357              	.LBB191:
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2358              		.loc 1 1267 0
 2359 00ca A56B     		ldr	r5, [r4, #56]
 2360              	.LVL244:
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2361              		.loc 1 1271 0
 2362 00cc 002D     		cmp	r5, #0
 2363 00ce CAD1     		bne	.L233
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2364              		.loc 1 1302 0
 2365 00d0 019B     		ldr	r3, [sp, #4]
 2366 00d2 002B     		cmp	r3, #0
 2367 00d4 E1D0     		beq	.L234
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2368              		.loc 1 1310 0
 2369 00d6 002F     		cmp	r7, #0
 2370 00d8 E3D0     		beq	.L235
 2371              	.LVL245:
 2372              	.L220:
 2373              	.LBE191:
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2374              		.loc 1 1324 0
 2375 00da FFF7FEFF 		bl	vPortExitCritical
 2376              	.LVL246:
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2377              		.loc 1 1329 0
 2378 00de FFF7FEFF 		bl	vTaskSuspendAll
 2379              	.LVL247:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2380              		.loc 1 1330 0
 2381 00e2 FFF7FEFF 		bl	vPortEnterCritical
 2382              	.LVL248:
 2383 00e6 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2384 00ea 5BB2     		sxtb	r3, r3
 2385 00ec B3F1FF3F 		cmp	r3, #-1
ARM GAS  /tmp/ccE5IrFh.s 			page 92


 2386 00f0 DCD0     		beq	.L236
 2387              	.L221:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2388              		.loc 1 1330 0 is_stmt 0 discriminator 3
 2389 00f2 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2390 00f6 5BB2     		sxtb	r3, r3
 2391 00f8 B3F1FF3F 		cmp	r3, #-1
 2392 00fc DAD0     		beq	.L237
 2393              	.L222:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2394              		.loc 1 1330 0 discriminator 6
 2395 00fe FFF7FEFF 		bl	vPortExitCritical
 2396              	.LVL249:
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2397              		.loc 1 1333 0 is_stmt 1 discriminator 6
 2398 0102 01A9     		add	r1, sp, #4
 2399 0104 02A8     		add	r0, sp, #8
 2400 0106 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2401              	.LVL250:
 2402 010a C8B9     		cbnz	r0, .L223
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2403              		.loc 1 1337 0
 2404 010c 2046     		mov	r0, r4
 2405 010e FFF7FEFF 		bl	prvIsQueueEmpty
 2406              	.LVL251:
 2407 0112 0028     		cmp	r0, #0
 2408 0114 D2D0     		beq	.L224
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2409              		.loc 1 1340 0
 2410 0116 0199     		ldr	r1, [sp, #4]
 2411 0118 04F12400 		add	r0, r4, #36
 2412 011c FFF7FEFF 		bl	vTaskPlaceOnEventList
 2413              	.LVL252:
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2414              		.loc 1 1341 0
 2415 0120 2046     		mov	r0, r4
 2416 0122 FFF7FEFF 		bl	prvUnlockQueue
 2417              	.LVL253:
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2418              		.loc 1 1342 0
 2419 0126 FFF7FEFF 		bl	xTaskResumeAll
 2420              	.LVL254:
 2421 012a 0028     		cmp	r0, #0
 2422 012c CBD1     		bne	.L214
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2423              		.loc 1 1344 0
 2424 012e 4FF08052 		mov	r2, #268435456
 2425 0132 094B     		ldr	r3, .L238
 2426 0134 1A60     		str	r2, [r3]
 2427              		.syntax unified
 2428              	@ 1344 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2429 0136 BFF34F8F 		dsb
 2430              	@ 0 "" 2
 2431              	@ 1344 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2432 013a BFF36F8F 		isb
 2433              	@ 0 "" 2
 2434              		.thumb
ARM GAS  /tmp/ccE5IrFh.s 			page 93


 2435              		.syntax unified
 2436 013e C2E7     		b	.L214
 2437              	.L223:
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2438              		.loc 1 1363 0
 2439 0140 2046     		mov	r0, r4
 2440 0142 FFF7FEFF 		bl	prvUnlockQueue
 2441              	.LVL255:
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2442              		.loc 1 1364 0
 2443 0146 FFF7FEFF 		bl	xTaskResumeAll
 2444              	.LVL256:
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2445              		.loc 1 1366 0
 2446 014a 2046     		mov	r0, r4
 2447 014c FFF7FEFF 		bl	prvIsQueueEmpty
 2448              	.LVL257:
 2449 0150 0028     		cmp	r0, #0
 2450 0152 B8D0     		beq	.L214
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2451              		.loc 1 1369 0
 2452 0154 0020     		movs	r0, #0
 2453 0156 9EE7     		b	.L207
 2454              	.L239:
 2455              		.align	2
 2456              	.L238:
 2457 0158 04ED00E0 		.word	-536810236
 2458              		.cfi_endproc
 2459              	.LFE20:
 2461              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 2462              		.align	1
 2463              		.global	xQueueSemaphoreTake
 2464              		.syntax unified
 2465              		.thumb
 2466              		.thumb_func
 2467              		.fpu softvfp
 2469              	xQueueSemaphoreTake:
 2470              	.LFB21:
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2471              		.loc 1 1381 0
 2472              		.cfi_startproc
 2473              		@ args = 0, pretend = 0, frame = 16
 2474              		@ frame_needed = 0, uses_anonymous_args = 0
 2475              	.LVL258:
 2476 0000 70B5     		push	{r4, r5, r6, lr}
 2477              		.cfi_def_cfa_offset 16
 2478              		.cfi_offset 4, -16
 2479              		.cfi_offset 5, -12
 2480              		.cfi_offset 6, -8
 2481              		.cfi_offset 14, -4
 2482 0002 84B0     		sub	sp, sp, #16
 2483              		.cfi_def_cfa_offset 32
 2484 0004 0191     		str	r1, [sp, #4]
 2485              	.LVL259:
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2486              		.loc 1 1391 0
 2487 0006 58B1     		cbz	r0, .L266
ARM GAS  /tmp/ccE5IrFh.s 			page 94


 2488 0008 0446     		mov	r4, r0
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2489              		.loc 1 1395 0
 2490 000a 036C     		ldr	r3, [r0, #64]
 2491 000c 8BB1     		cbz	r3, .L243
 2492              	.LBB192:
 2493              	.LBB193:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2494              		.loc 2 195 0
 2495              		.syntax unified
 2496              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2497 000e 4FF05003 			mov r3, #80												
 2498 0012 83F31188 		msr basepri, r3											
 2499 0016 BFF36F8F 		isb														
 2500 001a BFF34F8F 		dsb														
 2501              	
 2502              	@ 0 "" 2
 2503              	.LVL260:
 2504              		.thumb
 2505              		.syntax unified
 2506              	.L244:
 2507 001e FEE7     		b	.L244
 2508              	.L266:
 2509              	.LBE193:
 2510              	.LBE192:
 2511              	.LBB194:
 2512              	.LBB195:
 2513              		.syntax unified
 2514              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2515 0020 4FF05003 			mov r3, #80												
 2516 0024 83F31188 		msr basepri, r3											
 2517 0028 BFF36F8F 		isb														
 2518 002c BFF34F8F 		dsb														
 2519              	
 2520              	@ 0 "" 2
 2521              	.LVL261:
 2522              		.thumb
 2523              		.syntax unified
 2524              	.L242:
 2525 0030 FEE7     		b	.L242
 2526              	.L243:
 2527              	.LBE195:
 2528              	.LBE194:
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2529              		.loc 1 1400 0
 2530 0032 FFF7FEFF 		bl	xTaskGetSchedulerState
 2531              	.LVL262:
 2532 0036 60B9     		cbnz	r0, .L262
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2533              		.loc 1 1400 0 is_stmt 0 discriminator 2
 2534 0038 019B     		ldr	r3, [sp, #4]
 2535 003a 63B9     		cbnz	r3, .L263
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2536              		.loc 1 1400 0
 2537 003c 0123     		movs	r3, #1
 2538              	.L245:
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
ARM GAS  /tmp/ccE5IrFh.s 			page 95


 2539              		.loc 1 1400 0 discriminator 6
 2540 003e 63B9     		cbnz	r3, .L264
 2541              	.LBB196:
 2542              	.LBB197:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2543              		.loc 2 195 0 is_stmt 1
 2544              		.syntax unified
 2545              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2546 0040 4FF05003 			mov r3, #80												
 2547 0044 83F31188 		msr basepri, r3											
 2548 0048 BFF36F8F 		isb														
 2549 004c BFF34F8F 		dsb														
 2550              	
 2551              	@ 0 "" 2
 2552              	.LVL263:
 2553              		.thumb
 2554              		.syntax unified
 2555              	.L247:
 2556 0050 FEE7     		b	.L247
 2557              	.L262:
 2558              	.LBE197:
 2559              	.LBE196:
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2560              		.loc 1 1400 0
 2561 0052 0123     		movs	r3, #1
 2562 0054 F3E7     		b	.L245
 2563              	.L263:
 2564 0056 0023     		movs	r3, #0
 2565 0058 F1E7     		b	.L245
 2566              	.L264:
 2567 005a 0025     		movs	r5, #0
 2568 005c 2E46     		mov	r6, r5
 2569 005e 4EE0     		b	.L246
 2570              	.LVL264:
 2571              	.L268:
 2572              	.LBB198:
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2573              		.loc 1 1425 0
 2574 0060 013B     		subs	r3, r3, #1
 2575              	.LVL265:
 2576 0062 A363     		str	r3, [r4, #56]
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2577              		.loc 1 1429 0
 2578 0064 2368     		ldr	r3, [r4]
 2579              	.LVL266:
 2580 0066 13B9     		cbnz	r3, .L249
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2581              		.loc 1 1433 0
 2582 0068 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 2583              	.LVL267:
 2584 006c 6060     		str	r0, [r4, #4]
 2585              	.L249:
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2586              		.loc 1 1444 0
 2587 006e 2369     		ldr	r3, [r4, #16]
 2588 0070 63B1     		cbz	r3, .L250
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  /tmp/ccE5IrFh.s 			page 96


 2589              		.loc 1 1446 0
 2590 0072 04F11000 		add	r0, r4, #16
 2591 0076 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2592              	.LVL268:
 2593 007a 38B1     		cbz	r0, .L250
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2594              		.loc 1 1448 0
 2595 007c 4FF08052 		mov	r2, #268435456
 2596 0080 474B     		ldr	r3, .L274
 2597 0082 1A60     		str	r2, [r3]
 2598              		.syntax unified
 2599              	@ 1448 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2600 0084 BFF34F8F 		dsb
 2601              	@ 0 "" 2
 2602              	@ 1448 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2603 0088 BFF36F8F 		isb
 2604              	@ 0 "" 2
 2605              		.thumb
 2606              		.syntax unified
 2607              	.L250:
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2608              		.loc 1 1460 0
 2609 008c FFF7FEFF 		bl	vPortExitCritical
 2610              	.LVL269:
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2611              		.loc 1 1461 0
 2612 0090 0125     		movs	r5, #1
 2613              	.LVL270:
 2614              	.L240:
 2615              	.LBE198:
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2616              		.loc 1 1596 0
 2617 0092 2846     		mov	r0, r5
 2618 0094 04B0     		add	sp, sp, #16
 2619              		.cfi_remember_state
 2620              		.cfi_def_cfa_offset 16
 2621              		@ sp needed
 2622 0096 70BD     		pop	{r4, r5, r6, pc}
 2623              	.LVL271:
 2624              	.L269:
 2625              		.cfi_restore_state
 2626              	.LBB201:
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2627              		.loc 1 1472 0
 2628 0098 45B1     		cbz	r5, .L253
 2629              	.LBB199:
 2630              	.LBB200:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2631              		.loc 2 195 0
 2632              		.syntax unified
 2633              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2634 009a 4FF05003 			mov r3, #80												
 2635 009e 83F31188 		msr basepri, r3											
 2636 00a2 BFF36F8F 		isb														
 2637 00a6 BFF34F8F 		dsb														
 2638              	
 2639              	@ 0 "" 2
ARM GAS  /tmp/ccE5IrFh.s 			page 97


 2640              	.LVL272:
 2641              		.thumb
 2642              		.syntax unified
 2643              	.L254:
 2644 00aa FEE7     		b	.L254
 2645              	.L253:
 2646              	.LBE200:
 2647              	.LBE199:
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2648              		.loc 1 1478 0
 2649 00ac FFF7FEFF 		bl	vPortExitCritical
 2650              	.LVL273:
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2651              		.loc 1 1480 0
 2652 00b0 EFE7     		b	.L240
 2653              	.L270:
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2654              		.loc 1 1486 0
 2655 00b2 02A8     		add	r0, sp, #8
 2656 00b4 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2657              	.LVL274:
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2658              		.loc 1 1487 0
 2659 00b8 0126     		movs	r6, #1
 2660 00ba 2AE0     		b	.L255
 2661              	.LVL275:
 2662              	.L271:
 2663              	.LBE201:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2664              		.loc 1 1502 0 discriminator 1
 2665 00bc 0023     		movs	r3, #0
 2666 00be 84F84430 		strb	r3, [r4, #68]
 2667 00c2 32E0     		b	.L256
 2668              	.L272:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2669              		.loc 1 1502 0 is_stmt 0 discriminator 4
 2670 00c4 0023     		movs	r3, #0
 2671 00c6 84F84530 		strb	r3, [r4, #69]
 2672 00ca 34E0     		b	.L257
 2673              	.L273:
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2674              		.loc 1 1519 0 is_stmt 1
 2675 00cc FFF7FEFF 		bl	vPortEnterCritical
 2676              	.LVL276:
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2677              		.loc 1 1521 0
 2678 00d0 6068     		ldr	r0, [r4, #4]
 2679 00d2 FFF7FEFF 		bl	xTaskPriorityInherit
 2680              	.LVL277:
 2681 00d6 0546     		mov	r5, r0
 2682              	.LVL278:
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2683              		.loc 1 1523 0
 2684 00d8 FFF7FEFF 		bl	vPortExitCritical
 2685              	.LVL279:
 2686 00dc 3BE0     		b	.L260
 2687              	.L259:
ARM GAS  /tmp/ccE5IrFh.s 			page 98


1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2688              		.loc 1 1547 0
 2689 00de 2046     		mov	r0, r4
 2690 00e0 FFF7FEFF 		bl	prvUnlockQueue
 2691              	.LVL280:
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2692              		.loc 1 1548 0
 2693 00e4 FFF7FEFF 		bl	xTaskResumeAll
 2694              	.LVL281:
 2695 00e8 09E0     		b	.L246
 2696              	.L258:
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2697              		.loc 1 1554 0
 2698 00ea 2046     		mov	r0, r4
 2699 00ec FFF7FEFF 		bl	prvUnlockQueue
 2700              	.LVL282:
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2701              		.loc 1 1555 0
 2702 00f0 FFF7FEFF 		bl	xTaskResumeAll
 2703              	.LVL283:
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2704              		.loc 1 1561 0
 2705 00f4 2046     		mov	r0, r4
 2706 00f6 FFF7FEFF 		bl	prvIsQueueEmpty
 2707              	.LVL284:
 2708 00fa 0028     		cmp	r0, #0
 2709 00fc 40D1     		bne	.L267
 2710              	.LVL285:
 2711              	.L246:
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2712              		.loc 1 1411 0
 2713 00fe FFF7FEFF 		bl	vPortEnterCritical
 2714              	.LVL286:
 2715              	.LBB202:
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2716              		.loc 1 1415 0
 2717 0102 A36B     		ldr	r3, [r4, #56]
 2718              	.LVL287:
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2719              		.loc 1 1419 0
 2720 0104 002B     		cmp	r3, #0
 2721 0106 ABD1     		bne	.L268
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2722              		.loc 1 1465 0
 2723 0108 019B     		ldr	r3, [sp, #4]
 2724              	.LVL288:
 2725 010a 002B     		cmp	r3, #0
 2726 010c C4D0     		beq	.L269
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2727              		.loc 1 1482 0
 2728 010e 002E     		cmp	r6, #0
 2729 0110 CFD0     		beq	.L270
 2730              	.LVL289:
 2731              	.L255:
 2732              	.LBE202:
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2733              		.loc 1 1496 0
ARM GAS  /tmp/ccE5IrFh.s 			page 99


 2734 0112 FFF7FEFF 		bl	vPortExitCritical
 2735              	.LVL290:
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2736              		.loc 1 1501 0
 2737 0116 FFF7FEFF 		bl	vTaskSuspendAll
 2738              	.LVL291:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2739              		.loc 1 1502 0
 2740 011a FFF7FEFF 		bl	vPortEnterCritical
 2741              	.LVL292:
 2742 011e 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2743 0122 5BB2     		sxtb	r3, r3
 2744 0124 B3F1FF3F 		cmp	r3, #-1
 2745 0128 C8D0     		beq	.L271
 2746              	.L256:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2747              		.loc 1 1502 0 is_stmt 0 discriminator 3
 2748 012a 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2749 012e 5BB2     		sxtb	r3, r3
 2750 0130 B3F1FF3F 		cmp	r3, #-1
 2751 0134 C6D0     		beq	.L272
 2752              	.L257:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2753              		.loc 1 1502 0 discriminator 6
 2754 0136 FFF7FEFF 		bl	vPortExitCritical
 2755              	.LVL293:
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2756              		.loc 1 1505 0 is_stmt 1 discriminator 6
 2757 013a 01A9     		add	r1, sp, #4
 2758 013c 02A8     		add	r0, sp, #8
 2759 013e FFF7FEFF 		bl	xTaskCheckForTimeOut
 2760              	.LVL294:
 2761 0142 0028     		cmp	r0, #0
 2762 0144 D1D1     		bne	.L258
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2763              		.loc 1 1511 0
 2764 0146 2046     		mov	r0, r4
 2765 0148 FFF7FEFF 		bl	prvIsQueueEmpty
 2766              	.LVL295:
 2767 014c 0028     		cmp	r0, #0
 2768 014e C6D0     		beq	.L259
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2769              		.loc 1 1517 0
 2770 0150 2368     		ldr	r3, [r4]
 2771 0152 002B     		cmp	r3, #0
 2772 0154 BAD0     		beq	.L273
 2773              	.L260:
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2774              		.loc 1 1532 0
 2775 0156 0199     		ldr	r1, [sp, #4]
 2776 0158 04F12400 		add	r0, r4, #36
 2777 015c FFF7FEFF 		bl	vTaskPlaceOnEventList
 2778              	.LVL296:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2779              		.loc 1 1533 0
 2780 0160 2046     		mov	r0, r4
 2781 0162 FFF7FEFF 		bl	prvUnlockQueue
ARM GAS  /tmp/ccE5IrFh.s 			page 100


 2782              	.LVL297:
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2783              		.loc 1 1534 0
 2784 0166 FFF7FEFF 		bl	xTaskResumeAll
 2785              	.LVL298:
 2786 016a 0028     		cmp	r0, #0
 2787 016c C7D1     		bne	.L246
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2788              		.loc 1 1536 0
 2789 016e 4FF08052 		mov	r2, #268435456
 2790 0172 0B4B     		ldr	r3, .L274
 2791 0174 1A60     		str	r2, [r3]
 2792              		.syntax unified
 2793              	@ 1536 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2794 0176 BFF34F8F 		dsb
 2795              	@ 0 "" 2
 2796              	@ 1536 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2797 017a BFF36F8F 		isb
 2798              	@ 0 "" 2
 2799              		.thumb
 2800              		.syntax unified
 2801 017e BEE7     		b	.L246
 2802              	.L267:
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2803              		.loc 1 1568 0
 2804 0180 002D     		cmp	r5, #0
 2805 0182 86D0     		beq	.L240
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2806              		.loc 1 1570 0
 2807 0184 FFF7FEFF 		bl	vPortEnterCritical
 2808              	.LVL299:
 2809              	.LBB203:
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
 2810              		.loc 1 1579 0
 2811 0188 2046     		mov	r0, r4
 2812 018a FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 2813              	.LVL300:
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2814              		.loc 1 1580 0
 2815 018e 0146     		mov	r1, r0
 2816 0190 6068     		ldr	r0, [r4, #4]
 2817              	.LVL301:
 2818 0192 FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 2819              	.LVL302:
 2820              	.LBE203:
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2821              		.loc 1 1582 0
 2822 0196 FFF7FEFF 		bl	vPortExitCritical
 2823              	.LVL303:
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2824              		.loc 1 1588 0
 2825 019a 0025     		movs	r5, #0
 2826              	.LVL304:
 2827 019c 79E7     		b	.L240
 2828              	.L275:
 2829 019e 00BF     		.align	2
 2830              	.L274:
ARM GAS  /tmp/ccE5IrFh.s 			page 101


 2831 01a0 04ED00E0 		.word	-536810236
 2832              		.cfi_endproc
 2833              	.LFE21:
 2835              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 2836              		.align	1
 2837              		.global	xQueueTakeMutexRecursive
 2838              		.syntax unified
 2839              		.thumb
 2840              		.thumb_func
 2841              		.fpu softvfp
 2843              	xQueueTakeMutexRecursive:
 2844              	.LFB14:
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2845              		.loc 1 630 0
 2846              		.cfi_startproc
 2847              		@ args = 0, pretend = 0, frame = 0
 2848              		@ frame_needed = 0, uses_anonymous_args = 0
 2849              	.LVL305:
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2850              		.loc 1 634 0
 2851 0000 88B1     		cbz	r0, .L283
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2852              		.loc 1 630 0
 2853 0002 70B5     		push	{r4, r5, r6, lr}
 2854              		.cfi_def_cfa_offset 16
 2855              		.cfi_offset 4, -16
 2856              		.cfi_offset 5, -12
 2857              		.cfi_offset 6, -8
 2858              		.cfi_offset 14, -4
 2859 0004 0446     		mov	r4, r0
 2860 0006 0D46     		mov	r5, r1
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2861              		.loc 1 641 0
 2862 0008 4668     		ldr	r6, [r0, #4]
 2863 000a FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 2864              	.LVL306:
 2865 000e 8642     		cmp	r6, r0
 2866 0010 12D0     		beq	.L284
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2867              		.loc 1 648 0
 2868 0012 2946     		mov	r1, r5
 2869 0014 2046     		mov	r0, r4
 2870 0016 FFF7FEFF 		bl	xQueueSemaphoreTake
 2871              	.LVL307:
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2872              		.loc 1 653 0
 2873 001a 0246     		mov	r2, r0
 2874 001c 80B1     		cbz	r0, .L276
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2875              		.loc 1 655 0
 2876 001e E368     		ldr	r3, [r4, #12]
 2877 0020 0133     		adds	r3, r3, #1
 2878 0022 E360     		str	r3, [r4, #12]
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2879              		.loc 1 663 0
 2880 0024 0CE0     		b	.L276
 2881              	.LVL308:
ARM GAS  /tmp/ccE5IrFh.s 			page 102


 2882              	.L283:
 2883              		.cfi_def_cfa_offset 0
 2884              		.cfi_restore 4
 2885              		.cfi_restore 5
 2886              		.cfi_restore 6
 2887              		.cfi_restore 14
 2888              	.LBB204:
 2889              	.LBB205:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2890              		.loc 2 195 0
 2891              		.syntax unified
 2892              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2893 0026 4FF05003 			mov r3, #80												
 2894 002a 83F31188 		msr basepri, r3											
 2895 002e BFF36F8F 		isb														
 2896 0032 BFF34F8F 		dsb														
 2897              	
 2898              	@ 0 "" 2
 2899              	.LVL309:
 2900              		.thumb
 2901              		.syntax unified
 2902              	.L278:
 2903 0036 FEE7     		b	.L278
 2904              	.LVL310:
 2905              	.L284:
 2906              		.cfi_def_cfa_offset 16
 2907              		.cfi_offset 4, -16
 2908              		.cfi_offset 5, -12
 2909              		.cfi_offset 6, -8
 2910              		.cfi_offset 14, -4
 2911              	.LBE205:
 2912              	.LBE204:
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 2913              		.loc 1 643 0
 2914 0038 E368     		ldr	r3, [r4, #12]
 2915 003a 0133     		adds	r3, r3, #1
 2916 003c E360     		str	r3, [r4, #12]
 2917              	.LVL311:
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2918              		.loc 1 644 0
 2919 003e 0122     		movs	r2, #1
 2920              	.LVL312:
 2921              	.L276:
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2922              		.loc 1 664 0
 2923 0040 1046     		mov	r0, r2
 2924 0042 70BD     		pop	{r4, r5, r6, pc}
 2925              		.cfi_endproc
 2926              	.LFE14:
 2928              		.section	.text.xQueuePeek,"ax",%progbits
 2929              		.align	1
 2930              		.global	xQueuePeek
 2931              		.syntax unified
 2932              		.thumb
 2933              		.thumb_func
 2934              		.fpu softvfp
 2936              	xQueuePeek:
ARM GAS  /tmp/ccE5IrFh.s 			page 103


 2937              	.LFB22:
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2938              		.loc 1 1600 0
 2939              		.cfi_startproc
 2940              		@ args = 0, pretend = 0, frame = 16
 2941              		@ frame_needed = 0, uses_anonymous_args = 0
 2942              	.LVL313:
 2943 0000 70B5     		push	{r4, r5, r6, lr}
 2944              		.cfi_def_cfa_offset 16
 2945              		.cfi_offset 4, -16
 2946              		.cfi_offset 5, -12
 2947              		.cfi_offset 6, -8
 2948              		.cfi_offset 14, -4
 2949 0002 84B0     		sub	sp, sp, #16
 2950              		.cfi_def_cfa_offset 32
 2951 0004 0192     		str	r2, [sp, #4]
 2952              	.LVL314:
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2953              		.loc 1 1607 0
 2954 0006 60B1     		cbz	r0, .L309
 2955 0008 0446     		mov	r4, r0
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2956              		.loc 1 1611 0
 2957 000a 99B1     		cbz	r1, .L310
 2958 000c 0125     		movs	r5, #1
 2959              	.L288:
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2960              		.loc 1 1611 0 is_stmt 0 discriminator 6
 2961 000e BDB9     		cbnz	r5, .L289
 2962              	.LBB206:
 2963              	.LBB207:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2964              		.loc 2 195 0 is_stmt 1
 2965              		.syntax unified
 2966              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2967 0010 4FF05003 			mov r3, #80												
 2968 0014 83F31188 		msr basepri, r3											
 2969 0018 BFF36F8F 		isb														
 2970 001c BFF34F8F 		dsb														
 2971              	
 2972              	@ 0 "" 2
 2973              	.LVL315:
 2974              		.thumb
 2975              		.syntax unified
 2976              	.L290:
 2977 0020 FEE7     		b	.L290
 2978              	.L309:
 2979              	.LBE207:
 2980              	.LBE206:
 2981              	.LBB208:
 2982              	.LBB209:
 2983              		.syntax unified
 2984              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2985 0022 4FF05003 			mov r3, #80												
 2986 0026 83F31188 		msr basepri, r3											
 2987 002a BFF36F8F 		isb														
 2988 002e BFF34F8F 		dsb														
ARM GAS  /tmp/ccE5IrFh.s 			page 104


 2989              	
 2990              	@ 0 "" 2
 2991              	.LVL316:
 2992              		.thumb
 2993              		.syntax unified
 2994              	.L287:
 2995 0032 FEE7     		b	.L287
 2996              	.L310:
 2997              	.LBE209:
 2998              	.LBE208:
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2999              		.loc 1 1611 0 discriminator 2
 3000 0034 036C     		ldr	r3, [r0, #64]
 3001 0036 0BB9     		cbnz	r3, .L305
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3002              		.loc 1 1611 0 is_stmt 0
 3003 0038 0125     		movs	r5, #1
 3004 003a E8E7     		b	.L288
 3005              	.L305:
 3006 003c 0025     		movs	r5, #0
 3007 003e E6E7     		b	.L288
 3008              	.L289:
 3009 0040 0E46     		mov	r6, r1
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3010              		.loc 1 1616 0 is_stmt 1
 3011 0042 FFF7FEFF 		bl	xTaskGetSchedulerState
 3012              	.LVL317:
 3013 0046 10B9     		cbnz	r0, .L291
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3014              		.loc 1 1616 0 is_stmt 0 discriminator 2
 3015 0048 019B     		ldr	r3, [sp, #4]
 3016 004a 03B1     		cbz	r3, .L291
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3017              		.loc 1 1616 0
 3018 004c 0025     		movs	r5, #0
 3019              	.L291:
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3020              		.loc 1 1616 0 discriminator 6
 3021 004e 45B9     		cbnz	r5, .L307
 3022              	.LBB210:
 3023              	.LBB211:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3024              		.loc 2 195 0 is_stmt 1
 3025              		.syntax unified
 3026              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3027 0050 4FF05003 			mov r3, #80												
 3028 0054 83F31188 		msr basepri, r3											
 3029 0058 BFF36F8F 		isb														
 3030 005c BFF34F8F 		dsb														
 3031              	
 3032              	@ 0 "" 2
 3033              	.LVL318:
 3034              		.thumb
 3035              		.syntax unified
 3036              	.L293:
 3037 0060 FEE7     		b	.L293
 3038              	.L307:
ARM GAS  /tmp/ccE5IrFh.s 			page 105


 3039              	.LBE211:
 3040              	.LBE210:
 3041 0062 0025     		movs	r5, #0
 3042 0064 2FE0     		b	.L292
 3043              	.LVL319:
 3044              	.L311:
 3045              	.LBB212:
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3046              		.loc 1 1638 0
 3047 0066 E568     		ldr	r5, [r4, #12]
 3048              	.LVL320:
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 3049              		.loc 1 1640 0
 3050 0068 3146     		mov	r1, r6
 3051 006a 2046     		mov	r0, r4
 3052 006c FFF7FEFF 		bl	prvCopyDataFromQueue
 3053              	.LVL321:
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3054              		.loc 1 1644 0
 3055 0070 E560     		str	r5, [r4, #12]
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3056              		.loc 1 1648 0
 3057 0072 636A     		ldr	r3, [r4, #36]
 3058 0074 63B1     		cbz	r3, .L295
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 3059              		.loc 1 1650 0
 3060 0076 04F12400 		add	r0, r4, #36
 3061 007a FFF7FEFF 		bl	xTaskRemoveFromEventList
 3062              	.LVL322:
 3063 007e 38B1     		cbz	r0, .L295
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 3064              		.loc 1 1653 0
 3065 0080 4FF08052 		mov	r2, #268435456
 3066 0084 344B     		ldr	r3, .L316
 3067 0086 1A60     		str	r2, [r3]
 3068              		.syntax unified
 3069              	@ 1653 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3070 0088 BFF34F8F 		dsb
 3071              	@ 0 "" 2
 3072              	@ 1653 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3073 008c BFF36F8F 		isb
 3074              	@ 0 "" 2
 3075              		.thumb
 3076              		.syntax unified
 3077              	.L295:
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 3078              		.loc 1 1665 0
 3079 0090 FFF7FEFF 		bl	vPortExitCritical
 3080              	.LVL323:
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3081              		.loc 1 1666 0
 3082 0094 0120     		movs	r0, #1
 3083              	.LVL324:
 3084              	.L285:
 3085              	.LBE212:
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3086              		.loc 1 1746 0
ARM GAS  /tmp/ccE5IrFh.s 			page 106


 3087 0096 04B0     		add	sp, sp, #16
 3088              		.cfi_remember_state
 3089              		.cfi_def_cfa_offset 16
 3090              		@ sp needed
 3091 0098 70BD     		pop	{r4, r5, r6, pc}
 3092              	.LVL325:
 3093              	.L312:
 3094              		.cfi_restore_state
 3095              	.LBB213:
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 3096              		.loc 1 1674 0
 3097 009a FFF7FEFF 		bl	vPortExitCritical
 3098              	.LVL326:
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3099              		.loc 1 1676 0
 3100 009e 0020     		movs	r0, #0
 3101 00a0 F9E7     		b	.L285
 3102              	.L313:
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 3103              		.loc 1 1683 0
 3104 00a2 02A8     		add	r0, sp, #8
 3105 00a4 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3106              	.LVL327:
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3107              		.loc 1 1684 0
 3108 00a8 0125     		movs	r5, #1
 3109 00aa 16E0     		b	.L298
 3110              	.LVL328:
 3111              	.L314:
 3112              	.LBE213:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3113              		.loc 1 1699 0 discriminator 1
 3114 00ac 0023     		movs	r3, #0
 3115 00ae 84F84430 		strb	r3, [r4, #68]
 3116 00b2 1EE0     		b	.L299
 3117              	.L315:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3118              		.loc 1 1699 0 is_stmt 0 discriminator 4
 3119 00b4 0023     		movs	r3, #0
 3120 00b6 84F84530 		strb	r3, [r4, #69]
 3121 00ba 20E0     		b	.L300
 3122              	.L302:
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 3123              		.loc 1 1724 0 is_stmt 1
 3124 00bc 2046     		mov	r0, r4
 3125 00be FFF7FEFF 		bl	prvUnlockQueue
 3126              	.LVL329:
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3127              		.loc 1 1725 0
 3128 00c2 FFF7FEFF 		bl	xTaskResumeAll
 3129              	.LVL330:
 3130              	.L292:
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3131              		.loc 1 1627 0
 3132 00c6 FFF7FEFF 		bl	vPortEnterCritical
 3133              	.LVL331:
 3134              	.LBB214:
ARM GAS  /tmp/ccE5IrFh.s 			page 107


1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3135              		.loc 1 1629 0
 3136 00ca A36B     		ldr	r3, [r4, #56]
 3137              	.LVL332:
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3138              		.loc 1 1633 0
 3139 00cc 002B     		cmp	r3, #0
 3140 00ce CAD1     		bne	.L311
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3141              		.loc 1 1670 0
 3142 00d0 019B     		ldr	r3, [sp, #4]
 3143              	.LVL333:
 3144 00d2 002B     		cmp	r3, #0
 3145 00d4 E1D0     		beq	.L312
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3146              		.loc 1 1678 0
 3147 00d6 002D     		cmp	r5, #0
 3148 00d8 E3D0     		beq	.L313
 3149              	.LVL334:
 3150              	.L298:
 3151              	.LBE214:
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3152              		.loc 1 1693 0
 3153 00da FFF7FEFF 		bl	vPortExitCritical
 3154              	.LVL335:
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 3155              		.loc 1 1698 0
 3156 00de FFF7FEFF 		bl	vTaskSuspendAll
 3157              	.LVL336:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3158              		.loc 1 1699 0
 3159 00e2 FFF7FEFF 		bl	vPortEnterCritical
 3160              	.LVL337:
 3161 00e6 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 3162 00ea 5BB2     		sxtb	r3, r3
 3163 00ec B3F1FF3F 		cmp	r3, #-1
 3164 00f0 DCD0     		beq	.L314
 3165              	.L299:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3166              		.loc 1 1699 0 is_stmt 0 discriminator 3
 3167 00f2 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 3168 00f6 5BB2     		sxtb	r3, r3
 3169 00f8 B3F1FF3F 		cmp	r3, #-1
 3170 00fc DAD0     		beq	.L315
 3171              	.L300:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3172              		.loc 1 1699 0 discriminator 6
 3173 00fe FFF7FEFF 		bl	vPortExitCritical
 3174              	.LVL338:
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3175              		.loc 1 1702 0 is_stmt 1 discriminator 6
 3176 0102 01A9     		add	r1, sp, #4
 3177 0104 02A8     		add	r0, sp, #8
 3178 0106 FFF7FEFF 		bl	xTaskCheckForTimeOut
 3179              	.LVL339:
 3180 010a C8B9     		cbnz	r0, .L301
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/ccE5IrFh.s 			page 108


 3181              		.loc 1 1706 0
 3182 010c 2046     		mov	r0, r4
 3183 010e FFF7FEFF 		bl	prvIsQueueEmpty
 3184              	.LVL340:
 3185 0112 0028     		cmp	r0, #0
 3186 0114 D2D0     		beq	.L302
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 3187              		.loc 1 1709 0
 3188 0116 0199     		ldr	r1, [sp, #4]
 3189 0118 04F12400 		add	r0, r4, #36
 3190 011c FFF7FEFF 		bl	vTaskPlaceOnEventList
 3191              	.LVL341:
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 3192              		.loc 1 1710 0
 3193 0120 2046     		mov	r0, r4
 3194 0122 FFF7FEFF 		bl	prvUnlockQueue
 3195              	.LVL342:
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3196              		.loc 1 1711 0
 3197 0126 FFF7FEFF 		bl	xTaskResumeAll
 3198              	.LVL343:
 3199 012a 0028     		cmp	r0, #0
 3200 012c CBD1     		bne	.L292
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3201              		.loc 1 1713 0
 3202 012e 4FF08052 		mov	r2, #268435456
 3203 0132 094B     		ldr	r3, .L316
 3204 0134 1A60     		str	r2, [r3]
 3205              		.syntax unified
 3206              	@ 1713 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3207 0136 BFF34F8F 		dsb
 3208              	@ 0 "" 2
 3209              	@ 1713 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3210 013a BFF36F8F 		isb
 3211              	@ 0 "" 2
 3212              		.thumb
 3213              		.syntax unified
 3214 013e C2E7     		b	.L292
 3215              	.L301:
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 3216              		.loc 1 1732 0
 3217 0140 2046     		mov	r0, r4
 3218 0142 FFF7FEFF 		bl	prvUnlockQueue
 3219              	.LVL344:
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3220              		.loc 1 1733 0
 3221 0146 FFF7FEFF 		bl	xTaskResumeAll
 3222              	.LVL345:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3223              		.loc 1 1735 0
 3224 014a 2046     		mov	r0, r4
 3225 014c FFF7FEFF 		bl	prvIsQueueEmpty
 3226              	.LVL346:
 3227 0150 0028     		cmp	r0, #0
 3228 0152 B8D0     		beq	.L292
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3229              		.loc 1 1738 0
ARM GAS  /tmp/ccE5IrFh.s 			page 109


 3230 0154 0020     		movs	r0, #0
 3231 0156 9EE7     		b	.L285
 3232              	.L317:
 3233              		.align	2
 3234              	.L316:
 3235 0158 04ED00E0 		.word	-536810236
 3236              		.cfi_endproc
 3237              	.LFE22:
 3239              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 3240              		.align	1
 3241              		.global	xQueueReceiveFromISR
 3242              		.syntax unified
 3243              		.thumb
 3244              		.thumb_func
 3245              		.fpu softvfp
 3247              	xQueueReceiveFromISR:
 3248              	.LFB23:
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3249              		.loc 1 1750 0
 3250              		.cfi_startproc
 3251              		@ args = 0, pretend = 0, frame = 0
 3252              		@ frame_needed = 0, uses_anonymous_args = 0
 3253              	.LVL347:
 3254 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3255              		.cfi_def_cfa_offset 32
 3256              		.cfi_offset 3, -32
 3257              		.cfi_offset 4, -28
 3258              		.cfi_offset 5, -24
 3259              		.cfi_offset 6, -20
 3260              		.cfi_offset 7, -16
 3261              		.cfi_offset 8, -12
 3262              		.cfi_offset 9, -8
 3263              		.cfi_offset 14, -4
 3264              	.LVL348:
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3265              		.loc 1 1755 0
 3266 0004 60B1     		cbz	r0, .L333
 3267 0006 0446     		mov	r4, r0
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3268              		.loc 1 1756 0
 3269 0008 99B1     		cbz	r1, .L334
 3270 000a 0123     		movs	r3, #1
 3271              	.L321:
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3272              		.loc 1 1756 0 is_stmt 0 discriminator 6
 3273 000c BBB9     		cbnz	r3, .L322
 3274              	.LBB215:
 3275              	.LBB216:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3276              		.loc 2 195 0 is_stmt 1
 3277              		.syntax unified
 3278              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3279 000e 4FF05003 			mov r3, #80												
 3280 0012 83F31188 		msr basepri, r3											
 3281 0016 BFF36F8F 		isb														
 3282 001a BFF34F8F 		dsb														
 3283              	
ARM GAS  /tmp/ccE5IrFh.s 			page 110


 3284              	@ 0 "" 2
 3285              	.LVL349:
 3286              		.thumb
 3287              		.syntax unified
 3288              	.L323:
 3289 001e FEE7     		b	.L323
 3290              	.L333:
 3291              	.LBE216:
 3292              	.LBE215:
 3293              	.LBB217:
 3294              	.LBB218:
 3295              		.syntax unified
 3296              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3297 0020 4FF05003 			mov r3, #80												
 3298 0024 83F31188 		msr basepri, r3											
 3299 0028 BFF36F8F 		isb														
 3300 002c BFF34F8F 		dsb														
 3301              	
 3302              	@ 0 "" 2
 3303              	.LVL350:
 3304              		.thumb
 3305              		.syntax unified
 3306              	.L320:
 3307 0030 FEE7     		b	.L320
 3308              	.L334:
 3309              	.LBE218:
 3310              	.LBE217:
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3311              		.loc 1 1756 0 discriminator 2
 3312 0032 036C     		ldr	r3, [r0, #64]
 3313 0034 0BB9     		cbnz	r3, .L327
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3314              		.loc 1 1756 0 is_stmt 0
 3315 0036 0123     		movs	r3, #1
 3316 0038 E8E7     		b	.L321
 3317              	.L327:
 3318 003a 0023     		movs	r3, #0
 3319 003c E6E7     		b	.L321
 3320              	.L322:
 3321 003e 1746     		mov	r7, r2
 3322 0040 8946     		mov	r9, r1
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3323              		.loc 1 1772 0 is_stmt 1
 3324 0042 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3325              	.LVL351:
 3326              	.LBB219:
 3327              	.LBB220:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3328              		.loc 2 211 0
 3329              		.syntax unified
 3330              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3331 0046 EFF31186 			mrs r6, basepri											
 3332 004a 4FF05003 		mov r3, #80												
 3333 004e 83F31188 		msr basepri, r3											
 3334 0052 BFF36F8F 		isb														
 3335 0056 BFF34F8F 		dsb														
 3336              	
ARM GAS  /tmp/ccE5IrFh.s 			page 111


 3337              	@ 0 "" 2
 3338              		.thumb
 3339              		.syntax unified
 3340              	.LBE220:
 3341              	.LBE219:
 3342              	.LBB221:
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3343              		.loc 1 1776 0
 3344 005a D4F83880 		ldr	r8, [r4, #56]
 3345              	.LVL352:
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3346              		.loc 1 1779 0
 3347 005e B8F1000F 		cmp	r8, #0
 3348 0062 20D0     		beq	.L328
 3349              	.LBB222:
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3350              		.loc 1 1781 0
 3351 0064 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 3352 0068 6DB2     		sxtb	r5, r5
 3353              	.LVL353:
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 3354              		.loc 1 1785 0
 3355 006a 4946     		mov	r1, r9
 3356 006c 2046     		mov	r0, r4
 3357 006e FFF7FEFF 		bl	prvCopyDataFromQueue
 3358              	.LVL354:
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3359              		.loc 1 1786 0
 3360 0072 08F1FF33 		add	r3, r8, #-1
 3361 0076 A363     		str	r3, [r4, #56]
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3362              		.loc 1 1792 0
 3363 0078 B5F1FF3F 		cmp	r5, #-1
 3364 007c 0DD1     		bne	.L325
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3365              		.loc 1 1794 0
 3366 007e 2369     		ldr	r3, [r4, #16]
 3367 0080 9BB1     		cbz	r3, .L329
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 3368              		.loc 1 1796 0
 3369 0082 04F11000 		add	r0, r4, #16
 3370 0086 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3371              	.LVL355:
 3372 008a 80B1     		cbz	r0, .L330
1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 3373              		.loc 1 1800 0
 3374 008c 8FB1     		cbz	r7, .L331
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 3375              		.loc 1 1802 0
 3376 008e 0120     		movs	r0, #1
 3377 0090 3860     		str	r0, [r7]
 3378              	.LVL356:
 3379              	.L324:
 3380              	.LBE222:
 3381              	.LBE221:
 3382              	.LBB225:
 3383              	.LBB226:
ARM GAS  /tmp/ccE5IrFh.s 			page 112


 3384              		.loc 2 229 0
 3385              		.syntax unified
 3386              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3387 0092 86F31188 			msr basepri, r6	
 3388              	@ 0 "" 2
 3389              	.LVL357:
 3390              		.thumb
 3391              		.syntax unified
 3392              	.LBE226:
 3393              	.LBE225:
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3394              		.loc 1 1837 0
 3395 0096 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3396              	.LVL358:
 3397              	.L325:
 3398              	.LBB227:
 3399              	.LBB223:
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3400              		.loc 1 1823 0
 3401 009a 6B1C     		adds	r3, r5, #1
 3402 009c 5BB2     		sxtb	r3, r3
 3403 009e 84F84430 		strb	r3, [r4, #68]
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3404              		.loc 1 1826 0
 3405 00a2 0120     		movs	r0, #1
 3406 00a4 F5E7     		b	.L324
 3407              	.LVL359:
 3408              	.L328:
 3409              	.LBE223:
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 3410              		.loc 1 1830 0
 3411 00a6 0020     		movs	r0, #0
 3412 00a8 F3E7     		b	.L324
 3413              	.LVL360:
 3414              	.L329:
 3415              	.LBB224:
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3416              		.loc 1 1826 0
 3417 00aa 0120     		movs	r0, #1
 3418 00ac F1E7     		b	.L324
 3419              	.L330:
 3420 00ae 0120     		movs	r0, #1
 3421 00b0 EFE7     		b	.L324
 3422              	.L331:
 3423 00b2 0120     		movs	r0, #1
 3424 00b4 EDE7     		b	.L324
 3425              	.LBE224:
 3426              	.LBE227:
 3427              		.cfi_endproc
 3428              	.LFE23:
 3430              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 3431              		.align	1
 3432              		.global	xQueuePeekFromISR
 3433              		.syntax unified
 3434              		.thumb
 3435              		.thumb_func
 3436              		.fpu softvfp
ARM GAS  /tmp/ccE5IrFh.s 			page 113


 3438              	xQueuePeekFromISR:
 3439              	.LFB24:
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3440              		.loc 1 1841 0
 3441              		.cfi_startproc
 3442              		@ args = 0, pretend = 0, frame = 0
 3443              		@ frame_needed = 0, uses_anonymous_args = 0
 3444              	.LVL361:
 3445 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3446              		.cfi_def_cfa_offset 24
 3447              		.cfi_offset 3, -24
 3448              		.cfi_offset 4, -20
 3449              		.cfi_offset 5, -16
 3450              		.cfi_offset 6, -12
 3451              		.cfi_offset 7, -8
 3452              		.cfi_offset 14, -4
 3453              	.LVL362:
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3454              		.loc 1 1847 0
 3455 0002 60B1     		cbz	r0, .L348
 3456 0004 0446     		mov	r4, r0
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3457              		.loc 1 1848 0
 3458 0006 99B1     		cbz	r1, .L349
 3459 0008 0123     		movs	r3, #1
 3460              	.L338:
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3461              		.loc 1 1848 0 is_stmt 0 discriminator 6
 3462 000a BBB9     		cbnz	r3, .L339
 3463              	.LBB228:
 3464              	.LBB229:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3465              		.loc 2 195 0 is_stmt 1
 3466              		.syntax unified
 3467              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3468 000c 4FF05003 			mov r3, #80												
 3469 0010 83F31188 		msr basepri, r3											
 3470 0014 BFF36F8F 		isb														
 3471 0018 BFF34F8F 		dsb														
 3472              	
 3473              	@ 0 "" 2
 3474              	.LVL363:
 3475              		.thumb
 3476              		.syntax unified
 3477              	.L340:
 3478 001c FEE7     		b	.L340
 3479              	.L348:
 3480              	.LBE229:
 3481              	.LBE228:
 3482              	.LBB230:
 3483              	.LBB231:
 3484              		.syntax unified
 3485              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3486 001e 4FF05003 			mov r3, #80												
 3487 0022 83F31188 		msr basepri, r3											
 3488 0026 BFF36F8F 		isb														
 3489 002a BFF34F8F 		dsb														
ARM GAS  /tmp/ccE5IrFh.s 			page 114


 3490              	
 3491              	@ 0 "" 2
 3492              	.LVL364:
 3493              		.thumb
 3494              		.syntax unified
 3495              	.L337:
 3496 002e FEE7     		b	.L337
 3497              	.L349:
 3498              	.LBE231:
 3499              	.LBE230:
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3500              		.loc 1 1848 0 discriminator 2
 3501 0030 036C     		ldr	r3, [r0, #64]
 3502 0032 0BB9     		cbnz	r3, .L345
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3503              		.loc 1 1848 0 is_stmt 0
 3504 0034 0123     		movs	r3, #1
 3505 0036 E8E7     		b	.L338
 3506              	.L345:
 3507 0038 0023     		movs	r3, #0
 3508 003a E6E7     		b	.L338
 3509              	.L339:
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3510              		.loc 1 1849 0 is_stmt 1
 3511 003c 236C     		ldr	r3, [r4, #64]
 3512 003e 43B9     		cbnz	r3, .L341
 3513              	.LBB232:
 3514              	.LBB233:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3515              		.loc 2 195 0
 3516              		.syntax unified
 3517              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3518 0040 4FF05003 			mov r3, #80												
 3519 0044 83F31188 		msr basepri, r3											
 3520 0048 BFF36F8F 		isb														
 3521 004c BFF34F8F 		dsb														
 3522              	
 3523              	@ 0 "" 2
 3524              	.LVL365:
 3525              		.thumb
 3526              		.syntax unified
 3527              	.L342:
 3528 0050 FEE7     		b	.L342
 3529              	.L341:
 3530 0052 0D46     		mov	r5, r1
 3531              	.LBE233:
 3532              	.LBE232:
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3533              		.loc 1 1865 0
 3534 0054 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3535              	.LVL366:
 3536              	.LBB234:
 3537              	.LBB235:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3538              		.loc 2 211 0
 3539              		.syntax unified
 3540              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
ARM GAS  /tmp/ccE5IrFh.s 			page 115


 3541 0058 EFF31186 			mrs r6, basepri											
 3542 005c 4FF05003 		mov r3, #80												
 3543 0060 83F31188 		msr basepri, r3											
 3544 0064 BFF36F8F 		isb														
 3545 0068 BFF34F8F 		dsb														
 3546              	
 3547              	@ 0 "" 2
 3548              		.thumb
 3549              		.syntax unified
 3550              	.LBE235:
 3551              	.LBE234:
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3552              		.loc 1 1870 0
 3553 006c A36B     		ldr	r3, [r4, #56]
 3554 006e 4BB1     		cbz	r3, .L346
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 3555              		.loc 1 1876 0
 3556 0070 E768     		ldr	r7, [r4, #12]
 3557              	.LVL367:
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 3558              		.loc 1 1877 0
 3559 0072 2946     		mov	r1, r5
 3560 0074 2046     		mov	r0, r4
 3561 0076 FFF7FEFF 		bl	prvCopyDataFromQueue
 3562              	.LVL368:
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3563              		.loc 1 1878 0
 3564 007a E760     		str	r7, [r4, #12]
 3565              	.LVL369:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3566              		.loc 1 1880 0
 3567 007c 0120     		movs	r0, #1
 3568              	.LVL370:
 3569              	.L343:
 3570              	.LBB236:
 3571              	.LBB237:
 3572              		.loc 2 229 0
 3573              		.syntax unified
 3574              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3575 007e 86F31188 			msr basepri, r6	
 3576              	@ 0 "" 2
 3577              	.LVL371:
 3578              		.thumb
 3579              		.syntax unified
 3580              	.LBE237:
 3581              	.LBE236:
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3582              		.loc 1 1891 0
 3583 0082 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3584              	.LVL372:
 3585              	.L346:
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 3586              		.loc 1 1884 0
 3587 0084 0020     		movs	r0, #0
 3588 0086 FAE7     		b	.L343
 3589              		.cfi_endproc
 3590              	.LFE24:
ARM GAS  /tmp/ccE5IrFh.s 			page 116


 3592              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 3593              		.align	1
 3594              		.global	uxQueueMessagesWaiting
 3595              		.syntax unified
 3596              		.thumb
 3597              		.thumb_func
 3598              		.fpu softvfp
 3600              	uxQueueMessagesWaiting:
 3601              	.LFB25:
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3602              		.loc 1 1895 0
 3603              		.cfi_startproc
 3604              		@ args = 0, pretend = 0, frame = 0
 3605              		@ frame_needed = 0, uses_anonymous_args = 0
 3606              	.LVL373:
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3607              		.loc 1 1898 0
 3608 0000 40B9     		cbnz	r0, .L351
 3609              	.LBB238:
 3610              	.LBB239:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3611              		.loc 2 195 0
 3612              		.syntax unified
 3613              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3614 0002 4FF05003 			mov r3, #80												
 3615 0006 83F31188 		msr basepri, r3											
 3616 000a BFF36F8F 		isb														
 3617 000e BFF34F8F 		dsb														
 3618              	
 3619              	@ 0 "" 2
 3620              	.LVL374:
 3621              		.thumb
 3622              		.syntax unified
 3623              	.L352:
 3624 0012 FEE7     		b	.L352
 3625              	.L351:
 3626              	.LBE239:
 3627              	.LBE238:
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3628              		.loc 1 1895 0
 3629 0014 10B5     		push	{r4, lr}
 3630              		.cfi_def_cfa_offset 8
 3631              		.cfi_offset 4, -8
 3632              		.cfi_offset 14, -4
 3633 0016 0446     		mov	r4, r0
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3634              		.loc 1 1900 0
 3635 0018 FFF7FEFF 		bl	vPortEnterCritical
 3636              	.LVL375:
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3637              		.loc 1 1902 0
 3638 001c A46B     		ldr	r4, [r4, #56]
 3639              	.LVL376:
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3640              		.loc 1 1904 0
 3641 001e FFF7FEFF 		bl	vPortExitCritical
 3642              	.LVL377:
ARM GAS  /tmp/ccE5IrFh.s 			page 117


1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3643              		.loc 1 1907 0
 3644 0022 2046     		mov	r0, r4
 3645 0024 10BD     		pop	{r4, pc}
 3646              		.cfi_endproc
 3647              	.LFE25:
 3649              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 3650              		.align	1
 3651              		.global	uxQueueSpacesAvailable
 3652              		.syntax unified
 3653              		.thumb
 3654              		.thumb_func
 3655              		.fpu softvfp
 3657              	uxQueueSpacesAvailable:
 3658              	.LFB26:
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3659              		.loc 1 1911 0
 3660              		.cfi_startproc
 3661              		@ args = 0, pretend = 0, frame = 0
 3662              		@ frame_needed = 0, uses_anonymous_args = 0
 3663              	.LVL378:
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3664              		.loc 1 1916 0
 3665 0000 40B9     		cbnz	r0, .L356
 3666              	.LBB240:
 3667              	.LBB241:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3668              		.loc 2 195 0
 3669              		.syntax unified
 3670              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3671 0002 4FF05003 			mov r3, #80												
 3672 0006 83F31188 		msr basepri, r3											
 3673 000a BFF36F8F 		isb														
 3674 000e BFF34F8F 		dsb														
 3675              	
 3676              	@ 0 "" 2
 3677              	.LVL379:
 3678              		.thumb
 3679              		.syntax unified
 3680              	.L357:
 3681 0012 FEE7     		b	.L357
 3682              	.L356:
 3683              	.LBE241:
 3684              	.LBE240:
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3685              		.loc 1 1911 0
 3686 0014 10B5     		push	{r4, lr}
 3687              		.cfi_def_cfa_offset 8
 3688              		.cfi_offset 4, -8
 3689              		.cfi_offset 14, -4
 3690 0016 0446     		mov	r4, r0
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3691              		.loc 1 1918 0
 3692 0018 FFF7FEFF 		bl	vPortEnterCritical
 3693              	.LVL380:
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3694              		.loc 1 1920 0
ARM GAS  /tmp/ccE5IrFh.s 			page 118


 3695 001c E36B     		ldr	r3, [r4, #60]
 3696 001e A46B     		ldr	r4, [r4, #56]
 3697              	.LVL381:
 3698 0020 1C1B     		subs	r4, r3, r4
 3699              	.LVL382:
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3700              		.loc 1 1922 0
 3701 0022 FFF7FEFF 		bl	vPortExitCritical
 3702              	.LVL383:
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3703              		.loc 1 1925 0
 3704 0026 2046     		mov	r0, r4
 3705 0028 10BD     		pop	{r4, pc}
 3706              		.cfi_endproc
 3707              	.LFE26:
 3709              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 3710              		.align	1
 3711              		.global	uxQueueMessagesWaitingFromISR
 3712              		.syntax unified
 3713              		.thumb
 3714              		.thumb_func
 3715              		.fpu softvfp
 3717              	uxQueueMessagesWaitingFromISR:
 3718              	.LFB27:
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3719              		.loc 1 1929 0
 3720              		.cfi_startproc
 3721              		@ args = 0, pretend = 0, frame = 0
 3722              		@ frame_needed = 0, uses_anonymous_args = 0
 3723              		@ link register save eliminated.
 3724              	.LVL384:
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3725              		.loc 1 1932 0
 3726 0000 08B1     		cbz	r0, .L363
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3727              		.loc 1 1934 0
 3728 0002 806B     		ldr	r0, [r0, #56]
 3729              	.LVL385:
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3730              		.loc 1 1937 0
 3731 0004 7047     		bx	lr
 3732              	.LVL386:
 3733              	.L363:
 3734              	.LBB242:
 3735              	.LBB243:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3736              		.loc 2 195 0
 3737              		.syntax unified
 3738              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3739 0006 4FF05003 			mov r3, #80												
 3740 000a 83F31188 		msr basepri, r3											
 3741 000e BFF36F8F 		isb														
 3742 0012 BFF34F8F 		dsb														
 3743              	
 3744              	@ 0 "" 2
 3745              	.LVL387:
 3746              		.thumb
ARM GAS  /tmp/ccE5IrFh.s 			page 119


 3747              		.syntax unified
 3748              	.L362:
 3749 0016 FEE7     		b	.L362
 3750              	.LBE243:
 3751              	.LBE242:
 3752              		.cfi_endproc
 3753              	.LFE27:
 3755              		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 3756              		.align	1
 3757              		.global	uxQueueGetQueueNumber
 3758              		.syntax unified
 3759              		.thumb
 3760              		.thumb_func
 3761              		.fpu softvfp
 3763              	uxQueueGetQueueNumber:
 3764              	.LFB29:
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
 3765              		.loc 1 1985 0
 3766              		.cfi_startproc
 3767              		@ args = 0, pretend = 0, frame = 0
 3768              		@ frame_needed = 0, uses_anonymous_args = 0
 3769              		@ link register save eliminated.
 3770              	.LVL388:
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3771              		.loc 1 1987 0
 3772 0000 806C     		ldr	r0, [r0, #72]
 3773              	.LVL389:
 3774 0002 7047     		bx	lr
 3775              		.cfi_endproc
 3776              	.LFE29:
 3778              		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 3779              		.align	1
 3780              		.global	vQueueSetQueueNumber
 3781              		.syntax unified
 3782              		.thumb
 3783              		.thumb_func
 3784              		.fpu softvfp
 3786              	vQueueSetQueueNumber:
 3787              	.LFB30:
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
 3788              		.loc 1 1995 0
 3789              		.cfi_startproc
 3790              		@ args = 0, pretend = 0, frame = 0
 3791              		@ frame_needed = 0, uses_anonymous_args = 0
 3792              		@ link register save eliminated.
 3793              	.LVL390:
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3794              		.loc 1 1996 0
 3795 0000 8164     		str	r1, [r0, #72]
 3796 0002 7047     		bx	lr
 3797              		.cfi_endproc
 3798              	.LFE30:
 3800              		.section	.text.ucQueueGetQueueType,"ax",%progbits
 3801              		.align	1
 3802              		.global	ucQueueGetQueueType
 3803              		.syntax unified
 3804              		.thumb
ARM GAS  /tmp/ccE5IrFh.s 			page 120


 3805              		.thumb_func
 3806              		.fpu softvfp
 3808              	ucQueueGetQueueType:
 3809              	.LFB31:
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
 3810              		.loc 1 2005 0
 3811              		.cfi_startproc
 3812              		@ args = 0, pretend = 0, frame = 0
 3813              		@ frame_needed = 0, uses_anonymous_args = 0
 3814              		@ link register save eliminated.
 3815              	.LVL391:
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3816              		.loc 1 2007 0
 3817 0000 90F84C00 		ldrb	r0, [r0, #76]	@ zero_extendqisi2
 3818              	.LVL392:
 3819 0004 7047     		bx	lr
 3820              		.cfi_endproc
 3821              	.LFE31:
 3823              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 3824              		.align	1
 3825              		.global	xQueueIsQueueEmptyFromISR
 3826              		.syntax unified
 3827              		.thumb
 3828              		.thumb_func
 3829              		.fpu softvfp
 3831              	xQueueIsQueueEmptyFromISR:
 3832              	.LFB37:
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3833              		.loc 1 2278 0
 3834              		.cfi_startproc
 3835              		@ args = 0, pretend = 0, frame = 0
 3836              		@ frame_needed = 0, uses_anonymous_args = 0
 3837              		@ link register save eliminated.
 3838              	.LVL393:
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3839              		.loc 1 2281 0
 3840 0000 18B1     		cbz	r0, .L372
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3841              		.loc 1 2282 0
 3842 0002 836B     		ldr	r3, [r0, #56]
 3843 0004 53B1     		cbz	r3, .L373
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3844              		.loc 1 2288 0
 3845 0006 0020     		movs	r0, #0
 3846              	.LVL394:
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3847              		.loc 1 2292 0
 3848 0008 7047     		bx	lr
 3849              	.LVL395:
 3850              	.L372:
 3851              	.LBB244:
 3852              	.LBB245:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3853              		.loc 2 195 0
 3854              		.syntax unified
 3855              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3856 000a 4FF05003 			mov r3, #80												
ARM GAS  /tmp/ccE5IrFh.s 			page 121


 3857 000e 83F31188 		msr basepri, r3											
 3858 0012 BFF36F8F 		isb														
 3859 0016 BFF34F8F 		dsb														
 3860              	
 3861              	@ 0 "" 2
 3862              	.LVL396:
 3863              		.thumb
 3864              		.syntax unified
 3865              	.L369:
 3866 001a FEE7     		b	.L369
 3867              	.L373:
 3868              	.LBE245:
 3869              	.LBE244:
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3870              		.loc 1 2284 0
 3871 001c 0120     		movs	r0, #1
 3872              	.LVL397:
 3873 001e 7047     		bx	lr
 3874              		.cfi_endproc
 3875              	.LFE37:
 3877              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 3878              		.align	1
 3879              		.global	xQueueIsQueueFullFromISR
 3880              		.syntax unified
 3881              		.thumb
 3882              		.thumb_func
 3883              		.fpu softvfp
 3885              	xQueueIsQueueFullFromISR:
 3886              	.LFB39:
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3887              		.loc 1 2317 0
 3888              		.cfi_startproc
 3889              		@ args = 0, pretend = 0, frame = 0
 3890              		@ frame_needed = 0, uses_anonymous_args = 0
 3891              		@ link register save eliminated.
 3892              	.LVL398:
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
 3893              		.loc 1 2320 0
 3894 0000 28B1     		cbz	r0, .L379
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 3895              		.loc 1 2321 0
 3896 0002 826B     		ldr	r2, [r0, #56]
 3897 0004 C36B     		ldr	r3, [r0, #60]
 3898 0006 9A42     		cmp	r2, r3
 3899 0008 0AD0     		beq	.L380
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 3900              		.loc 1 2327 0
ARM GAS  /tmp/ccE5IrFh.s 			page 122


 3901 000a 0020     		movs	r0, #0
 3902              	.LVL399:
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3903              		.loc 1 2331 0
 3904 000c 7047     		bx	lr
 3905              	.LVL400:
 3906              	.L379:
 3907              	.LBB246:
 3908              	.LBB247:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3909              		.loc 2 195 0
 3910              		.syntax unified
 3911              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3912 000e 4FF05003 			mov r3, #80												
 3913 0012 83F31188 		msr basepri, r3											
 3914 0016 BFF36F8F 		isb														
 3915 001a BFF34F8F 		dsb														
 3916              	
 3917              	@ 0 "" 2
 3918              	.LVL401:
 3919              		.thumb
 3920              		.syntax unified
 3921              	.L376:
 3922 001e FEE7     		b	.L376
 3923              	.L380:
 3924              	.LBE247:
 3925              	.LBE246:
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3926              		.loc 1 2323 0
 3927 0020 0120     		movs	r0, #1
 3928              	.LVL402:
 3929 0022 7047     		bx	lr
 3930              		.cfi_endproc
 3931              	.LFE39:
 3933              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 3934              		.align	1
 3935              		.global	vQueueAddToRegistry
 3936              		.syntax unified
 3937              		.thumb
 3938              		.thumb_func
 3939              		.fpu softvfp
 3941              	vQueueAddToRegistry:
 3942              	.LFB40:
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
ARM GAS  /tmp/ccE5IrFh.s 			page 123


2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/ccE5IrFh.s 			page 124


2400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
ARM GAS  /tmp/ccE5IrFh.s 			page 125


2457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
ARM GAS  /tmp/ccE5IrFh.s 			page 126


2514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
ARM GAS  /tmp/ccE5IrFh.s 			page 127


2571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3943              		.loc 1 2612 0
 3944              		.cfi_startproc
 3945              		@ args = 0, pretend = 0, frame = 0
 3946              		@ frame_needed = 0, uses_anonymous_args = 0
 3947              		@ link register save eliminated.
 3948              	.LVL403:
2613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3949              		.loc 1 2617 0
 3950 0000 0023     		movs	r3, #0
 3951              	.LVL404:
 3952              	.L382:
ARM GAS  /tmp/ccE5IrFh.s 			page 128


 3953              		.loc 1 2617 0 is_stmt 0 discriminator 1
 3954 0002 072B     		cmp	r3, #7
 3955 0004 0CD8     		bhi	.L386
2618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 3956              		.loc 1 2619 0 is_stmt 1
 3957 0006 074A     		ldr	r2, .L388
 3958 0008 52F83320 		ldr	r2, [r2, r3, lsl #3]
 3959 000c 0AB1     		cbz	r2, .L387
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3960              		.loc 1 2617 0 discriminator 2
 3961 000e 0133     		adds	r3, r3, #1
 3962              	.LVL405:
 3963 0010 F7E7     		b	.L382
 3964              	.L387:
2620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 3965              		.loc 1 2622 0
 3966 0012 044A     		ldr	r2, .L388
 3967 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 3968              		.loc 1 2623 0
 3969 0018 02EBC303 		add	r3, r2, r3, lsl #3
 3970              	.LVL406:
 3971 001c 5860     		str	r0, [r3, #4]
2624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3972              		.loc 1 2626 0
 3973 001e 7047     		bx	lr
 3974              	.LVL407:
 3975              	.L386:
 3976 0020 7047     		bx	lr
 3977              	.L389:
 3978 0022 00BF     		.align	2
 3979              	.L388:
 3980 0024 00000000 		.word	xQueueRegistry
 3981              		.cfi_endproc
 3982              	.LFE40:
 3984              		.section	.text.pcQueueGetName,"ax",%progbits
 3985              		.align	1
 3986              		.global	pcQueueGetName
 3987              		.syntax unified
 3988              		.thumb
 3989              		.thumb_func
 3990              		.fpu softvfp
 3992              	pcQueueGetName:
 3993              	.LFB41:
2627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccE5IrFh.s 			page 129


2635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3994              		.loc 1 2641 0
 3995              		.cfi_startproc
 3996              		@ args = 0, pretend = 0, frame = 0
 3997              		@ frame_needed = 0, uses_anonymous_args = 0
 3998              		@ link register save eliminated.
 3999              	.LVL408:
2642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4000              		.loc 1 2647 0
 4001 0000 0023     		movs	r3, #0
 4002              	.LVL409:
 4003              	.L391:
 4004              		.loc 1 2647 0 is_stmt 0 discriminator 1
 4005 0002 072B     		cmp	r3, #7
 4006 0004 0BD8     		bhi	.L395
2648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4007              		.loc 1 2649 0 is_stmt 1
 4008 0006 074A     		ldr	r2, .L397
 4009 0008 02EBC302 		add	r2, r2, r3, lsl #3
 4010 000c 5268     		ldr	r2, [r2, #4]
 4011 000e 8242     		cmp	r2, r0
 4012 0010 01D0     		beq	.L396
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4013              		.loc 1 2647 0 discriminator 2
 4014 0012 0133     		adds	r3, r3, #1
 4015              	.LVL410:
 4016 0014 F5E7     		b	.L391
 4017              	.L396:
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 4018              		.loc 1 2651 0
 4019 0016 034A     		ldr	r2, .L397
 4020 0018 52F83300 		ldr	r0, [r2, r3, lsl #3]
 4021              	.LVL411:
2652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 4022              		.loc 1 2652 0
 4023 001c 7047     		bx	lr
 4024              	.LVL412:
 4025              	.L395:
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 4026              		.loc 1 2643 0
 4027 001e 0020     		movs	r0, #0
 4028              	.LVL413:
2653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
ARM GAS  /tmp/ccE5IrFh.s 			page 130


2655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
2661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 4029              		.loc 1 2661 0
 4030 0020 7047     		bx	lr
 4031              	.L398:
 4032 0022 00BF     		.align	2
 4033              	.L397:
 4034 0024 00000000 		.word	xQueueRegistry
 4035              		.cfi_endproc
 4036              	.LFE41:
 4038              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 4039              		.align	1
 4040              		.global	vQueueUnregisterQueue
 4041              		.syntax unified
 4042              		.thumb
 4043              		.thumb_func
 4044              		.fpu softvfp
 4046              	vQueueUnregisterQueue:
 4047              	.LFB42:
2662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 4048              		.loc 1 2669 0
 4049              		.cfi_startproc
 4050              		@ args = 0, pretend = 0, frame = 0
 4051              		@ frame_needed = 0, uses_anonymous_args = 0
 4052              		@ link register save eliminated.
 4053              	.LVL414:
2670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4054              		.loc 1 2674 0
 4055 0000 0023     		movs	r3, #0
 4056              	.LVL415:
 4057              	.L400:
 4058              		.loc 1 2674 0 is_stmt 0 discriminator 1
 4059 0002 072B     		cmp	r3, #7
 4060 0004 0FD8     		bhi	.L404
2675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4061              		.loc 1 2676 0 is_stmt 1
 4062 0006 084A     		ldr	r2, .L406
 4063 0008 02EBC302 		add	r2, r2, r3, lsl #3
 4064 000c 5268     		ldr	r2, [r2, #4]
 4065 000e 8242     		cmp	r2, r0
ARM GAS  /tmp/ccE5IrFh.s 			page 131


 4066 0010 01D0     		beq	.L405
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4067              		.loc 1 2674 0 discriminator 2
 4068 0012 0133     		adds	r3, r3, #1
 4069              	.LVL416:
 4070 0014 F5E7     		b	.L400
 4071              	.L405:
2677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 4072              		.loc 1 2679 0
 4073 0016 044A     		ldr	r2, .L406
 4074 0018 0021     		movs	r1, #0
 4075 001a 42F83310 		str	r1, [r2, r3, lsl #3]
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 4076              		.loc 1 2684 0
 4077 001e 02EBC303 		add	r3, r2, r3, lsl #3
 4078              	.LVL417:
 4079 0022 5960     		str	r1, [r3, #4]
2685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 4080              		.loc 1 2685 0
 4081 0024 7047     		bx	lr
 4082              	.LVL418:
 4083              	.L404:
 4084 0026 7047     		bx	lr
 4085              	.L407:
 4086              		.align	2
 4087              	.L406:
 4088 0028 00000000 		.word	xQueueRegistry
 4089              		.cfi_endproc
 4090              	.LFE42:
 4092              		.section	.text.vQueueDelete,"ax",%progbits
 4093              		.align	1
 4094              		.global	vQueueDelete
 4095              		.syntax unified
 4096              		.thumb
 4097              		.thumb_func
 4098              		.fpu softvfp
 4100              	vQueueDelete:
 4101              	.LFB28:
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 4102              		.loc 1 1941 0
 4103              		.cfi_startproc
 4104              		@ args = 0, pretend = 0, frame = 0
 4105              		@ frame_needed = 0, uses_anonymous_args = 0
 4106              	.LVL419:
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4107              		.loc 1 1944 0
 4108 0000 50B1     		cbz	r0, .L414
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 4109              		.loc 1 1941 0
 4110 0002 10B5     		push	{r4, lr}
 4111              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccE5IrFh.s 			page 132


 4112              		.cfi_offset 4, -8
 4113              		.cfi_offset 14, -4
 4114 0004 0446     		mov	r4, r0
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 4115              		.loc 1 1949 0
 4116 0006 FFF7FEFF 		bl	vQueueUnregisterQueue
 4117              	.LVL420:
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4118              		.loc 1 1963 0
 4119 000a 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
 4120 000e 13B9     		cbnz	r3, .L408
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 4121              		.loc 1 1965 0
 4122 0010 2046     		mov	r0, r4
 4123 0012 FFF7FEFF 		bl	vPortFree
 4124              	.LVL421:
 4125              	.L408:
 4126 0016 10BD     		pop	{r4, pc}
 4127              	.LVL422:
 4128              	.L414:
 4129              		.cfi_def_cfa_offset 0
 4130              		.cfi_restore 4
 4131              		.cfi_restore 14
 4132              	.LBB248:
 4133              	.LBB249:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4134              		.loc 2 195 0
 4135              		.syntax unified
 4136              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4137 0018 4FF05003 			mov r3, #80												
 4138 001c 83F31188 		msr basepri, r3											
 4139 0020 BFF36F8F 		isb														
 4140 0024 BFF34F8F 		dsb														
 4141              	
 4142              	@ 0 "" 2
 4143              	.LVL423:
 4144              		.thumb
 4145              		.syntax unified
 4146              	.L410:
 4147 0028 FEE7     		b	.L410
 4148              	.LBE249:
 4149              	.LBE248:
 4150              		.cfi_endproc
 4151              	.LFE28:
 4153              		.section	.text.vQueueWaitForMessageRestricted,"ax",%progbits
 4154              		.align	1
 4155              		.global	vQueueWaitForMessageRestricted
 4156              		.syntax unified
 4157              		.thumb
 4158              		.thumb_func
 4159              		.fpu softvfp
 4161              	vQueueWaitForMessageRestricted:
 4162              	.LFB43:
2686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccE5IrFh.s 			page 133


2690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TIMERS == 1 )
2699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType
2701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 4163              		.loc 1 2701 0
 4164              		.cfi_startproc
 4165              		@ args = 0, pretend = 0, frame = 0
 4166              		@ frame_needed = 0, uses_anonymous_args = 0
 4167              	.LVL424:
 4168 0000 70B5     		push	{r4, r5, r6, lr}
 4169              		.cfi_def_cfa_offset 16
 4170              		.cfi_offset 4, -16
 4171              		.cfi_offset 5, -12
 4172              		.cfi_offset 6, -8
 4173              		.cfi_offset 14, -4
 4174 0002 0446     		mov	r4, r0
 4175 0004 0D46     		mov	r5, r1
 4176 0006 1646     		mov	r6, r2
 4177              	.LVL425:
2702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function should not be called by application code hence the
2705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		designed for use by kernel code, and has special calling requirements.
2707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		It can result in vListInsert() being called on a list that can only
2708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		possibly ever have one item in it, so the list will be fast, but even
2709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		so it should be called with the scheduler locked and not from a critical
2710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		section. */
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Only do anything if there are no messages in the queue.  This function
2713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		will not actually cause the task to block, just place it on a blocked
2714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		list.  It will not block until the scheduler is unlocked - at which
2715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		time a yield will be performed.  If an item is added to the queue while
2716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		the queue is locked, and the calling task blocks on the queue, then the
2717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task will be immediately unblocked when the queue is unlocked. */
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 4178              		.loc 1 2718 0
 4179 0008 FFF7FEFF 		bl	vPortEnterCritical
 4180              	.LVL426:
 4181 000c 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 4182 0010 5BB2     		sxtb	r3, r3
 4183 0012 B3F1FF3F 		cmp	r3, #-1
 4184 0016 0DD0     		beq	.L420
 4185              	.L416:
 4186              		.loc 1 2718 0 is_stmt 0 discriminator 3
 4187 0018 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 4188 001c 5BB2     		sxtb	r3, r3
 4189 001e B3F1FF3F 		cmp	r3, #-1
 4190 0022 0BD0     		beq	.L421
ARM GAS  /tmp/ccE5IrFh.s 			page 134


 4191              	.L417:
 4192              		.loc 1 2718 0 discriminator 6
 4193 0024 FFF7FEFF 		bl	vPortExitCritical
 4194              	.LVL427:
2719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 4195              		.loc 1 2719 0 is_stmt 1 discriminator 6
 4196 0028 A36B     		ldr	r3, [r4, #56]
 4197 002a 5BB1     		cbz	r3, .L422
 4198              	.L418:
2720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is nothing in the queue, block for the specified period. */
2722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefi
2723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvUnlockQueue( pxQueue );
 4199              		.loc 1 2728 0
 4200 002c 2046     		mov	r0, r4
 4201 002e FFF7FEFF 		bl	prvUnlockQueue
 4202              	.LVL428:
 4203 0032 70BD     		pop	{r4, r5, r6, pc}
 4204              	.LVL429:
 4205              	.L420:
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 4206              		.loc 1 2718 0 discriminator 1
 4207 0034 0023     		movs	r3, #0
 4208 0036 84F84430 		strb	r3, [r4, #68]
 4209 003a EDE7     		b	.L416
 4210              	.L421:
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 4211              		.loc 1 2718 0 is_stmt 0 discriminator 4
 4212 003c 0023     		movs	r3, #0
 4213 003e 84F84530 		strb	r3, [r4, #69]
 4214 0042 EFE7     		b	.L417
 4215              	.L422:
2722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 4216              		.loc 1 2722 0 is_stmt 1
 4217 0044 3246     		mov	r2, r6
 4218 0046 2946     		mov	r1, r5
 4219 0048 04F12400 		add	r0, r4, #36
 4220 004c FFF7FEFF 		bl	vTaskPlaceOnEventListRestricted
 4221              	.LVL430:
 4222 0050 ECE7     		b	.L418
 4223              		.cfi_endproc
 4224              	.LFE43:
 4226              		.comm	xQueueRegistry,64,4
 4227              		.text
 4228              	.Letext0:
 4229              		.file 3 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 4230              		.file 4 "/usr/include/newlib/machine/_default_types.h"
 4231              		.file 5 "/usr/include/newlib/sys/lock.h"
 4232              		.file 6 "/usr/include/newlib/sys/_types.h"
 4233              		.file 7 "/usr/include/newlib/sys/reent.h"
 4234              		.file 8 "/usr/include/newlib/stdlib.h"
 4235              		.file 9 "/usr/include/newlib/sys/_stdint.h"
ARM GAS  /tmp/ccE5IrFh.s 			page 135


 4236              		.file 10 "Core/Inc/FreeRTOSConfig.h"
 4237              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 4238              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 4239              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 4240              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 4241              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/ccE5IrFh.s 			page 136


DEFINED SYMBOLS
                            *ABS*:0000000000000000 queue.c
     /tmp/ccE5IrFh.s:16     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 $t
     /tmp/ccE5IrFh.s:22     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 prvGetDisinheritPriorityAfterTimeout
     /tmp/ccE5IrFh.s:52     .text.prvIsQueueFull:0000000000000000 $t
     /tmp/ccE5IrFh.s:58     .text.prvIsQueueFull:0000000000000000 prvIsQueueFull
     /tmp/ccE5IrFh.s:98     .text.prvIsQueueEmpty:0000000000000000 $t
     /tmp/ccE5IrFh.s:104    .text.prvIsQueueEmpty:0000000000000000 prvIsQueueEmpty
     /tmp/ccE5IrFh.s:142    .text.prvCopyDataToQueue:0000000000000000 $t
     /tmp/ccE5IrFh.s:148    .text.prvCopyDataToQueue:0000000000000000 prvCopyDataToQueue
     /tmp/ccE5IrFh.s:266    .text.prvCopyDataFromQueue:0000000000000000 $t
     /tmp/ccE5IrFh.s:272    .text.prvCopyDataFromQueue:0000000000000000 prvCopyDataFromQueue
     /tmp/ccE5IrFh.s:318    .text.prvUnlockQueue:0000000000000000 $t
     /tmp/ccE5IrFh.s:324    .text.prvUnlockQueue:0000000000000000 prvUnlockQueue
     /tmp/ccE5IrFh.s:426    .text.xQueueGenericReset:0000000000000000 $t
     /tmp/ccE5IrFh.s:433    .text.xQueueGenericReset:0000000000000000 xQueueGenericReset
     /tmp/ccE5IrFh.s:540    .text.xQueueGenericReset:000000000000007c $d
     /tmp/ccE5IrFh.s:545    .text.prvInitialiseNewQueue:0000000000000000 $t
     /tmp/ccE5IrFh.s:551    .text.prvInitialiseNewQueue:0000000000000000 prvInitialiseNewQueue
     /tmp/ccE5IrFh.s:596    .text.xQueueGenericCreateStatic:0000000000000000 $t
     /tmp/ccE5IrFh.s:603    .text.xQueueGenericCreateStatic:0000000000000000 xQueueGenericCreateStatic
     /tmp/ccE5IrFh.s:781    .text.xQueueGenericCreate:0000000000000000 $t
     /tmp/ccE5IrFh.s:788    .text.xQueueGenericCreate:0000000000000000 xQueueGenericCreate
     /tmp/ccE5IrFh.s:875    .text.xQueueGetMutexHolder:0000000000000000 $t
     /tmp/ccE5IrFh.s:882    .text.xQueueGetMutexHolder:0000000000000000 xQueueGetMutexHolder
     /tmp/ccE5IrFh.s:920    .text.xQueueGetMutexHolderFromISR:0000000000000000 $t
     /tmp/ccE5IrFh.s:927    .text.xQueueGetMutexHolderFromISR:0000000000000000 xQueueGetMutexHolderFromISR
     /tmp/ccE5IrFh.s:974    .text.xQueueCreateCountingSemaphoreStatic:0000000000000000 $t
     /tmp/ccE5IrFh.s:981    .text.xQueueCreateCountingSemaphoreStatic:0000000000000000 xQueueCreateCountingSemaphoreStatic
     /tmp/ccE5IrFh.s:1066   .text.xQueueCreateCountingSemaphore:0000000000000000 $t
     /tmp/ccE5IrFh.s:1073   .text.xQueueCreateCountingSemaphore:0000000000000000 xQueueCreateCountingSemaphore
     /tmp/ccE5IrFh.s:1149   .text.xQueueGenericSend:0000000000000000 $t
     /tmp/ccE5IrFh.s:1156   .text.xQueueGenericSend:0000000000000000 xQueueGenericSend
     /tmp/ccE5IrFh.s:1491   .text.xQueueGenericSend:0000000000000184 $d
     /tmp/ccE5IrFh.s:1496   .text.prvInitialiseMutex:0000000000000000 $t
     /tmp/ccE5IrFh.s:1502   .text.prvInitialiseMutex:0000000000000000 prvInitialiseMutex
     /tmp/ccE5IrFh.s:1539   .text.xQueueCreateMutex:0000000000000000 $t
     /tmp/ccE5IrFh.s:1546   .text.xQueueCreateMutex:0000000000000000 xQueueCreateMutex
     /tmp/ccE5IrFh.s:1577   .text.xQueueCreateMutexStatic:0000000000000000 $t
     /tmp/ccE5IrFh.s:1584   .text.xQueueCreateMutexStatic:0000000000000000 xQueueCreateMutexStatic
     /tmp/ccE5IrFh.s:1623   .text.xQueueGiveMutexRecursive:0000000000000000 $t
     /tmp/ccE5IrFh.s:1630   .text.xQueueGiveMutexRecursive:0000000000000000 xQueueGiveMutexRecursive
     /tmp/ccE5IrFh.s:1704   .text.xQueueGenericSendFromISR:0000000000000000 $t
     /tmp/ccE5IrFh.s:1711   .text.xQueueGenericSendFromISR:0000000000000000 xQueueGenericSendFromISR
     /tmp/ccE5IrFh.s:1932   .text.xQueueGiveFromISR:0000000000000000 $t
     /tmp/ccE5IrFh.s:1939   .text.xQueueGiveFromISR:0000000000000000 xQueueGiveFromISR
     /tmp/ccE5IrFh.s:2152   .text.xQueueReceive:0000000000000000 $t
     /tmp/ccE5IrFh.s:2159   .text.xQueueReceive:0000000000000000 xQueueReceive
     /tmp/ccE5IrFh.s:2457   .text.xQueueReceive:0000000000000158 $d
     /tmp/ccE5IrFh.s:2462   .text.xQueueSemaphoreTake:0000000000000000 $t
     /tmp/ccE5IrFh.s:2469   .text.xQueueSemaphoreTake:0000000000000000 xQueueSemaphoreTake
     /tmp/ccE5IrFh.s:2831   .text.xQueueSemaphoreTake:00000000000001a0 $d
     /tmp/ccE5IrFh.s:2836   .text.xQueueTakeMutexRecursive:0000000000000000 $t
     /tmp/ccE5IrFh.s:2843   .text.xQueueTakeMutexRecursive:0000000000000000 xQueueTakeMutexRecursive
     /tmp/ccE5IrFh.s:2929   .text.xQueuePeek:0000000000000000 $t
     /tmp/ccE5IrFh.s:2936   .text.xQueuePeek:0000000000000000 xQueuePeek
     /tmp/ccE5IrFh.s:3235   .text.xQueuePeek:0000000000000158 $d
ARM GAS  /tmp/ccE5IrFh.s 			page 137


     /tmp/ccE5IrFh.s:3240   .text.xQueueReceiveFromISR:0000000000000000 $t
     /tmp/ccE5IrFh.s:3247   .text.xQueueReceiveFromISR:0000000000000000 xQueueReceiveFromISR
     /tmp/ccE5IrFh.s:3431   .text.xQueuePeekFromISR:0000000000000000 $t
     /tmp/ccE5IrFh.s:3438   .text.xQueuePeekFromISR:0000000000000000 xQueuePeekFromISR
     /tmp/ccE5IrFh.s:3593   .text.uxQueueMessagesWaiting:0000000000000000 $t
     /tmp/ccE5IrFh.s:3600   .text.uxQueueMessagesWaiting:0000000000000000 uxQueueMessagesWaiting
     /tmp/ccE5IrFh.s:3650   .text.uxQueueSpacesAvailable:0000000000000000 $t
     /tmp/ccE5IrFh.s:3657   .text.uxQueueSpacesAvailable:0000000000000000 uxQueueSpacesAvailable
     /tmp/ccE5IrFh.s:3710   .text.uxQueueMessagesWaitingFromISR:0000000000000000 $t
     /tmp/ccE5IrFh.s:3717   .text.uxQueueMessagesWaitingFromISR:0000000000000000 uxQueueMessagesWaitingFromISR
     /tmp/ccE5IrFh.s:3756   .text.uxQueueGetQueueNumber:0000000000000000 $t
     /tmp/ccE5IrFh.s:3763   .text.uxQueueGetQueueNumber:0000000000000000 uxQueueGetQueueNumber
     /tmp/ccE5IrFh.s:3779   .text.vQueueSetQueueNumber:0000000000000000 $t
     /tmp/ccE5IrFh.s:3786   .text.vQueueSetQueueNumber:0000000000000000 vQueueSetQueueNumber
     /tmp/ccE5IrFh.s:3801   .text.ucQueueGetQueueType:0000000000000000 $t
     /tmp/ccE5IrFh.s:3808   .text.ucQueueGetQueueType:0000000000000000 ucQueueGetQueueType
     /tmp/ccE5IrFh.s:3824   .text.xQueueIsQueueEmptyFromISR:0000000000000000 $t
     /tmp/ccE5IrFh.s:3831   .text.xQueueIsQueueEmptyFromISR:0000000000000000 xQueueIsQueueEmptyFromISR
     /tmp/ccE5IrFh.s:3878   .text.xQueueIsQueueFullFromISR:0000000000000000 $t
     /tmp/ccE5IrFh.s:3885   .text.xQueueIsQueueFullFromISR:0000000000000000 xQueueIsQueueFullFromISR
     /tmp/ccE5IrFh.s:3934   .text.vQueueAddToRegistry:0000000000000000 $t
     /tmp/ccE5IrFh.s:3941   .text.vQueueAddToRegistry:0000000000000000 vQueueAddToRegistry
     /tmp/ccE5IrFh.s:3980   .text.vQueueAddToRegistry:0000000000000024 $d
                            *COM*:0000000000000040 xQueueRegistry
     /tmp/ccE5IrFh.s:3985   .text.pcQueueGetName:0000000000000000 $t
     /tmp/ccE5IrFh.s:3992   .text.pcQueueGetName:0000000000000000 pcQueueGetName
     /tmp/ccE5IrFh.s:4034   .text.pcQueueGetName:0000000000000024 $d
     /tmp/ccE5IrFh.s:4039   .text.vQueueUnregisterQueue:0000000000000000 $t
     /tmp/ccE5IrFh.s:4046   .text.vQueueUnregisterQueue:0000000000000000 vQueueUnregisterQueue
     /tmp/ccE5IrFh.s:4088   .text.vQueueUnregisterQueue:0000000000000028 $d
     /tmp/ccE5IrFh.s:4093   .text.vQueueDelete:0000000000000000 $t
     /tmp/ccE5IrFh.s:4100   .text.vQueueDelete:0000000000000000 vQueueDelete
     /tmp/ccE5IrFh.s:4154   .text.vQueueWaitForMessageRestricted:0000000000000000 $t
     /tmp/ccE5IrFh.s:4161   .text.vQueueWaitForMessageRestricted:0000000000000000 vQueueWaitForMessageRestricted
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
xTaskRemoveFromEventList
vTaskMissedYield
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
xTaskResumeAll
vTaskInternalSetTimeOutState
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskGetCurrentTaskHandle
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
ARM GAS  /tmp/ccE5IrFh.s 			page 138


vTaskPlaceOnEventListRestricted
