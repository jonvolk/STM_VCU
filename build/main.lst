ARM GAS  /tmp/ccEx5Llz.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB88:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.</center></h2>
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****  * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****  * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****  *                             www.st.com/SLA0044
  16:Core/Src/main.c ****  *
  17:Core/Src/main.c ****  ******************************************************************************
  18:Core/Src/main.c ****  */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** #include "print_uart.h"
  28:Core/Src/main.c **** #include "can_setup.h"
  29:Core/Src/main.c **** #include "FreeRTOS.h"
  30:Core/Src/main.c **** #include "task.h" //needed for delayuntil
  31:Core/Src/main.c **** #include "gauges.h"
  32:Core/Src/main.c **** #include "vcu.h"
  33:Core/Src/main.c **** #include "test.h"
ARM GAS  /tmp/ccEx5Llz.s 			page 2


  34:Core/Src/main.c **** #include "water_pump.h"
  35:Core/Src/main.c **** #include "dcdc.h"
  36:Core/Src/main.c **** __attribute__((__section__(".board_info"))) const unsigned char BOARD_NAME[10] = "VCU"; //BOARD_NAM
  37:Core/Src/main.c **** /* USER CODE END Includes */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PTD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PD */
  46:Core/Src/main.c **** /* USER CODE END PD */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  49:Core/Src/main.c **** /* USER CODE BEGIN PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PM */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  54:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  55:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  58:Core/Src/main.c **** CAN_HandleTypeDef hcan2;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** IWDG_HandleTypeDef hiwdg;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  63:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  64:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  65:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  66:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_ch1;
  67:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim5_ch1;
  68:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim5_ch2;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** UART_HandleTypeDef huart4;
  71:Core/Src/main.c **** UART_HandleTypeDef huart1;
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* Definitions for TaskLoop */
  74:Core/Src/main.c **** osThreadId_t TaskLoopHandle;
  75:Core/Src/main.c **** const osThreadAttr_t TaskLoop_attributes = {
  76:Core/Src/main.c ****     .name = "TaskLoop",
  77:Core/Src/main.c ****     .priority = (osPriority_t)osPriorityNormal,
  78:Core/Src/main.c ****     .stack_size = 128 * 4};
  79:Core/Src/main.c **** /* Definitions for Task10ms */
  80:Core/Src/main.c **** osThreadId_t Task10msHandle;
  81:Core/Src/main.c **** const osThreadAttr_t Task10ms_attributes = {
  82:Core/Src/main.c ****     .name = "Task10ms",
  83:Core/Src/main.c ****     .priority = (osPriority_t)osPriorityNormal,
  84:Core/Src/main.c ****     .stack_size = 128 * 4};
  85:Core/Src/main.c **** /* Definitions for Task100ms */
  86:Core/Src/main.c **** osThreadId_t Task100msHandle;
  87:Core/Src/main.c **** const osThreadAttr_t Task100ms_attributes = {
  88:Core/Src/main.c ****     .name = "Task100ms",
  89:Core/Src/main.c ****     .priority = (osPriority_t)osPriorityNormal,
  90:Core/Src/main.c ****     .stack_size = 128 * 4};
ARM GAS  /tmp/ccEx5Llz.s 			page 3


  91:Core/Src/main.c **** /* Definitions for Task250ms */
  92:Core/Src/main.c **** osThreadId_t Task250msHandle;
  93:Core/Src/main.c **** const osThreadAttr_t Task250ms_attributes = {
  94:Core/Src/main.c ****     .name = "Task250ms",
  95:Core/Src/main.c ****     .priority = (osPriority_t)osPriorityNormal,
  96:Core/Src/main.c ****     .stack_size = 128 * 4};
  97:Core/Src/main.c **** /* USER CODE BEGIN PV */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** /* USER CODE END PV */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 102:Core/Src/main.c **** void SystemClock_Config(void);
 103:Core/Src/main.c **** static void MX_GPIO_Init(void);
 104:Core/Src/main.c **** static void MX_DMA_Init(void);
 105:Core/Src/main.c **** static void MX_CAN2_Init(void);
 106:Core/Src/main.c **** static void MX_ADC1_Init(void);
 107:Core/Src/main.c **** static void MX_CAN1_Init(void);
 108:Core/Src/main.c **** static void MX_I2C1_SMBUS_Init(void);
 109:Core/Src/main.c **** static void MX_UART4_Init(void);
 110:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
 111:Core/Src/main.c **** static void MX_TIM3_Init(void);
 112:Core/Src/main.c **** static void MX_TIM1_Init(void);
 113:Core/Src/main.c **** static void MX_TIM5_Init(void);
 114:Core/Src/main.c **** static void MX_TIM2_Init(void);
 115:Core/Src/main.c **** static void MX_IWDG_Init(void);
 116:Core/Src/main.c **** void StartTaskLoop(void *argument);
 117:Core/Src/main.c **** void StartTask10ms(void *argument);
 118:Core/Src/main.c **** void StartTask100ms(void *argument);
 119:Core/Src/main.c **** void StartTask250ms(void *argument);
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** /* USER CODE END PFP */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 126:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** /* USER CODE END 0 */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** /**
 131:Core/Src/main.c ****  * @brief  The application entry point.
 132:Core/Src/main.c ****  * @retval int
 133:Core/Src/main.c ****  */
 134:Core/Src/main.c **** int main(void)
 135:Core/Src/main.c **** {
 136:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* USER CODE END 1 */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 143:Core/Src/main.c ****   HAL_Init();
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* USER CODE END Init */
ARM GAS  /tmp/ccEx5Llz.s 			page 4


 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* Configure the system clock */
 150:Core/Src/main.c ****   SystemClock_Config();
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* USER CODE END SysInit */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* Initialize all configured peripherals */
 157:Core/Src/main.c ****   MX_GPIO_Init();
 158:Core/Src/main.c ****   MX_DMA_Init();
 159:Core/Src/main.c ****   MX_CAN2_Init();
 160:Core/Src/main.c ****   MX_ADC1_Init();
 161:Core/Src/main.c ****   MX_CAN1_Init();
 162:Core/Src/main.c ****   MX_I2C1_SMBUS_Init();
 163:Core/Src/main.c ****   MX_UART4_Init();
 164:Core/Src/main.c ****   MX_USART1_UART_Init();
 165:Core/Src/main.c ****   MX_TIM3_Init();
 166:Core/Src/main.c ****   MX_TIM1_Init();
 167:Core/Src/main.c ****   MX_TIM5_Init();
 168:Core/Src/main.c ****   MX_TIM2_Init();
 169:Core/Src/main.c ****   MX_IWDG_Init();
 170:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 171:Core/Src/main.c ****   canSettings();
 172:Core/Src/main.c ****   gaugeInit();
 173:Core/Src/main.c ****   dcdcInit();
 174:Core/Src/main.c ****   vcuInit();
 175:Core/Src/main.c ****   wpInit();
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim2);
 178:Core/Src/main.c ****   HAL_DMA_Start(&hdma_tim2_ch1, (uint32_t) & (waterPWM[0]), GPIOC_BASE + 16, 100); // water pump pw
 179:Core/Src/main.c ****   __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim5);
 182:Core/Src/main.c ****   HAL_DMA_Start(&hdma_tim5_ch1, (uint32_t) & (tempPWM[0]), GPIOC_BASE + 16, 100); // temp gauge PWM
 183:Core/Src/main.c ****   __HAL_TIM_ENABLE_DMA(&htim5, TIM_DMA_CC1);
 184:Core/Src/main.c ****   HAL_DMA_Start(&hdma_tim5_ch2, (uint32_t) & (socPWM[0]), GPIOC_BASE + 16, 1000); // SOC gauge PWM
 185:Core/Src/main.c ****   __HAL_TIM_ENABLE_DMA(&htim5, TIM_DMA_CC2);
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1); // Tach pwm start
 188:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3); // Speedo pwm start
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, ADC_data, 3);
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE END 2 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* Init scheduler */
 195:Core/Src/main.c ****   osKernelInitialize();
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 198:Core/Src/main.c ****   /* add mutexes, ... */
 199:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 202:Core/Src/main.c ****   /* add semaphores, ... */
 203:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 204:Core/Src/main.c **** 
ARM GAS  /tmp/ccEx5Llz.s 			page 5


 205:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 206:Core/Src/main.c ****   /* start timers, add new ones, ... */
 207:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 210:Core/Src/main.c ****   /* add queues, ... */
 211:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* Create the thread(s) */
 214:Core/Src/main.c ****   /* creation of TaskLoop */
 215:Core/Src/main.c ****   TaskLoopHandle = osThreadNew(StartTaskLoop, NULL, &TaskLoop_attributes);
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* creation of Task10ms */
 218:Core/Src/main.c ****   Task10msHandle = osThreadNew(StartTask10ms, NULL, &Task10ms_attributes);
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* creation of Task100ms */
 221:Core/Src/main.c ****   Task100msHandle = osThreadNew(StartTask100ms, NULL, &Task100ms_attributes);
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* creation of Task250ms */
 224:Core/Src/main.c ****   Task250msHandle = osThreadNew(StartTask250ms, NULL, &Task250ms_attributes);
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 227:Core/Src/main.c ****   /* add threads, ... */
 228:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 231:Core/Src/main.c ****   /* add events, ... */
 232:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* Start scheduler */
 235:Core/Src/main.c ****   osKernelStart();
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 238:Core/Src/main.c ****   /* Infinite loop */
 239:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 240:Core/Src/main.c ****   while (1)
 241:Core/Src/main.c ****   {
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****     /* USER CODE END WHILE */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 246:Core/Src/main.c ****   }
 247:Core/Src/main.c ****   /* USER CODE END 3 */
 248:Core/Src/main.c **** }
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** /**
 251:Core/Src/main.c ****  * @brief System Clock Configuration
 252:Core/Src/main.c ****  * @retval None
 253:Core/Src/main.c ****  */
 254:Core/Src/main.c **** void SystemClock_Config(void)
 255:Core/Src/main.c **** {
 256:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 257:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 258:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 261:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
ARM GAS  /tmp/ccEx5Llz.s 			page 6


 262:Core/Src/main.c ****    */
 263:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_HSE;
 264:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 265:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 266:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 267:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 268:Core/Src/main.c ****   RCC_OscInitStruct.Prediv1Source = RCC_PREDIV1_SOURCE_HSE;
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 271:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 272:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2State = RCC_PLL_NONE;
 273:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 274:Core/Src/main.c ****   {
 275:Core/Src/main.c ****     Error_Handler();
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 278:Core/Src/main.c ****    */
 279:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 280:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 281:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 282:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 283:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 286:Core/Src/main.c ****   {
 287:Core/Src/main.c ****     Error_Handler();
 288:Core/Src/main.c ****   }
 289:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 290:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 291:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 292:Core/Src/main.c ****   {
 293:Core/Src/main.c ****     Error_Handler();
 294:Core/Src/main.c ****   }
 295:Core/Src/main.c ****   /** Configure the Systick interrupt time
 296:Core/Src/main.c ****    */
 297:Core/Src/main.c ****   __HAL_RCC_PLLI2S_ENABLE();
 298:Core/Src/main.c **** }
 299:Core/Src/main.c **** 
 300:Core/Src/main.c **** /**
 301:Core/Src/main.c ****  * @brief ADC1 Initialization Function
 302:Core/Src/main.c ****  * @param None
 303:Core/Src/main.c ****  * @retval None
 304:Core/Src/main.c ****  */
 305:Core/Src/main.c **** static void MX_ADC1_Init(void)
 306:Core/Src/main.c **** {
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 317:Core/Src/main.c ****   /** Common config
 318:Core/Src/main.c ****    */
ARM GAS  /tmp/ccEx5Llz.s 			page 7


 319:Core/Src/main.c ****   hadc1.Instance = ADC1;
 320:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 321:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 322:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 323:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 324:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 325:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 3;
 326:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 327:Core/Src/main.c ****   {
 328:Core/Src/main.c ****     Error_Handler();
 329:Core/Src/main.c ****   }
 330:Core/Src/main.c ****   /** Configure Regular Channel
 331:Core/Src/main.c ****    */
 332:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_11;
 333:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 334:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 335:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 336:Core/Src/main.c ****   {
 337:Core/Src/main.c ****     Error_Handler();
 338:Core/Src/main.c ****   }
 339:Core/Src/main.c ****   /** Configure Regular Channel
 340:Core/Src/main.c ****    */
 341:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;
 342:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 343:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_41CYCLES_5;
 344:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 345:Core/Src/main.c ****   {
 346:Core/Src/main.c ****     Error_Handler();
 347:Core/Src/main.c ****   }
 348:Core/Src/main.c ****   /** Configure Regular Channel
 349:Core/Src/main.c ****    */
 350:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_6;
 351:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 352:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 353:Core/Src/main.c ****   {
 354:Core/Src/main.c ****     Error_Handler();
 355:Core/Src/main.c ****   }
 356:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 359:Core/Src/main.c **** }
 360:Core/Src/main.c **** 
 361:Core/Src/main.c **** /**
 362:Core/Src/main.c ****  * @brief CAN1 Initialization Function
 363:Core/Src/main.c ****  * @param None
 364:Core/Src/main.c ****  * @retval None
 365:Core/Src/main.c ****  */
 366:Core/Src/main.c **** static void MX_CAN1_Init(void)
 367:Core/Src/main.c **** {
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
ARM GAS  /tmp/ccEx5Llz.s 			page 8


 376:Core/Src/main.c ****   hcan1.Instance = CAN1;
 377:Core/Src/main.c ****   hcan1.Init.Prescaler = 12;
 378:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 379:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 380:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_2TQ;
 381:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_3TQ;
 382:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 383:Core/Src/main.c ****   hcan1.Init.AutoBusOff = ENABLE;
 384:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 385:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 386:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 387:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 388:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 389:Core/Src/main.c ****   {
 390:Core/Src/main.c ****     Error_Handler();
 391:Core/Src/main.c ****   }
 392:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 395:Core/Src/main.c **** }
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** /**
 398:Core/Src/main.c ****  * @brief CAN2 Initialization Function
 399:Core/Src/main.c ****  * @param None
 400:Core/Src/main.c ****  * @retval None
 401:Core/Src/main.c ****  */
 402:Core/Src/main.c **** static void MX_CAN2_Init(void)
 403:Core/Src/main.c **** {
 404:Core/Src/main.c **** 
 405:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 0 */
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****   /* USER CODE END CAN2_Init 0 */
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 1 */
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* USER CODE END CAN2_Init 1 */
 412:Core/Src/main.c ****   hcan2.Instance = CAN2;
 413:Core/Src/main.c ****   hcan2.Init.Prescaler = 12;
 414:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 415:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 416:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_2TQ;
 417:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_3TQ;
 418:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 419:Core/Src/main.c ****   hcan2.Init.AutoBusOff = ENABLE;
 420:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 421:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 422:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 423:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 424:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 425:Core/Src/main.c ****   {
 426:Core/Src/main.c ****     Error_Handler();
 427:Core/Src/main.c ****   }
 428:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 2 */
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****   /* USER CODE END CAN2_Init 2 */
 431:Core/Src/main.c **** }
 432:Core/Src/main.c **** 
ARM GAS  /tmp/ccEx5Llz.s 			page 9


 433:Core/Src/main.c **** /**
 434:Core/Src/main.c ****  * @brief I2C1 Initialization Function
 435:Core/Src/main.c ****  * @param None
 436:Core/Src/main.c ****  * @retval None
 437:Core/Src/main.c ****  */
 438:Core/Src/main.c **** static void MX_I2C1_SMBUS_Init(void)
 439:Core/Src/main.c **** {
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 446:Core/Src/main.c **** 
 447:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 448:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 451:Core/Src/main.c **** }
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** /**
 454:Core/Src/main.c ****  * @brief IWDG Initialization Function
 455:Core/Src/main.c ****  * @param None
 456:Core/Src/main.c ****  * @retval None
 457:Core/Src/main.c ****  */
 458:Core/Src/main.c **** static void MX_IWDG_Init(void)
 459:Core/Src/main.c **** {
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 0 */
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE END IWDG_Init 0 */
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 1 */
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /* USER CODE END IWDG_Init 1 */
 468:Core/Src/main.c ****   hiwdg.Instance = IWDG;
 469:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_32;
 470:Core/Src/main.c ****   hiwdg.Init.Reload = 4095; // 439 then 1000
 471:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 472:Core/Src/main.c ****   {
 473:Core/Src/main.c ****     Error_Handler();
 474:Core/Src/main.c ****   }
 475:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 2 */
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****   /* USER CODE END IWDG_Init 2 */
 478:Core/Src/main.c **** }
 479:Core/Src/main.c **** 
 480:Core/Src/main.c **** /**
 481:Core/Src/main.c ****  * @brief TIM1 Initialization Function
 482:Core/Src/main.c ****  * @param None
 483:Core/Src/main.c ****  * @retval None
 484:Core/Src/main.c ****  */
 485:Core/Src/main.c **** static void MX_TIM1_Init(void)
 486:Core/Src/main.c **** {
 487:Core/Src/main.c **** 
 488:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 489:Core/Src/main.c **** 
ARM GAS  /tmp/ccEx5Llz.s 			page 10


 490:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 493:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 494:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 499:Core/Src/main.c ****   htim1.Instance = TIM1;
 500:Core/Src/main.c ****   htim1.Init.Prescaler = 240;
 501:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 502:Core/Src/main.c ****   htim1.Init.Period = 65535;
 503:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 504:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 505:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 506:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 507:Core/Src/main.c ****   {
 508:Core/Src/main.c ****     Error_Handler();
 509:Core/Src/main.c ****   }
 510:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 511:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 512:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 513:Core/Src/main.c ****   {
 514:Core/Src/main.c ****     Error_Handler();
 515:Core/Src/main.c ****   }
 516:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 517:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 518:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 519:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 520:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 521:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 522:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 523:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 524:Core/Src/main.c ****   {
 525:Core/Src/main.c ****     Error_Handler();
 526:Core/Src/main.c ****   }
 527:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 528:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 529:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 530:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 531:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 532:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 533:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 534:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 535:Core/Src/main.c ****   {
 536:Core/Src/main.c ****     Error_Handler();
 537:Core/Src/main.c ****   }
 538:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 541:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 542:Core/Src/main.c **** }
 543:Core/Src/main.c **** 
 544:Core/Src/main.c **** /**
 545:Core/Src/main.c ****  * @brief TIM2 Initialization Function
 546:Core/Src/main.c ****  * @param None
ARM GAS  /tmp/ccEx5Llz.s 			page 11


 547:Core/Src/main.c ****  * @retval None
 548:Core/Src/main.c ****  */
 549:Core/Src/main.c **** static void MX_TIM2_Init(void)
 550:Core/Src/main.c **** {
 551:Core/Src/main.c **** 
 552:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 553:Core/Src/main.c **** 
 554:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 555:Core/Src/main.c **** 
 556:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 557:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 558:Core/Src/main.c **** 
 559:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 560:Core/Src/main.c ****   // Water pump pwm emulation
 561:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 562:Core/Src/main.c ****   htim2.Instance = TIM2;
 563:Core/Src/main.c ****   htim2.Init.Prescaler = 10;
 564:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 565:Core/Src/main.c ****   htim2.Init.Period = 600;
 566:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 567:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 568:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 569:Core/Src/main.c ****   {
 570:Core/Src/main.c ****     Error_Handler();
 571:Core/Src/main.c ****   }
 572:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 573:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 574:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 575:Core/Src/main.c ****   {
 576:Core/Src/main.c ****     Error_Handler();
 577:Core/Src/main.c ****   }
 578:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 579:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 580:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 581:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 582:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 583:Core/Src/main.c ****   {
 584:Core/Src/main.c ****     Error_Handler();
 585:Core/Src/main.c ****   }
 586:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 587:Core/Src/main.c **** 
 588:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 589:Core/Src/main.c **** }
 590:Core/Src/main.c **** 
 591:Core/Src/main.c **** /**
 592:Core/Src/main.c ****  * @brief TIM3 Initialization Function
 593:Core/Src/main.c ****  * @param None
 594:Core/Src/main.c ****  * @retval None
 595:Core/Src/main.c ****  */
 596:Core/Src/main.c **** static void MX_TIM3_Init(void)
 597:Core/Src/main.c **** {
 598:Core/Src/main.c **** 
 599:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 600:Core/Src/main.c **** 
 601:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 602:Core/Src/main.c **** 
 603:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
ARM GAS  /tmp/ccEx5Llz.s 			page 12


 604:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 605:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 606:Core/Src/main.c **** 
 607:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 608:Core/Src/main.c **** 
 609:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 610:Core/Src/main.c ****   htim3.Instance = TIM3;
 611:Core/Src/main.c ****   htim3.Init.Prescaler = 120;
 612:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 613:Core/Src/main.c ****   htim3.Init.Period = 600;
 614:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 615:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 616:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 617:Core/Src/main.c ****   {
 618:Core/Src/main.c ****     Error_Handler();
 619:Core/Src/main.c ****   }
 620:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 621:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 622:Core/Src/main.c ****   {
 623:Core/Src/main.c ****     Error_Handler();
 624:Core/Src/main.c ****   }
 625:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 626:Core/Src/main.c ****   {
 627:Core/Src/main.c ****     Error_Handler();
 628:Core/Src/main.c ****   }
 629:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 630:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 631:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 632:Core/Src/main.c ****   {
 633:Core/Src/main.c ****     Error_Handler();
 634:Core/Src/main.c ****   }
 635:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 636:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 637:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 638:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 639:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 640:Core/Src/main.c ****   {
 641:Core/Src/main.c ****     Error_Handler();
 642:Core/Src/main.c ****   }
 643:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 644:Core/Src/main.c **** 
 645:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 646:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 647:Core/Src/main.c **** }
 648:Core/Src/main.c **** 
 649:Core/Src/main.c **** /**
 650:Core/Src/main.c ****  * @brief TIM5 Initialization Function
 651:Core/Src/main.c ****  * @param None
 652:Core/Src/main.c ****  * @retval None
 653:Core/Src/main.c ****  */
 654:Core/Src/main.c **** static void MX_TIM5_Init(void)
 655:Core/Src/main.c **** {
 656:Core/Src/main.c **** 
 657:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
 658:Core/Src/main.c **** 
 659:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
 660:Core/Src/main.c **** 
ARM GAS  /tmp/ccEx5Llz.s 			page 13


 661:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 662:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 663:Core/Src/main.c **** 
 664:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
 665:Core/Src/main.c **** 
 666:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
 667:Core/Src/main.c ****   htim5.Instance = TIM5;
 668:Core/Src/main.c ****   htim5.Init.Prescaler = 100;
 669:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 670:Core/Src/main.c ****   htim5.Init.Period = 10;
 671:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 672:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 673:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim5) != HAL_OK)
 674:Core/Src/main.c ****   {
 675:Core/Src/main.c ****     Error_Handler();
 676:Core/Src/main.c ****   }
 677:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 678:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 679:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 680:Core/Src/main.c ****   {
 681:Core/Src/main.c ****     Error_Handler();
 682:Core/Src/main.c ****   }
 683:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 684:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 685:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 686:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 687:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 688:Core/Src/main.c ****   {
 689:Core/Src/main.c ****     Error_Handler();
 690:Core/Src/main.c ****   }
 691:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 692:Core/Src/main.c ****   {
 693:Core/Src/main.c ****     Error_Handler();
 694:Core/Src/main.c ****   }
 695:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
 696:Core/Src/main.c **** 
 697:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
 698:Core/Src/main.c **** }
 699:Core/Src/main.c **** 
 700:Core/Src/main.c **** /**
 701:Core/Src/main.c ****  * @brief UART4 Initialization Function
 702:Core/Src/main.c ****  * @param None
 703:Core/Src/main.c ****  * @retval None
 704:Core/Src/main.c ****  */
 705:Core/Src/main.c **** static void MX_UART4_Init(void)
 706:Core/Src/main.c **** {
 707:Core/Src/main.c **** 
 708:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 0 */
 709:Core/Src/main.c **** 
 710:Core/Src/main.c ****   /* USER CODE END UART4_Init 0 */
 711:Core/Src/main.c **** 
 712:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 1 */
 713:Core/Src/main.c **** 
 714:Core/Src/main.c ****   /* USER CODE END UART4_Init 1 */
 715:Core/Src/main.c ****   huart4.Instance = UART4;
 716:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 717:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
ARM GAS  /tmp/ccEx5Llz.s 			page 14


 718:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 719:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 720:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 721:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 722:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 723:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 724:Core/Src/main.c ****   {
 725:Core/Src/main.c ****     Error_Handler();
 726:Core/Src/main.c ****   }
 727:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 2 */
 728:Core/Src/main.c **** 
 729:Core/Src/main.c ****   /* USER CODE END UART4_Init 2 */
 730:Core/Src/main.c **** }
 731:Core/Src/main.c **** 
 732:Core/Src/main.c **** /**
 733:Core/Src/main.c ****  * @brief USART1 Initialization Function
 734:Core/Src/main.c ****  * @param None
 735:Core/Src/main.c ****  * @retval None
 736:Core/Src/main.c ****  */
 737:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 738:Core/Src/main.c **** {
 739:Core/Src/main.c **** 
 740:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 741:Core/Src/main.c **** 
 742:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 743:Core/Src/main.c **** 
 744:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 745:Core/Src/main.c **** 
 746:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 747:Core/Src/main.c ****   huart1.Instance = USART1;
 748:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 749:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 750:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 751:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 752:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 753:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 754:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 755:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 756:Core/Src/main.c ****   {
 757:Core/Src/main.c ****     Error_Handler();
 758:Core/Src/main.c ****   }
 759:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 760:Core/Src/main.c **** 
 761:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 762:Core/Src/main.c **** }
 763:Core/Src/main.c **** 
 764:Core/Src/main.c **** /**
 765:Core/Src/main.c ****  * Enable DMA controller clock
 766:Core/Src/main.c ****  */
 767:Core/Src/main.c **** static void MX_DMA_Init(void)
 768:Core/Src/main.c **** {
 769:Core/Src/main.c **** 
 770:Core/Src/main.c ****   /* DMA controller clock enable */
 771:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 772:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 773:Core/Src/main.c **** 
 774:Core/Src/main.c ****   /* DMA interrupt init */
ARM GAS  /tmp/ccEx5Llz.s 			page 15


 775:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 776:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 5, 0);
 777:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 778:Core/Src/main.c ****   /* DMA1_Channel5_IRQn interrupt configuration */
 779:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel5_IRQn, 5, 0);
 780:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
 781:Core/Src/main.c ****   /* DMA2_Channel4_IRQn interrupt configuration */
 782:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Channel4_IRQn, 5, 0);
 783:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Channel4_IRQn);
 784:Core/Src/main.c ****   /* DMA2_Channel5_IRQn interrupt configuration */
 785:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Channel5_IRQn, 5, 0);
 786:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Channel5_IRQn);
 787:Core/Src/main.c **** }
 788:Core/Src/main.c **** 
 789:Core/Src/main.c **** /**
 790:Core/Src/main.c ****  * @brief GPIO Initialization Function
 791:Core/Src/main.c ****  * @param None
 792:Core/Src/main.c ****  * @retval None
 793:Core/Src/main.c ****  */
 794:Core/Src/main.c **** static void MX_GPIO_Init(void)
 795:Core/Src/main.c **** {
  26              		.loc 1 795 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              		.cfi_def_cfa_offset 24
  32              		.cfi_offset 4, -24
  33              		.cfi_offset 5, -20
  34              		.cfi_offset 6, -16
  35              		.cfi_offset 7, -12
  36              		.cfi_offset 8, -8
  37              		.cfi_offset 14, -4
  38 0004 88B0     		sub	sp, sp, #32
  39              		.cfi_def_cfa_offset 56
 796:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 796 3 view .LVU1
  41              		.loc 1 796 20 is_stmt 0 view .LVU2
  42 0006 0024     		movs	r4, #0
  43 0008 0494     		str	r4, [sp, #16]
  44 000a 0594     		str	r4, [sp, #20]
  45 000c 0694     		str	r4, [sp, #24]
  46 000e 0794     		str	r4, [sp, #28]
 797:Core/Src/main.c **** 
 798:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 799:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 799 3 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 799 3 view .LVU4
  50              		.loc 1 799 3 view .LVU5
  51 0010 304B     		ldr	r3, .L3
  52 0012 9A69     		ldr	r2, [r3, #24]
  53 0014 42F01002 		orr	r2, r2, #16
  54 0018 9A61     		str	r2, [r3, #24]
  55              		.loc 1 799 3 view .LVU6
  56 001a 9A69     		ldr	r2, [r3, #24]
  57 001c 02F01002 		and	r2, r2, #16
ARM GAS  /tmp/ccEx5Llz.s 			page 16


  58 0020 0092     		str	r2, [sp]
  59              		.loc 1 799 3 view .LVU7
  60 0022 009A     		ldr	r2, [sp]
  61              	.LBE4:
  62              		.loc 1 799 3 view .LVU8
 800:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  63              		.loc 1 800 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 800 3 view .LVU10
  66              		.loc 1 800 3 view .LVU11
  67 0024 9A69     		ldr	r2, [r3, #24]
  68 0026 42F02002 		orr	r2, r2, #32
  69 002a 9A61     		str	r2, [r3, #24]
  70              		.loc 1 800 3 view .LVU12
  71 002c 9A69     		ldr	r2, [r3, #24]
  72 002e 02F02002 		and	r2, r2, #32
  73 0032 0192     		str	r2, [sp, #4]
  74              		.loc 1 800 3 view .LVU13
  75 0034 019A     		ldr	r2, [sp, #4]
  76              	.LBE5:
  77              		.loc 1 800 3 view .LVU14
 801:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  78              		.loc 1 801 3 view .LVU15
  79              	.LBB6:
  80              		.loc 1 801 3 view .LVU16
  81              		.loc 1 801 3 view .LVU17
  82 0036 9A69     		ldr	r2, [r3, #24]
  83 0038 42F00402 		orr	r2, r2, #4
  84 003c 9A61     		str	r2, [r3, #24]
  85              		.loc 1 801 3 view .LVU18
  86 003e 9A69     		ldr	r2, [r3, #24]
  87 0040 02F00402 		and	r2, r2, #4
  88 0044 0292     		str	r2, [sp, #8]
  89              		.loc 1 801 3 view .LVU19
  90 0046 029A     		ldr	r2, [sp, #8]
  91              	.LBE6:
  92              		.loc 1 801 3 view .LVU20
 802:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  93              		.loc 1 802 3 view .LVU21
  94              	.LBB7:
  95              		.loc 1 802 3 view .LVU22
  96              		.loc 1 802 3 view .LVU23
  97 0048 9A69     		ldr	r2, [r3, #24]
  98 004a 42F00802 		orr	r2, r2, #8
  99 004e 9A61     		str	r2, [r3, #24]
 100              		.loc 1 802 3 view .LVU24
 101 0050 9B69     		ldr	r3, [r3, #24]
 102 0052 03F00803 		and	r3, r3, #8
 103 0056 0393     		str	r3, [sp, #12]
 104              		.loc 1 802 3 view .LVU25
 105 0058 039B     		ldr	r3, [sp, #12]
 106              	.LBE7:
 107              		.loc 1 802 3 view .LVU26
 803:Core/Src/main.c **** 
 804:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 805:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, LED_Pin | WP_Pin | TEMP_Pin | SOC_Pin, GPIO_PIN_RESET);
 108              		.loc 1 805 3 view .LVU27
ARM GAS  /tmp/ccEx5Llz.s 			page 17


 109 005a 1F4E     		ldr	r6, .L3+4
 110 005c 2246     		mov	r2, r4
 111 005e 4FF40B51 		mov	r1, #8896
 112 0062 3046     		mov	r0, r6
 113 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 114              	.LVL0:
 806:Core/Src/main.c **** 
 807:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 808:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, PS_INIT_Pin | HEAT_OUT_Pin, GPIO_PIN_RESET);
 115              		.loc 1 808 3 view .LVU28
 116 0068 1C4D     		ldr	r5, .L3+8
 117 006a 2246     		mov	r2, r4
 118 006c 4FF44041 		mov	r1, #49152
 119 0070 2846     		mov	r0, r5
 120 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 121              	.LVL1:
 809:Core/Src/main.c **** 
 810:Core/Src/main.c ****   /*Configure GPIO pins : LED_Pin WP_Pin */
 811:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin | WP_Pin;
 122              		.loc 1 811 3 view .LVU29
 123              		.loc 1 811 23 is_stmt 0 view .LVU30
 124 0076 4FF40153 		mov	r3, #8256
 125 007a 0493     		str	r3, [sp, #16]
 812:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 126              		.loc 1 812 3 is_stmt 1 view .LVU31
 127              		.loc 1 812 24 is_stmt 0 view .LVU32
 128 007c 0127     		movs	r7, #1
 129 007e 0597     		str	r7, [sp, #20]
 813:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 130              		.loc 1 813 3 is_stmt 1 view .LVU33
 131              		.loc 1 813 24 is_stmt 0 view .LVU34
 132 0080 0694     		str	r4, [sp, #24]
 814:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 133              		.loc 1 814 3 is_stmt 1 view .LVU35
 134              		.loc 1 814 25 is_stmt 0 view .LVU36
 135 0082 4FF00208 		mov	r8, #2
 136 0086 CDF81C80 		str	r8, [sp, #28]
 815:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 137              		.loc 1 815 3 is_stmt 1 view .LVU37
 138 008a 04A9     		add	r1, sp, #16
 139 008c 3046     		mov	r0, r6
 140 008e FFF7FEFF 		bl	HAL_GPIO_Init
 141              	.LVL2:
 816:Core/Src/main.c **** 
 817:Core/Src/main.c ****   /*Configure GPIO pins : PS_INIT_Pin HEAT_OUT_Pin */
 818:Core/Src/main.c ****   GPIO_InitStruct.Pin = PS_INIT_Pin | HEAT_OUT_Pin;
 142              		.loc 1 818 3 view .LVU38
 143              		.loc 1 818 23 is_stmt 0 view .LVU39
 144 0092 4FF44043 		mov	r3, #49152
 145 0096 0493     		str	r3, [sp, #16]
 819:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 146              		.loc 1 819 3 is_stmt 1 view .LVU40
 147              		.loc 1 819 24 is_stmt 0 view .LVU41
 148 0098 0597     		str	r7, [sp, #20]
 820:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 149              		.loc 1 820 3 is_stmt 1 view .LVU42
 150              		.loc 1 820 24 is_stmt 0 view .LVU43
ARM GAS  /tmp/ccEx5Llz.s 			page 18


 151 009a 0694     		str	r4, [sp, #24]
 821:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 152              		.loc 1 821 3 is_stmt 1 view .LVU44
 153              		.loc 1 821 25 is_stmt 0 view .LVU45
 154 009c CDF81C80 		str	r8, [sp, #28]
 822:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 155              		.loc 1 822 3 is_stmt 1 view .LVU46
 156 00a0 04A9     		add	r1, sp, #16
 157 00a2 2846     		mov	r0, r5
 158 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 159              	.LVL3:
 823:Core/Src/main.c **** 
 824:Core/Src/main.c ****   /*Configure GPIO pins : TEMP_Pin SOC_Pin */
 825:Core/Src/main.c ****   GPIO_InitStruct.Pin = TEMP_Pin | SOC_Pin;
 160              		.loc 1 825 3 view .LVU47
 161              		.loc 1 825 23 is_stmt 0 view .LVU48
 162 00a8 4FF42073 		mov	r3, #640
 163 00ac 0493     		str	r3, [sp, #16]
 826:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 164              		.loc 1 826 3 is_stmt 1 view .LVU49
 165              		.loc 1 826 24 is_stmt 0 view .LVU50
 166 00ae 0597     		str	r7, [sp, #20]
 827:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 167              		.loc 1 827 3 is_stmt 1 view .LVU51
 168              		.loc 1 827 24 is_stmt 0 view .LVU52
 169 00b0 0694     		str	r4, [sp, #24]
 828:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 170              		.loc 1 828 3 is_stmt 1 view .LVU53
 171              		.loc 1 828 25 is_stmt 0 view .LVU54
 172 00b2 0323     		movs	r3, #3
 173 00b4 0793     		str	r3, [sp, #28]
 829:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 174              		.loc 1 829 3 is_stmt 1 view .LVU55
 175 00b6 04A9     		add	r1, sp, #16
 176 00b8 3046     		mov	r0, r6
 177 00ba FFF7FEFF 		bl	HAL_GPIO_Init
 178              	.LVL4:
 830:Core/Src/main.c **** 
 831:Core/Src/main.c ****   /*Configure GPIO pins : SW12_Pin HEAT_REQ_Pin */
 832:Core/Src/main.c ****   GPIO_InitStruct.Pin = SW12_Pin | HEAT_REQ_Pin;
 179              		.loc 1 832 3 view .LVU56
 180              		.loc 1 832 23 is_stmt 0 view .LVU57
 181 00be 3023     		movs	r3, #48
 182 00c0 0493     		str	r3, [sp, #16]
 833:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 183              		.loc 1 833 3 is_stmt 1 view .LVU58
 184              		.loc 1 833 24 is_stmt 0 view .LVU59
 185 00c2 0594     		str	r4, [sp, #20]
 834:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 186              		.loc 1 834 3 is_stmt 1 view .LVU60
 187              		.loc 1 834 24 is_stmt 0 view .LVU61
 188 00c4 0694     		str	r4, [sp, #24]
 835:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 189              		.loc 1 835 3 is_stmt 1 view .LVU62
 190 00c6 04A9     		add	r1, sp, #16
 191 00c8 2846     		mov	r0, r5
 192 00ca FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccEx5Llz.s 			page 19


 193              	.LVL5:
 836:Core/Src/main.c **** }
 194              		.loc 1 836 1 is_stmt 0 view .LVU63
 195 00ce 08B0     		add	sp, sp, #32
 196              		.cfi_def_cfa_offset 24
 197              		@ sp needed
 198 00d0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 199              	.L4:
 200              		.align	2
 201              	.L3:
 202 00d4 00100240 		.word	1073876992
 203 00d8 00100140 		.word	1073811456
 204 00dc 000C0140 		.word	1073810432
 205              		.cfi_endproc
 206              	.LFE88:
 208              		.section	.text.MX_DMA_Init,"ax",%progbits
 209              		.align	1
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu softvfp
 215              	MX_DMA_Init:
 216              	.LFB87:
 768:Core/Src/main.c **** 
 217              		.loc 1 768 1 is_stmt 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 8
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221 0000 00B5     		push	{lr}
 222              		.cfi_def_cfa_offset 4
 223              		.cfi_offset 14, -4
 224 0002 83B0     		sub	sp, sp, #12
 225              		.cfi_def_cfa_offset 16
 771:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 226              		.loc 1 771 3 view .LVU65
 227              	.LBB8:
 771:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 228              		.loc 1 771 3 view .LVU66
 771:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 229              		.loc 1 771 3 view .LVU67
 230 0004 1A4B     		ldr	r3, .L7
 231 0006 5A69     		ldr	r2, [r3, #20]
 232 0008 42F00202 		orr	r2, r2, #2
 233 000c 5A61     		str	r2, [r3, #20]
 771:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 234              		.loc 1 771 3 view .LVU68
 235 000e 5A69     		ldr	r2, [r3, #20]
 236 0010 02F00202 		and	r2, r2, #2
 237 0014 0092     		str	r2, [sp]
 771:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 238              		.loc 1 771 3 view .LVU69
 239 0016 009A     		ldr	r2, [sp]
 240              	.LBE8:
 771:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 241              		.loc 1 771 3 view .LVU70
 772:Core/Src/main.c **** 
 242              		.loc 1 772 3 view .LVU71
ARM GAS  /tmp/ccEx5Llz.s 			page 20


 243              	.LBB9:
 772:Core/Src/main.c **** 
 244              		.loc 1 772 3 view .LVU72
 772:Core/Src/main.c **** 
 245              		.loc 1 772 3 view .LVU73
 246 0018 5A69     		ldr	r2, [r3, #20]
 247 001a 42F00102 		orr	r2, r2, #1
 248 001e 5A61     		str	r2, [r3, #20]
 772:Core/Src/main.c **** 
 249              		.loc 1 772 3 view .LVU74
 250 0020 5B69     		ldr	r3, [r3, #20]
 251 0022 03F00103 		and	r3, r3, #1
 252 0026 0193     		str	r3, [sp, #4]
 772:Core/Src/main.c **** 
 253              		.loc 1 772 3 view .LVU75
 254 0028 019B     		ldr	r3, [sp, #4]
 255              	.LBE9:
 772:Core/Src/main.c **** 
 256              		.loc 1 772 3 view .LVU76
 776:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 257              		.loc 1 776 3 view .LVU77
 258 002a 0022     		movs	r2, #0
 259 002c 0521     		movs	r1, #5
 260 002e 0B20     		movs	r0, #11
 261 0030 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 262              	.LVL6:
 777:Core/Src/main.c ****   /* DMA1_Channel5_IRQn interrupt configuration */
 263              		.loc 1 777 3 view .LVU78
 264 0034 0B20     		movs	r0, #11
 265 0036 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 266              	.LVL7:
 779:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
 267              		.loc 1 779 3 view .LVU79
 268 003a 0022     		movs	r2, #0
 269 003c 0521     		movs	r1, #5
 270 003e 0F20     		movs	r0, #15
 271 0040 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 272              	.LVL8:
 780:Core/Src/main.c ****   /* DMA2_Channel4_IRQn interrupt configuration */
 273              		.loc 1 780 3 view .LVU80
 274 0044 0F20     		movs	r0, #15
 275 0046 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 276              	.LVL9:
 782:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Channel4_IRQn);
 277              		.loc 1 782 3 view .LVU81
 278 004a 0022     		movs	r2, #0
 279 004c 0521     		movs	r1, #5
 280 004e 3B20     		movs	r0, #59
 281 0050 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 282              	.LVL10:
 783:Core/Src/main.c ****   /* DMA2_Channel5_IRQn interrupt configuration */
 283              		.loc 1 783 3 view .LVU82
 284 0054 3B20     		movs	r0, #59
 285 0056 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 286              	.LVL11:
 785:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Channel5_IRQn);
 287              		.loc 1 785 3 view .LVU83
ARM GAS  /tmp/ccEx5Llz.s 			page 21


 288 005a 0022     		movs	r2, #0
 289 005c 0521     		movs	r1, #5
 290 005e 3C20     		movs	r0, #60
 291 0060 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 292              	.LVL12:
 786:Core/Src/main.c **** }
 293              		.loc 1 786 3 view .LVU84
 294 0064 3C20     		movs	r0, #60
 295 0066 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 296              	.LVL13:
 787:Core/Src/main.c **** 
 297              		.loc 1 787 1 is_stmt 0 view .LVU85
 298 006a 03B0     		add	sp, sp, #12
 299              		.cfi_def_cfa_offset 4
 300              		@ sp needed
 301 006c 5DF804FB 		ldr	pc, [sp], #4
 302              	.L8:
 303              		.align	2
 304              	.L7:
 305 0070 00100240 		.word	1073876992
 306              		.cfi_endproc
 307              	.LFE87:
 309              		.section	.text.StartTaskLoop,"ax",%progbits
 310              		.align	1
 311              		.global	StartTaskLoop
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 317              	StartTaskLoop:
 318              	.LFB89:
 837:Core/Src/main.c **** 
 838:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 839:Core/Src/main.c **** // Callback: timer has rolled over
 840:Core/Src/main.c **** 
 841:Core/Src/main.c **** /* USER CODE END 4 */
 842:Core/Src/main.c **** 
 843:Core/Src/main.c **** /* USER CODE BEGIN Header_StartTaskLoop */
 844:Core/Src/main.c **** /**
 845:Core/Src/main.c ****  * @brief  Function implementing the TaskLoop thread.
 846:Core/Src/main.c ****  * @param  argument: Not used
 847:Core/Src/main.c ****  * @retval None
 848:Core/Src/main.c ****  */
 849:Core/Src/main.c **** /* USER CODE END Header_StartTaskLoop */
 850:Core/Src/main.c **** void StartTaskLoop(void *argument)
 851:Core/Src/main.c **** {
 319              		.loc 1 851 1 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              	.LVL14:
 324              		.loc 1 851 1 is_stmt 0 view .LVU87
 325 0000 10B5     		push	{r4, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 4, -8
 328              		.cfi_offset 14, -4
 329              	.LVL15:
ARM GAS  /tmp/ccEx5Llz.s 			page 22


 330              	.L10:
 852:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 853:Core/Src/main.c ****   /* Infinite loop */
 854:Core/Src/main.c ****   for (;;)
 331              		.loc 1 854 3 is_stmt 1 discriminator 1 view .LVU88
 332              	.LBB10:
 855:Core/Src/main.c ****   {
 856:Core/Src/main.c ****     taskCheck();
 333              		.loc 1 856 5 discriminator 1 view .LVU89
 334 0002 FFF7FEFF 		bl	taskCheck
 335              	.LVL16:
 857:Core/Src/main.c ****     uint32_t taskStart = HAL_GetTick();
 336              		.loc 1 857 5 discriminator 1 view .LVU90
 337              		.loc 1 857 26 is_stmt 0 discriminator 1 view .LVU91
 338 0006 FFF7FEFF 		bl	HAL_GetTick
 339              	.LVL17:
 340 000a 0446     		mov	r4, r0
 341              	.LVL18:
 858:Core/Src/main.c ****     wpHandler();
 342              		.loc 1 858 5 is_stmt 1 discriminator 1 view .LVU92
 343 000c FFF7FEFF 		bl	wpHandler
 344              	.LVL19:
 859:Core/Src/main.c ****     vcuState();
 345              		.loc 1 859 5 discriminator 1 view .LVU93
 346 0010 FFF7FEFF 		bl	vcuState
 347              	.LVL20:
 860:Core/Src/main.c ****     ioHandler();
 348              		.loc 1 860 5 discriminator 1 view .LVU94
 349 0014 FFF7FEFF 		bl	ioHandler
 350              	.LVL21:
 861:Core/Src/main.c ****     HAL_IWDG_Refresh(&hiwdg);
 351              		.loc 1 861 5 discriminator 1 view .LVU95
 352 0018 0748     		ldr	r0, .L12
 353 001a FFF7FEFF 		bl	HAL_IWDG_Refresh
 354              	.LVL22:
 862:Core/Src/main.c ****     taskTime.TaskLoop = (HAL_GetTick() - taskStart);
 355              		.loc 1 862 5 discriminator 1 view .LVU96
 356              		.loc 1 862 26 is_stmt 0 discriminator 1 view .LVU97
 357 001e FFF7FEFF 		bl	HAL_GetTick
 358              	.LVL23:
 359              		.loc 1 862 40 discriminator 1 view .LVU98
 360 0022 001B     		subs	r0, r0, r4
 361              		.loc 1 862 23 discriminator 1 view .LVU99
 362 0024 054C     		ldr	r4, .L12+4
 363              	.LVL24:
 364              		.loc 1 862 23 discriminator 1 view .LVU100
 365 0026 2080     		strh	r0, [r4]	@ movhi
 863:Core/Src/main.c ****     taskTime.TaskLoop_lastRun = HAL_GetTick();
 366              		.loc 1 863 5 is_stmt 1 discriminator 1 view .LVU101
 367              		.loc 1 863 33 is_stmt 0 discriminator 1 view .LVU102
 368 0028 FFF7FEFF 		bl	HAL_GetTick
 369              	.LVL25:
 370              		.loc 1 863 31 discriminator 1 view .LVU103
 371 002c 6060     		str	r0, [r4, #4]
 864:Core/Src/main.c ****     
 865:Core/Src/main.c ****     /*
 866:Core/Src/main.c ****     if (taskTime.TaskLoop > taskTime.TaskLoop_max)
ARM GAS  /tmp/ccEx5Llz.s 			page 23


 867:Core/Src/main.c ****     {
 868:Core/Src/main.c ****       taskTime.TaskLoop_max = taskTime.TaskLoop;
 869:Core/Src/main.c ****     }
 870:Core/Src/main.c ****     */
 871:Core/Src/main.c ****     
 872:Core/Src/main.c **** 
 873:Core/Src/main.c ****     osDelay(1);
 372              		.loc 1 873 5 is_stmt 1 discriminator 1 view .LVU104
 373 002e 0120     		movs	r0, #1
 374 0030 FFF7FEFF 		bl	osDelay
 375              	.LVL26:
 376              	.LBE10:
 854:Core/Src/main.c ****   {
 377              		.loc 1 854 9 discriminator 1 view .LVU105
 378 0034 E5E7     		b	.L10
 379              	.L13:
 380 0036 00BF     		.align	2
 381              	.L12:
 382 0038 00000000 		.word	hiwdg
 383 003c 00000000 		.word	taskTime
 384              		.cfi_endproc
 385              	.LFE89:
 387              		.section	.text.StartTask10ms,"ax",%progbits
 388              		.align	1
 389              		.global	StartTask10ms
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 393              		.fpu softvfp
 395              	StartTask10ms:
 396              	.LFB90:
 874:Core/Src/main.c ****   }
 875:Core/Src/main.c ****   /* USER CODE END 5 */
 876:Core/Src/main.c **** }
 877:Core/Src/main.c **** 
 878:Core/Src/main.c **** /* USER CODE BEGIN Header_StartTask10ms */
 879:Core/Src/main.c **** /**
 880:Core/Src/main.c ****  * @brief Function implementing the Task10ms thread.
 881:Core/Src/main.c ****  * @param argument: Not used
 882:Core/Src/main.c ****  * @retval None
 883:Core/Src/main.c ****  */
 884:Core/Src/main.c **** /* USER CODE END Header_StartTask10ms */
 885:Core/Src/main.c **** void StartTask10ms(void *argument)
 886:Core/Src/main.c **** {
 397              		.loc 1 886 1 view -0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              	.LVL27:
 402              		.loc 1 886 1 is_stmt 0 view .LVU107
 403 0000 10B5     		push	{r4, lr}
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 4, -8
 406              		.cfi_offset 14, -4
 407              	.LVL28:
 408              	.L15:
 887:Core/Src/main.c ****   /* USER CODE BEGIN StartTask10ms */
ARM GAS  /tmp/ccEx5Llz.s 			page 24


 888:Core/Src/main.c ****   // TickType_t lastWakeTime;
 889:Core/Src/main.c ****   // const TickType_t frequency = 20;
 890:Core/Src/main.c ****   // lastWakeTime = xTaskGetTickCount();
 891:Core/Src/main.c ****   /* Infinite loop */
 892:Core/Src/main.c ****   for (;;)
 409              		.loc 1 892 3 is_stmt 1 discriminator 1 view .LVU108
 410              	.LBB11:
 893:Core/Src/main.c ****   {
 894:Core/Src/main.c ****     // vTaskDelayUntil(&lastWakeTime, frequency);
 895:Core/Src/main.c ****     uint32_t taskStart = HAL_GetTick();
 411              		.loc 1 895 5 discriminator 1 view .LVU109
 412              		.loc 1 895 26 is_stmt 0 discriminator 1 view .LVU110
 413 0002 FFF7FEFF 		bl	HAL_GetTick
 414              	.LVL29:
 415 0006 0446     		mov	r4, r0
 416              	.LVL30:
 896:Core/Src/main.c ****     throttleHandler();
 417              		.loc 1 896 5 is_stmt 1 discriminator 1 view .LVU111
 418 0008 FFF7FEFF 		bl	throttleHandler
 419              	.LVL31:
 897:Core/Src/main.c ****     canIOsend();
 420              		.loc 1 897 5 discriminator 1 view .LVU112
 421 000c FFF7FEFF 		bl	canIOsend
 422              	.LVL32:
 898:Core/Src/main.c ****     regenHandler();
 423              		.loc 1 898 5 discriminator 1 view .LVU113
 424 0010 FFF7FEFF 		bl	regenHandler
 425              	.LVL33:
 899:Core/Src/main.c ****     brakeHandler();
 426              		.loc 1 899 5 discriminator 1 view .LVU114
 427 0014 FFF7FEFF 		bl	brakeHandler
 428              	.LVL34:
 900:Core/Src/main.c ****     dcdcHandler(vcu.state);
 429              		.loc 1 900 5 discriminator 1 view .LVU115
 430              		.loc 1 900 20 is_stmt 0 discriminator 1 view .LVU116
 431 0018 094B     		ldr	r3, .L17
 432 001a 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 433              		.loc 1 900 5 discriminator 1 view .LVU117
 434 001c FFF7FEFF 		bl	dcdcHandler
 435              	.LVL35:
 901:Core/Src/main.c ****     HAL_IWDG_Refresh(&hiwdg);
 436              		.loc 1 901 5 is_stmt 1 discriminator 1 view .LVU118
 437 0020 0848     		ldr	r0, .L17+4
 438 0022 FFF7FEFF 		bl	HAL_IWDG_Refresh
 439              	.LVL36:
 902:Core/Src/main.c ****     taskTime.Task10ms = (HAL_GetTick() - taskStart);
 440              		.loc 1 902 5 discriminator 1 view .LVU119
 441              		.loc 1 902 26 is_stmt 0 discriminator 1 view .LVU120
 442 0026 FFF7FEFF 		bl	HAL_GetTick
 443              	.LVL37:
 444              		.loc 1 902 40 discriminator 1 view .LVU121
 445 002a 001B     		subs	r0, r0, r4
 446              		.loc 1 902 23 discriminator 1 view .LVU122
 447 002c 064C     		ldr	r4, .L17+8
 448              	.LVL38:
 449              		.loc 1 902 23 discriminator 1 view .LVU123
 450 002e 2081     		strh	r0, [r4, #8]	@ movhi
ARM GAS  /tmp/ccEx5Llz.s 			page 25


 903:Core/Src/main.c ****     taskTime.Task10ms_lastRun = HAL_GetTick();
 451              		.loc 1 903 5 is_stmt 1 discriminator 1 view .LVU124
 452              		.loc 1 903 33 is_stmt 0 discriminator 1 view .LVU125
 453 0030 FFF7FEFF 		bl	HAL_GetTick
 454              	.LVL39:
 455              		.loc 1 903 31 discriminator 1 view .LVU126
 456 0034 E060     		str	r0, [r4, #12]
 904:Core/Src/main.c ****     /*
 905:Core/Src/main.c ****     if (taskTime.Task10ms > taskTime.Task10ms_max)
 906:Core/Src/main.c ****     {
 907:Core/Src/main.c ****       taskTime.Task10ms_max = taskTime.Task10ms;
 908:Core/Src/main.c ****     }
 909:Core/Src/main.c ****     */
 910:Core/Src/main.c ****     
 911:Core/Src/main.c ****     osDelay(20);
 457              		.loc 1 911 5 is_stmt 1 discriminator 1 view .LVU127
 458 0036 1420     		movs	r0, #20
 459 0038 FFF7FEFF 		bl	osDelay
 460              	.LVL40:
 461              	.LBE11:
 892:Core/Src/main.c ****   {
 462              		.loc 1 892 9 discriminator 1 view .LVU128
 463 003c E1E7     		b	.L15
 464              	.L18:
 465 003e 00BF     		.align	2
 466              	.L17:
 467 0040 00000000 		.word	vcu
 468 0044 00000000 		.word	hiwdg
 469 0048 00000000 		.word	taskTime
 470              		.cfi_endproc
 471              	.LFE90:
 473              		.section	.text.StartTask100ms,"ax",%progbits
 474              		.align	1
 475              		.global	StartTask100ms
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 479              		.fpu softvfp
 481              	StartTask100ms:
 482              	.LFB91:
 912:Core/Src/main.c ****   }
 913:Core/Src/main.c ****   // Add termination if exit the loop accidentally
 914:Core/Src/main.c ****   osThreadTerminate(NULL);
 915:Core/Src/main.c ****   /* USER CODE END StartTask10ms */
 916:Core/Src/main.c **** }
 917:Core/Src/main.c **** 
 918:Core/Src/main.c **** /* USER CODE BEGIN Header_StartTask100ms */
 919:Core/Src/main.c **** /**
 920:Core/Src/main.c ****  * @brief Function implementing the Task100ms thread.
 921:Core/Src/main.c ****  * @param argument: Not used
 922:Core/Src/main.c ****  * @retval None
 923:Core/Src/main.c ****  */
 924:Core/Src/main.c **** /* USER CODE END Header_StartTask100ms */
 925:Core/Src/main.c **** void StartTask100ms(void *argument)
 926:Core/Src/main.c **** {
 483              		.loc 1 926 1 view -0
 484              		.cfi_startproc
ARM GAS  /tmp/ccEx5Llz.s 			page 26


 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              	.LVL41:
 488              		.loc 1 926 1 is_stmt 0 view .LVU130
 489 0000 38B5     		push	{r3, r4, r5, lr}
 490              		.cfi_def_cfa_offset 16
 491              		.cfi_offset 3, -16
 492              		.cfi_offset 4, -12
 493              		.cfi_offset 5, -8
 494              		.cfi_offset 14, -4
 495              	.LVL42:
 496              	.L20:
 927:Core/Src/main.c ****   /* USER CODE BEGIN StartTask100ms */
 928:Core/Src/main.c ****   // TickType_t lastWakeTime;
 929:Core/Src/main.c ****   // const TickType_t frequency = 100;
 930:Core/Src/main.c ****   // lastWakeTime = xTaskGetTickCount();
 931:Core/Src/main.c **** 
 932:Core/Src/main.c ****   /* Infinite loop */
 933:Core/Src/main.c **** 
 934:Core/Src/main.c ****   for (;;)
 497              		.loc 1 934 3 is_stmt 1 discriminator 1 view .LVU131
 498              	.LBB12:
 935:Core/Src/main.c ****   {
 936:Core/Src/main.c ****     // vTaskDelayUntil(&lastWakeTime, frequency);
 937:Core/Src/main.c ****     uint32_t taskStart = HAL_GetTick();
 499              		.loc 1 937 5 discriminator 1 view .LVU132
 500              		.loc 1 937 26 is_stmt 0 discriminator 1 view .LVU133
 501 0002 FFF7FEFF 		bl	HAL_GetTick
 502              	.LVL43:
 503 0006 0446     		mov	r4, r0
 504              	.LVL44:
 938:Core/Src/main.c ****     updateSpeed(ldu.rpm);
 505              		.loc 1 938 5 is_stmt 1 discriminator 1 view .LVU134
 506 0008 0B4D     		ldr	r5, .L22
 507 000a 2888     		ldrh	r0, [r5]
 508              	.LVL45:
 509              		.loc 1 938 5 is_stmt 0 discriminator 1 view .LVU135
 510 000c 80B2     		uxth	r0, r0
 511 000e FFF7FEFF 		bl	updateSpeed
 512              	.LVL46:
 939:Core/Src/main.c ****     updateTach(ldu.amps);
 513              		.loc 1 939 5 is_stmt 1 discriminator 1 view .LVU136
 514 0012 6889     		ldrh	r0, [r5, #10]
 515 0014 80B2     		uxth	r0, r0
 516 0016 FFF7FEFF 		bl	updateTach
 517              	.LVL47:
 940:Core/Src/main.c ****     HAL_IWDG_Refresh(&hiwdg);
 518              		.loc 1 940 5 discriminator 1 view .LVU137
 519 001a 0848     		ldr	r0, .L22+4
 520 001c FFF7FEFF 		bl	HAL_IWDG_Refresh
 521              	.LVL48:
 941:Core/Src/main.c ****     taskTime.Task100ms = (HAL_GetTick() - taskStart);
 522              		.loc 1 941 5 discriminator 1 view .LVU138
 523              		.loc 1 941 27 is_stmt 0 discriminator 1 view .LVU139
 524 0020 FFF7FEFF 		bl	HAL_GetTick
 525              	.LVL49:
 526              		.loc 1 941 41 discriminator 1 view .LVU140
ARM GAS  /tmp/ccEx5Llz.s 			page 27


 527 0024 001B     		subs	r0, r0, r4
 528              		.loc 1 941 24 discriminator 1 view .LVU141
 529 0026 064C     		ldr	r4, .L22+8
 530              	.LVL50:
 531              		.loc 1 941 24 discriminator 1 view .LVU142
 532 0028 2082     		strh	r0, [r4, #16]	@ movhi
 942:Core/Src/main.c ****     taskTime.Task100ms_lastRun = HAL_GetTick();
 533              		.loc 1 942 5 is_stmt 1 discriminator 1 view .LVU143
 534              		.loc 1 942 34 is_stmt 0 discriminator 1 view .LVU144
 535 002a FFF7FEFF 		bl	HAL_GetTick
 536              	.LVL51:
 537              		.loc 1 942 32 discriminator 1 view .LVU145
 538 002e 6061     		str	r0, [r4, #20]
 943:Core/Src/main.c ****     /*
 944:Core/Src/main.c ****     if (taskTime.Task100ms > taskTime.Task100ms_max)
 945:Core/Src/main.c ****     {
 946:Core/Src/main.c ****       taskTime.Task100ms_max = taskTime.Task100ms;
 947:Core/Src/main.c ****     }
 948:Core/Src/main.c ****     */
 949:Core/Src/main.c ****     
 950:Core/Src/main.c ****   
 951:Core/Src/main.c **** 
 952:Core/Src/main.c ****     osDelay(100);
 539              		.loc 1 952 5 is_stmt 1 discriminator 1 view .LVU146
 540 0030 6420     		movs	r0, #100
 541 0032 FFF7FEFF 		bl	osDelay
 542              	.LVL52:
 543              	.LBE12:
 934:Core/Src/main.c ****   {
 544              		.loc 1 934 9 discriminator 1 view .LVU147
 545 0036 E4E7     		b	.L20
 546              	.L23:
 547              		.align	2
 548              	.L22:
 549 0038 00000000 		.word	ldu
 550 003c 00000000 		.word	hiwdg
 551 0040 00000000 		.word	taskTime
 552              		.cfi_endproc
 553              	.LFE91:
 555              		.section	.text.StartTask250ms,"ax",%progbits
 556              		.align	1
 557              		.global	StartTask250ms
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu softvfp
 563              	StartTask250ms:
 564              	.LFB92:
 953:Core/Src/main.c ****   }
 954:Core/Src/main.c ****   // Add termination if exit the loop accidentally
 955:Core/Src/main.c ****   osThreadTerminate(NULL);
 956:Core/Src/main.c ****   /* USER CODE END StartTask100ms */
 957:Core/Src/main.c **** }
 958:Core/Src/main.c **** 
 959:Core/Src/main.c **** /* USER CODE BEGIN Header_StartTask250ms */
 960:Core/Src/main.c **** /**
 961:Core/Src/main.c ****  * @brief Function implementing the Task250ms thread.
ARM GAS  /tmp/ccEx5Llz.s 			page 28


 962:Core/Src/main.c ****  * @param argument: Not used
 963:Core/Src/main.c ****  * @retval None
 964:Core/Src/main.c ****  */
 965:Core/Src/main.c **** /* USER CODE END Header_StartTask250ms */
 966:Core/Src/main.c **** void StartTask250ms(void *argument)
 967:Core/Src/main.c **** {
 565              		.loc 1 967 1 view -0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              	.LVL53:
 570              		.loc 1 967 1 is_stmt 0 view .LVU149
 571 0000 38B5     		push	{r3, r4, r5, lr}
 572              		.cfi_def_cfa_offset 16
 573              		.cfi_offset 3, -16
 574              		.cfi_offset 4, -12
 575              		.cfi_offset 5, -8
 576              		.cfi_offset 14, -4
 577              	.LVL54:
 578              	.L25:
 968:Core/Src/main.c ****   /* USER CODE BEGIN StartTask250ms */
 969:Core/Src/main.c ****   // TickType_t lastWakeTime;
 970:Core/Src/main.c ****   // const TickType_t frequency = 250;
 971:Core/Src/main.c ****   // lastWakeTime = xTaskGetTickCount();
 972:Core/Src/main.c ****   /* Infinite loop */
 973:Core/Src/main.c **** 
 974:Core/Src/main.c ****   for (;;)
 579              		.loc 1 974 3 is_stmt 1 discriminator 1 view .LVU150
 580              	.LBB13:
 975:Core/Src/main.c **** 
 976:Core/Src/main.c ****   {
 977:Core/Src/main.c ****     // vTaskDelayUntil(&lastWakeTime, frequency);
 978:Core/Src/main.c ****     uint32_t taskStart = HAL_GetTick();
 581              		.loc 1 978 5 discriminator 1 view .LVU151
 582              		.loc 1 978 26 is_stmt 0 discriminator 1 view .LVU152
 583 0002 FFF7FEFF 		bl	HAL_GetTick
 584              	.LVL55:
 585 0006 0446     		mov	r4, r0
 586              	.LVL56:
 979:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 587              		.loc 1 979 5 is_stmt 1 discriminator 1 view .LVU153
 588 0008 4FF40051 		mov	r1, #8192
 589 000c 1048     		ldr	r0, .L27
 590              	.LVL57:
 591              		.loc 1 979 5 is_stmt 0 discriminator 1 view .LVU154
 592 000e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 593              	.LVL58:
 980:Core/Src/main.c ****     HAL_IWDG_Refresh(&hiwdg);
 594              		.loc 1 980 5 is_stmt 1 discriminator 1 view .LVU155
 595 0012 1048     		ldr	r0, .L27+4
 596 0014 FFF7FEFF 		bl	HAL_IWDG_Refresh
 597              	.LVL59:
 981:Core/Src/main.c ****     updateTemp(ldu.hsTemp);
 598              		.loc 1 981 5 discriminator 1 view .LVU156
 599 0018 0F4D     		ldr	r5, .L27+8
 600 001a A888     		ldrh	r0, [r5, #4]
 601 001c 80B2     		uxth	r0, r0
ARM GAS  /tmp/ccEx5Llz.s 			page 29


 602 001e FFF7FEFF 		bl	updateTemp
 603              	.LVL60:
 982:Core/Src/main.c ****     updateSOC(BMS[0].chargeState, ldu.amps);
 604              		.loc 1 982 5 discriminator 1 view .LVU157
 605 0022 6989     		ldrh	r1, [r5, #10]
 606 0024 89B2     		uxth	r1, r1
 607 0026 0D4B     		ldr	r3, .L27+12
 608 0028 187A     		ldrb	r0, [r3, #8]	@ zero_extendqisi2
 609 002a FFF7FEFF 		bl	updateSOC
 610              	.LVL61:
 983:Core/Src/main.c ****     vehicleComms();
 611              		.loc 1 983 5 discriminator 1 view .LVU158
 612 002e FFF7FEFF 		bl	vehicleComms
 613              	.LVL62:
 984:Core/Src/main.c ****     encoderHandler();
 614              		.loc 1 984 5 discriminator 1 view .LVU159
 615 0032 FFF7FEFF 		bl	encoderHandler
 616              	.LVL63:
 985:Core/Src/main.c ****     taskTime.Task250ms = (HAL_GetTick() - taskStart);
 617              		.loc 1 985 5 discriminator 1 view .LVU160
 618              		.loc 1 985 27 is_stmt 0 discriminator 1 view .LVU161
 619 0036 FFF7FEFF 		bl	HAL_GetTick
 620              	.LVL64:
 621              		.loc 1 985 41 discriminator 1 view .LVU162
 622 003a 001B     		subs	r0, r0, r4
 623              		.loc 1 985 24 discriminator 1 view .LVU163
 624 003c 084C     		ldr	r4, .L27+16
 625              	.LVL65:
 626              		.loc 1 985 24 discriminator 1 view .LVU164
 627 003e 2083     		strh	r0, [r4, #24]	@ movhi
 986:Core/Src/main.c ****     taskTime.Task250ms_lastRun = HAL_GetTick();
 628              		.loc 1 986 5 is_stmt 1 discriminator 1 view .LVU165
 629              		.loc 1 986 34 is_stmt 0 discriminator 1 view .LVU166
 630 0040 FFF7FEFF 		bl	HAL_GetTick
 631              	.LVL66:
 632              		.loc 1 986 32 discriminator 1 view .LVU167
 633 0044 E061     		str	r0, [r4, #28]
 987:Core/Src/main.c **** 
 988:Core/Src/main.c ****     /*
 989:Core/Src/main.c ****     if (taskTime.Task250ms > taskTime.Task250ms_max)
 990:Core/Src/main.c ****     {
 991:Core/Src/main.c ****       taskTime.Task250ms_max = taskTime.Task250ms;
 992:Core/Src/main.c ****     }
 993:Core/Src/main.c ****     */
 994:Core/Src/main.c ****     osDelay(250);
 634              		.loc 1 994 5 is_stmt 1 discriminator 1 view .LVU168
 635 0046 FA20     		movs	r0, #250
 636 0048 FFF7FEFF 		bl	osDelay
 637              	.LVL67:
 638              	.LBE13:
 974:Core/Src/main.c **** 
 639              		.loc 1 974 9 discriminator 1 view .LVU169
 640 004c D9E7     		b	.L25
 641              	.L28:
 642 004e 00BF     		.align	2
 643              	.L27:
 644 0050 00100140 		.word	1073811456
ARM GAS  /tmp/ccEx5Llz.s 			page 30


 645 0054 00000000 		.word	hiwdg
 646 0058 00000000 		.word	ldu
 647 005c 00000000 		.word	BMS
 648 0060 00000000 		.word	taskTime
 649              		.cfi_endproc
 650              	.LFE92:
 652              		.section	.text.__io_putchar,"ax",%progbits
 653              		.align	1
 654              		.global	__io_putchar
 655              		.syntax unified
 656              		.thumb
 657              		.thumb_func
 658              		.fpu softvfp
 660              	__io_putchar:
 661              	.LVL68:
 662              	.LFB72:
 663              		.file 2 "Core/Inc/print_uart.h"
   1:Core/Inc/print_uart.h **** #ifndef __PRINT_UART_H
   2:Core/Inc/print_uart.h **** #define __PRINT_UART_H
   3:Core/Inc/print_uart.h **** 
   4:Core/Inc/print_uart.h **** 
   5:Core/Inc/print_uart.h **** #include <stdio.h>
   6:Core/Inc/print_uart.h **** #include "stm32f1xx_hal.h"
   7:Core/Inc/print_uart.h **** 
   8:Core/Inc/print_uart.h **** UART_HandleTypeDef huart1;
   9:Core/Inc/print_uart.h **** 
  10:Core/Inc/print_uart.h **** //////////////////////////// Begin UART Magic ////////////////////////
  11:Core/Inc/print_uart.h **** int __io_putchar(int ch)
  12:Core/Inc/print_uart.h **** {
 664              		.loc 2 12 1 view -0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 8
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              		.loc 2 12 1 is_stmt 0 view .LVU171
 669 0000 10B5     		push	{r4, lr}
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 4, -8
 672              		.cfi_offset 14, -4
 673 0002 82B0     		sub	sp, sp, #8
 674              		.cfi_def_cfa_offset 16
 675 0004 0446     		mov	r4, r0
  13:Core/Inc/print_uart.h ****  uint8_t c[1];
 676              		.loc 2 13 2 is_stmt 1 view .LVU172
  14:Core/Inc/print_uart.h ****  c[0] = ch & 0x00FF;
 677              		.loc 2 14 2 view .LVU173
 678              		.loc 2 14 7 is_stmt 0 view .LVU174
 679 0006 8DF80400 		strb	r0, [sp, #4]
  15:Core/Inc/print_uart.h ****  HAL_UART_Transmit(&huart1, &*c, 1, 10);
 680              		.loc 2 15 2 is_stmt 1 view .LVU175
 681 000a 0A23     		movs	r3, #10
 682 000c 0122     		movs	r2, #1
 683 000e 01A9     		add	r1, sp, #4
 684 0010 0248     		ldr	r0, .L31
 685              	.LVL69:
 686              		.loc 2 15 2 is_stmt 0 view .LVU176
 687 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 688              	.LVL70:
ARM GAS  /tmp/ccEx5Llz.s 			page 31


  16:Core/Inc/print_uart.h ****  return ch;
 689              		.loc 2 16 2 is_stmt 1 view .LVU177
  17:Core/Inc/print_uart.h **** }
 690              		.loc 2 17 1 is_stmt 0 view .LVU178
 691 0016 2046     		mov	r0, r4
 692 0018 02B0     		add	sp, sp, #8
 693              		.cfi_def_cfa_offset 8
 694              		@ sp needed
 695 001a 10BD     		pop	{r4, pc}
 696              	.LVL71:
 697              	.L32:
 698              		.loc 2 17 1 view .LVU179
 699              		.align	2
 700              	.L31:
 701 001c 00000000 		.word	huart1
 702              		.cfi_endproc
 703              	.LFE72:
 705              		.section	.text._write,"ax",%progbits
 706              		.align	1
 707              		.global	_write
 708              		.syntax unified
 709              		.thumb
 710              		.thumb_func
 711              		.fpu softvfp
 713              	_write:
 714              	.LVL72:
 715              	.LFB73:
  18:Core/Inc/print_uart.h **** 
  19:Core/Inc/print_uart.h **** int _write(int file,char *ptr, int len)
  20:Core/Inc/print_uart.h **** {
 716              		.loc 2 20 1 is_stmt 1 view -0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720              		.loc 2 20 1 is_stmt 0 view .LVU181
 721 0000 70B5     		push	{r4, r5, r6, lr}
 722              		.cfi_def_cfa_offset 16
 723              		.cfi_offset 4, -16
 724              		.cfi_offset 5, -12
 725              		.cfi_offset 6, -8
 726              		.cfi_offset 14, -4
 727 0002 0C46     		mov	r4, r1
 728 0004 1646     		mov	r6, r2
  21:Core/Inc/print_uart.h ****  int DataIdx;
 729              		.loc 2 21 2 is_stmt 1 view .LVU182
  22:Core/Inc/print_uart.h ****  for(DataIdx= 0; DataIdx< len; DataIdx++)
 730              		.loc 2 22 2 view .LVU183
 731              	.LVL73:
 732              		.loc 2 22 13 is_stmt 0 view .LVU184
 733 0006 0025     		movs	r5, #0
 734              	.LVL74:
 735              	.L34:
 736              		.loc 2 22 18 is_stmt 1 discriminator 1 view .LVU185
 737              		.loc 2 22 2 is_stmt 0 discriminator 1 view .LVU186
 738 0008 B542     		cmp	r5, r6
 739 000a 05DA     		bge	.L37
  23:Core/Inc/print_uart.h ****  {
ARM GAS  /tmp/ccEx5Llz.s 			page 32


  24:Core/Inc/print_uart.h ****  __io_putchar(*ptr++);
 740              		.loc 2 24 2 is_stmt 1 discriminator 3 view .LVU187
 741              	.LVL75:
 742              		.loc 2 24 2 is_stmt 0 discriminator 3 view .LVU188
 743 000c 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 744              	.LVL76:
 745              		.loc 2 24 2 discriminator 3 view .LVU189
 746 0010 FFF7FEFF 		bl	__io_putchar
 747              	.LVL77:
  22:Core/Inc/print_uart.h ****  for(DataIdx= 0; DataIdx< len; DataIdx++)
 748              		.loc 2 22 32 is_stmt 1 discriminator 3 view .LVU190
  22:Core/Inc/print_uart.h ****  for(DataIdx= 0; DataIdx< len; DataIdx++)
 749              		.loc 2 22 39 is_stmt 0 discriminator 3 view .LVU191
 750 0014 0135     		adds	r5, r5, #1
 751              	.LVL78:
  22:Core/Inc/print_uart.h ****  for(DataIdx= 0; DataIdx< len; DataIdx++)
 752              		.loc 2 22 39 discriminator 3 view .LVU192
 753 0016 F7E7     		b	.L34
 754              	.L37:
  25:Core/Inc/print_uart.h ****  }
  26:Core/Inc/print_uart.h **** return len;
 755              		.loc 2 26 1 is_stmt 1 view .LVU193
  27:Core/Inc/print_uart.h **** }
 756              		.loc 2 27 1 is_stmt 0 view .LVU194
 757 0018 3046     		mov	r0, r6
 758 001a 70BD     		pop	{r4, r5, r6, pc}
 759              		.loc 2 27 1 view .LVU195
 760              		.cfi_endproc
 761              	.LFE73:
 763              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 764              		.align	1
 765              		.global	HAL_TIM_PeriodElapsedCallback
 766              		.syntax unified
 767              		.thumb
 768              		.thumb_func
 769              		.fpu softvfp
 771              	HAL_TIM_PeriodElapsedCallback:
 772              	.LVL79:
 773              	.LFB93:
 995:Core/Src/main.c ****     
 996:Core/Src/main.c ****   }
 997:Core/Src/main.c ****   // Add termination if exit the loop accidentally
 998:Core/Src/main.c ****   osThreadTerminate(NULL);
 999:Core/Src/main.c ****   /* USER CODE END StartTask250ms */
1000:Core/Src/main.c **** }
1001:Core/Src/main.c **** 
1002:Core/Src/main.c **** /**
1003:Core/Src/main.c ****  * @brief  Period elapsed callback in non blocking mode
1004:Core/Src/main.c ****  * @note   This function is called  when TIM7 interrupt took place, inside
1005:Core/Src/main.c ****  * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
1006:Core/Src/main.c ****  * a global variable "uwTick" used as application time base.
1007:Core/Src/main.c ****  * @param  htim : TIM handle
1008:Core/Src/main.c ****  * @retval None
1009:Core/Src/main.c ****  */
1010:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
1011:Core/Src/main.c **** {
 774              		.loc 1 1011 1 is_stmt 1 view -0
ARM GAS  /tmp/ccEx5Llz.s 			page 33


 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              		.loc 1 1011 1 is_stmt 0 view .LVU197
 779 0000 08B5     		push	{r3, lr}
 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 3, -8
 782              		.cfi_offset 14, -4
1012:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
1013:Core/Src/main.c **** 
1014:Core/Src/main.c ****   /* USER CODE END Callback 0 */
1015:Core/Src/main.c ****   if (htim->Instance == TIM7)
 783              		.loc 1 1015 3 is_stmt 1 view .LVU198
 784              		.loc 1 1015 11 is_stmt 0 view .LVU199
 785 0002 0268     		ldr	r2, [r0]
 786              		.loc 1 1015 6 view .LVU200
 787 0004 034B     		ldr	r3, .L42
 788 0006 9A42     		cmp	r2, r3
 789 0008 00D0     		beq	.L41
 790              	.LVL80:
 791              	.L38:
1016:Core/Src/main.c ****   {
1017:Core/Src/main.c ****     HAL_IncTick();
1018:Core/Src/main.c ****   }
1019:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
1020:Core/Src/main.c **** 
1021:Core/Src/main.c ****   /* USER CODE END Callback 1 */
1022:Core/Src/main.c **** }
 792              		.loc 1 1022 1 view .LVU201
 793 000a 08BD     		pop	{r3, pc}
 794              	.LVL81:
 795              	.L41:
1017:Core/Src/main.c ****   }
 796              		.loc 1 1017 5 is_stmt 1 view .LVU202
 797 000c FFF7FEFF 		bl	HAL_IncTick
 798              	.LVL82:
 799              		.loc 1 1022 1 is_stmt 0 view .LVU203
 800 0010 FBE7     		b	.L38
 801              	.L43:
 802 0012 00BF     		.align	2
 803              	.L42:
 804 0014 00140040 		.word	1073746944
 805              		.cfi_endproc
 806              	.LFE93:
 808              		.section	.text.Error_Handler,"ax",%progbits
 809              		.align	1
 810              		.global	Error_Handler
 811              		.syntax unified
 812              		.thumb
 813              		.thumb_func
 814              		.fpu softvfp
 816              	Error_Handler:
 817              	.LFB94:
1023:Core/Src/main.c **** 
1024:Core/Src/main.c **** /**
1025:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
1026:Core/Src/main.c ****  * @retval None
ARM GAS  /tmp/ccEx5Llz.s 			page 34


1027:Core/Src/main.c ****  */
1028:Core/Src/main.c **** void Error_Handler(void)
1029:Core/Src/main.c **** {
 818              		.loc 1 1029 1 is_stmt 1 view -0
 819              		.cfi_startproc
 820              		@ Volatile: function does not return.
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 0, uses_anonymous_args = 0
 823              		@ link register save eliminated.
1030:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1031:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
1032:Core/Src/main.c ****   __disable_irq();
 824              		.loc 1 1032 3 view .LVU205
 825              	.LBB14:
 826              	.LBI14:
 827              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
ARM GAS  /tmp/ccEx5Llz.s 			page 35


  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
ARM GAS  /tmp/ccEx5Llz.s 			page 36


  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 828              		.loc 3 140 27 view .LVU206
 829              	.LBB15:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 830              		.loc 3 142 3 view .LVU207
 831              		.syntax unified
 832              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 833 0000 72B6     		cpsid i
 834              	@ 0 "" 2
 835              		.thumb
 836              		.syntax unified
 837              	.L45:
 838              	.LBE15:
 839              	.LBE14:
1033:Core/Src/main.c ****   while (1)
ARM GAS  /tmp/ccEx5Llz.s 			page 37


 840              		.loc 1 1033 3 discriminator 1 view .LVU208
1034:Core/Src/main.c ****   {
1035:Core/Src/main.c ****   }
 841              		.loc 1 1035 3 discriminator 1 view .LVU209
1033:Core/Src/main.c ****   while (1)
 842              		.loc 1 1033 9 discriminator 1 view .LVU210
 843 0002 FEE7     		b	.L45
 844              		.cfi_endproc
 845              	.LFE94:
 847              		.section	.text.MX_CAN2_Init,"ax",%progbits
 848              		.align	1
 849              		.syntax unified
 850              		.thumb
 851              		.thumb_func
 852              		.fpu softvfp
 854              	MX_CAN2_Init:
 855              	.LFB78:
 403:Core/Src/main.c **** 
 856              		.loc 1 403 1 view -0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 0
 859              		@ frame_needed = 0, uses_anonymous_args = 0
 860 0000 08B5     		push	{r3, lr}
 861              		.cfi_def_cfa_offset 8
 862              		.cfi_offset 3, -8
 863              		.cfi_offset 14, -4
 412:Core/Src/main.c ****   hcan2.Init.Prescaler = 12;
 864              		.loc 1 412 3 view .LVU212
 412:Core/Src/main.c ****   hcan2.Init.Prescaler = 12;
 865              		.loc 1 412 18 is_stmt 0 view .LVU213
 866 0002 0D48     		ldr	r0, .L50
 867 0004 0D4B     		ldr	r3, .L50+4
 868 0006 0360     		str	r3, [r0]
 413:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 869              		.loc 1 413 3 is_stmt 1 view .LVU214
 413:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 870              		.loc 1 413 24 is_stmt 0 view .LVU215
 871 0008 0C23     		movs	r3, #12
 872 000a 4360     		str	r3, [r0, #4]
 414:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 873              		.loc 1 414 3 is_stmt 1 view .LVU216
 414:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 874              		.loc 1 414 19 is_stmt 0 view .LVU217
 875 000c 0023     		movs	r3, #0
 876 000e 8360     		str	r3, [r0, #8]
 415:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_2TQ;
 877              		.loc 1 415 3 is_stmt 1 view .LVU218
 415:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_2TQ;
 878              		.loc 1 415 28 is_stmt 0 view .LVU219
 879 0010 C360     		str	r3, [r0, #12]
 416:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_3TQ;
 880              		.loc 1 416 3 is_stmt 1 view .LVU220
 416:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_3TQ;
 881              		.loc 1 416 23 is_stmt 0 view .LVU221
 882 0012 4FF48032 		mov	r2, #65536
 883 0016 0261     		str	r2, [r0, #16]
 417:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
ARM GAS  /tmp/ccEx5Llz.s 			page 38


 884              		.loc 1 417 3 is_stmt 1 view .LVU222
 417:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 885              		.loc 1 417 23 is_stmt 0 view .LVU223
 886 0018 4FF40012 		mov	r2, #2097152
 887 001c 4261     		str	r2, [r0, #20]
 418:Core/Src/main.c ****   hcan2.Init.AutoBusOff = ENABLE;
 888              		.loc 1 418 3 is_stmt 1 view .LVU224
 418:Core/Src/main.c ****   hcan2.Init.AutoBusOff = ENABLE;
 889              		.loc 1 418 32 is_stmt 0 view .LVU225
 890 001e 0376     		strb	r3, [r0, #24]
 419:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 891              		.loc 1 419 3 is_stmt 1 view .LVU226
 419:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 892              		.loc 1 419 25 is_stmt 0 view .LVU227
 893 0020 0122     		movs	r2, #1
 894 0022 4276     		strb	r2, [r0, #25]
 420:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 895              		.loc 1 420 3 is_stmt 1 view .LVU228
 420:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 896              		.loc 1 420 25 is_stmt 0 view .LVU229
 897 0024 8376     		strb	r3, [r0, #26]
 421:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 898              		.loc 1 421 3 is_stmt 1 view .LVU230
 421:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 899              		.loc 1 421 33 is_stmt 0 view .LVU231
 900 0026 C376     		strb	r3, [r0, #27]
 422:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 901              		.loc 1 422 3 is_stmt 1 view .LVU232
 422:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 902              		.loc 1 422 32 is_stmt 0 view .LVU233
 903 0028 0377     		strb	r3, [r0, #28]
 423:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 904              		.loc 1 423 3 is_stmt 1 view .LVU234
 423:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 905              		.loc 1 423 35 is_stmt 0 view .LVU235
 906 002a 4377     		strb	r3, [r0, #29]
 424:Core/Src/main.c ****   {
 907              		.loc 1 424 3 is_stmt 1 view .LVU236
 424:Core/Src/main.c ****   {
 908              		.loc 1 424 7 is_stmt 0 view .LVU237
 909 002c FFF7FEFF 		bl	HAL_CAN_Init
 910              	.LVL83:
 424:Core/Src/main.c ****   {
 911              		.loc 1 424 6 view .LVU238
 912 0030 00B9     		cbnz	r0, .L49
 431:Core/Src/main.c **** 
 913              		.loc 1 431 1 view .LVU239
 914 0032 08BD     		pop	{r3, pc}
 915              	.L49:
 426:Core/Src/main.c ****   }
 916              		.loc 1 426 5 is_stmt 1 view .LVU240
 917 0034 FFF7FEFF 		bl	Error_Handler
 918              	.LVL84:
 919              	.L51:
 920              		.align	2
 921              	.L50:
 922 0038 00000000 		.word	hcan2
ARM GAS  /tmp/ccEx5Llz.s 			page 39


 923 003c 00680040 		.word	1073768448
 924              		.cfi_endproc
 925              	.LFE78:
 927              		.section	.text.MX_ADC1_Init,"ax",%progbits
 928              		.align	1
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 932              		.fpu softvfp
 934              	MX_ADC1_Init:
 935              	.LFB76:
 306:Core/Src/main.c **** 
 936              		.loc 1 306 1 view -0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 16
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940 0000 00B5     		push	{lr}
 941              		.cfi_def_cfa_offset 4
 942              		.cfi_offset 14, -4
 943 0002 85B0     		sub	sp, sp, #20
 944              		.cfi_def_cfa_offset 24
 312:Core/Src/main.c **** 
 945              		.loc 1 312 3 view .LVU242
 312:Core/Src/main.c **** 
 946              		.loc 1 312 26 is_stmt 0 view .LVU243
 947 0004 0023     		movs	r3, #0
 948 0006 0193     		str	r3, [sp, #4]
 949 0008 0293     		str	r3, [sp, #8]
 950 000a 0393     		str	r3, [sp, #12]
 319:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 951              		.loc 1 319 3 is_stmt 1 view .LVU244
 319:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 952              		.loc 1 319 18 is_stmt 0 view .LVU245
 953 000c 1E48     		ldr	r0, .L62
 954 000e 1F4A     		ldr	r2, .L62+4
 955 0010 0260     		str	r2, [r0]
 320:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 956              		.loc 1 320 3 is_stmt 1 view .LVU246
 320:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 957              		.loc 1 320 27 is_stmt 0 view .LVU247
 958 0012 4FF48072 		mov	r2, #256
 959 0016 8260     		str	r2, [r0, #8]
 321:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 960              		.loc 1 321 3 is_stmt 1 view .LVU248
 321:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 961              		.loc 1 321 33 is_stmt 0 view .LVU249
 962 0018 0122     		movs	r2, #1
 963 001a 0273     		strb	r2, [r0, #12]
 322:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 964              		.loc 1 322 3 is_stmt 1 view .LVU250
 322:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 965              		.loc 1 322 36 is_stmt 0 view .LVU251
 966 001c 0375     		strb	r3, [r0, #20]
 323:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 967              		.loc 1 323 3 is_stmt 1 view .LVU252
 323:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 968              		.loc 1 323 31 is_stmt 0 view .LVU253
ARM GAS  /tmp/ccEx5Llz.s 			page 40


 969 001e 4FF46022 		mov	r2, #917504
 970 0022 C261     		str	r2, [r0, #28]
 324:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 3;
 971              		.loc 1 324 3 is_stmt 1 view .LVU254
 324:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 3;
 972              		.loc 1 324 24 is_stmt 0 view .LVU255
 973 0024 4360     		str	r3, [r0, #4]
 325:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 974              		.loc 1 325 3 is_stmt 1 view .LVU256
 325:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 975              		.loc 1 325 30 is_stmt 0 view .LVU257
 976 0026 0323     		movs	r3, #3
 977 0028 0361     		str	r3, [r0, #16]
 326:Core/Src/main.c ****   {
 978              		.loc 1 326 3 is_stmt 1 view .LVU258
 326:Core/Src/main.c ****   {
 979              		.loc 1 326 7 is_stmt 0 view .LVU259
 980 002a FFF7FEFF 		bl	HAL_ADC_Init
 981              	.LVL85:
 326:Core/Src/main.c ****   {
 982              		.loc 1 326 6 view .LVU260
 983 002e 10BB     		cbnz	r0, .L58
 332:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 984              		.loc 1 332 3 is_stmt 1 view .LVU261
 332:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 985              		.loc 1 332 19 is_stmt 0 view .LVU262
 986 0030 0B23     		movs	r3, #11
 987 0032 0193     		str	r3, [sp, #4]
 333:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 988              		.loc 1 333 3 is_stmt 1 view .LVU263
 333:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 989              		.loc 1 333 16 is_stmt 0 view .LVU264
 990 0034 0123     		movs	r3, #1
 991 0036 0293     		str	r3, [sp, #8]
 334:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 992              		.loc 1 334 3 is_stmt 1 view .LVU265
 334:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 993              		.loc 1 334 24 is_stmt 0 view .LVU266
 994 0038 0723     		movs	r3, #7
 995 003a 0393     		str	r3, [sp, #12]
 335:Core/Src/main.c ****   {
 996              		.loc 1 335 3 is_stmt 1 view .LVU267
 335:Core/Src/main.c ****   {
 997              		.loc 1 335 7 is_stmt 0 view .LVU268
 998 003c 01A9     		add	r1, sp, #4
 999 003e 1248     		ldr	r0, .L62
 1000 0040 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1001              	.LVL86:
 335:Core/Src/main.c ****   {
 1002              		.loc 1 335 6 view .LVU269
 1003 0044 C8B9     		cbnz	r0, .L59
 341:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 1004              		.loc 1 341 3 is_stmt 1 view .LVU270
 341:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 1005              		.loc 1 341 19 is_stmt 0 view .LVU271
 1006 0046 0523     		movs	r3, #5
 1007 0048 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccEx5Llz.s 			page 41


 342:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_41CYCLES_5;
 1008              		.loc 1 342 3 is_stmt 1 view .LVU272
 342:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_41CYCLES_5;
 1009              		.loc 1 342 16 is_stmt 0 view .LVU273
 1010 004a 0223     		movs	r3, #2
 1011 004c 0293     		str	r3, [sp, #8]
 343:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1012              		.loc 1 343 3 is_stmt 1 view .LVU274
 343:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1013              		.loc 1 343 24 is_stmt 0 view .LVU275
 1014 004e 0423     		movs	r3, #4
 1015 0050 0393     		str	r3, [sp, #12]
 344:Core/Src/main.c ****   {
 1016              		.loc 1 344 3 is_stmt 1 view .LVU276
 344:Core/Src/main.c ****   {
 1017              		.loc 1 344 7 is_stmt 0 view .LVU277
 1018 0052 0DEB0301 		add	r1, sp, r3
 1019 0056 0C48     		ldr	r0, .L62
 1020 0058 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1021              	.LVL87:
 344:Core/Src/main.c ****   {
 1022              		.loc 1 344 6 view .LVU278
 1023 005c 78B9     		cbnz	r0, .L60
 350:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 1024              		.loc 1 350 3 is_stmt 1 view .LVU279
 350:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 1025              		.loc 1 350 19 is_stmt 0 view .LVU280
 1026 005e 0623     		movs	r3, #6
 1027 0060 0193     		str	r3, [sp, #4]
 351:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1028              		.loc 1 351 3 is_stmt 1 view .LVU281
 351:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1029              		.loc 1 351 16 is_stmt 0 view .LVU282
 1030 0062 0323     		movs	r3, #3
 1031 0064 0293     		str	r3, [sp, #8]
 352:Core/Src/main.c ****   {
 1032              		.loc 1 352 3 is_stmt 1 view .LVU283
 352:Core/Src/main.c ****   {
 1033              		.loc 1 352 7 is_stmt 0 view .LVU284
 1034 0066 01A9     		add	r1, sp, #4
 1035 0068 0748     		ldr	r0, .L62
 1036 006a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1037              	.LVL88:
 352:Core/Src/main.c ****   {
 1038              		.loc 1 352 6 view .LVU285
 1039 006e 40B9     		cbnz	r0, .L61
 359:Core/Src/main.c **** 
 1040              		.loc 1 359 1 view .LVU286
 1041 0070 05B0     		add	sp, sp, #20
 1042              		.cfi_remember_state
 1043              		.cfi_def_cfa_offset 4
 1044              		@ sp needed
 1045 0072 5DF804FB 		ldr	pc, [sp], #4
 1046              	.L58:
 1047              		.cfi_restore_state
 328:Core/Src/main.c ****   }
 1048              		.loc 1 328 5 is_stmt 1 view .LVU287
ARM GAS  /tmp/ccEx5Llz.s 			page 42


 1049 0076 FFF7FEFF 		bl	Error_Handler
 1050              	.LVL89:
 1051              	.L59:
 337:Core/Src/main.c ****   }
 1052              		.loc 1 337 5 view .LVU288
 1053 007a FFF7FEFF 		bl	Error_Handler
 1054              	.LVL90:
 1055              	.L60:
 346:Core/Src/main.c ****   }
 1056              		.loc 1 346 5 view .LVU289
 1057 007e FFF7FEFF 		bl	Error_Handler
 1058              	.LVL91:
 1059              	.L61:
 354:Core/Src/main.c ****   }
 1060              		.loc 1 354 5 view .LVU290
 1061 0082 FFF7FEFF 		bl	Error_Handler
 1062              	.LVL92:
 1063              	.L63:
 1064 0086 00BF     		.align	2
 1065              	.L62:
 1066 0088 00000000 		.word	hadc1
 1067 008c 00240140 		.word	1073816576
 1068              		.cfi_endproc
 1069              	.LFE76:
 1071              		.section	.text.MX_CAN1_Init,"ax",%progbits
 1072              		.align	1
 1073              		.syntax unified
 1074              		.thumb
 1075              		.thumb_func
 1076              		.fpu softvfp
 1078              	MX_CAN1_Init:
 1079              	.LFB77:
 367:Core/Src/main.c **** 
 1080              		.loc 1 367 1 view -0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 0
 1083              		@ frame_needed = 0, uses_anonymous_args = 0
 1084 0000 08B5     		push	{r3, lr}
 1085              		.cfi_def_cfa_offset 8
 1086              		.cfi_offset 3, -8
 1087              		.cfi_offset 14, -4
 376:Core/Src/main.c ****   hcan1.Init.Prescaler = 12;
 1088              		.loc 1 376 3 view .LVU292
 376:Core/Src/main.c ****   hcan1.Init.Prescaler = 12;
 1089              		.loc 1 376 18 is_stmt 0 view .LVU293
 1090 0002 0D48     		ldr	r0, .L68
 1091 0004 0D4B     		ldr	r3, .L68+4
 1092 0006 0360     		str	r3, [r0]
 377:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1093              		.loc 1 377 3 is_stmt 1 view .LVU294
 377:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 1094              		.loc 1 377 24 is_stmt 0 view .LVU295
 1095 0008 0C23     		movs	r3, #12
 1096 000a 4360     		str	r3, [r0, #4]
 378:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1097              		.loc 1 378 3 is_stmt 1 view .LVU296
 378:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
ARM GAS  /tmp/ccEx5Llz.s 			page 43


 1098              		.loc 1 378 19 is_stmt 0 view .LVU297
 1099 000c 0023     		movs	r3, #0
 1100 000e 8360     		str	r3, [r0, #8]
 379:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_2TQ;
 1101              		.loc 1 379 3 is_stmt 1 view .LVU298
 379:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_2TQ;
 1102              		.loc 1 379 28 is_stmt 0 view .LVU299
 1103 0010 C360     		str	r3, [r0, #12]
 380:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_3TQ;
 1104              		.loc 1 380 3 is_stmt 1 view .LVU300
 380:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_3TQ;
 1105              		.loc 1 380 23 is_stmt 0 view .LVU301
 1106 0012 4FF48032 		mov	r2, #65536
 1107 0016 0261     		str	r2, [r0, #16]
 381:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1108              		.loc 1 381 3 is_stmt 1 view .LVU302
 381:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 1109              		.loc 1 381 23 is_stmt 0 view .LVU303
 1110 0018 4FF40012 		mov	r2, #2097152
 1111 001c 4261     		str	r2, [r0, #20]
 382:Core/Src/main.c ****   hcan1.Init.AutoBusOff = ENABLE;
 1112              		.loc 1 382 3 is_stmt 1 view .LVU304
 382:Core/Src/main.c ****   hcan1.Init.AutoBusOff = ENABLE;
 1113              		.loc 1 382 32 is_stmt 0 view .LVU305
 1114 001e 0376     		strb	r3, [r0, #24]
 383:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 1115              		.loc 1 383 3 is_stmt 1 view .LVU306
 383:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 1116              		.loc 1 383 25 is_stmt 0 view .LVU307
 1117 0020 0122     		movs	r2, #1
 1118 0022 4276     		strb	r2, [r0, #25]
 384:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 1119              		.loc 1 384 3 is_stmt 1 view .LVU308
 384:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 1120              		.loc 1 384 25 is_stmt 0 view .LVU309
 1121 0024 8376     		strb	r3, [r0, #26]
 385:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1122              		.loc 1 385 3 is_stmt 1 view .LVU310
 385:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 1123              		.loc 1 385 33 is_stmt 0 view .LVU311
 1124 0026 C376     		strb	r3, [r0, #27]
 386:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 1125              		.loc 1 386 3 is_stmt 1 view .LVU312
 386:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 1126              		.loc 1 386 32 is_stmt 0 view .LVU313
 1127 0028 0377     		strb	r3, [r0, #28]
 387:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1128              		.loc 1 387 3 is_stmt 1 view .LVU314
 387:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 1129              		.loc 1 387 35 is_stmt 0 view .LVU315
 1130 002a 4377     		strb	r3, [r0, #29]
 388:Core/Src/main.c ****   {
 1131              		.loc 1 388 3 is_stmt 1 view .LVU316
 388:Core/Src/main.c ****   {
 1132              		.loc 1 388 7 is_stmt 0 view .LVU317
 1133 002c FFF7FEFF 		bl	HAL_CAN_Init
 1134              	.LVL93:
ARM GAS  /tmp/ccEx5Llz.s 			page 44


 388:Core/Src/main.c ****   {
 1135              		.loc 1 388 6 view .LVU318
 1136 0030 00B9     		cbnz	r0, .L67
 395:Core/Src/main.c **** 
 1137              		.loc 1 395 1 view .LVU319
 1138 0032 08BD     		pop	{r3, pc}
 1139              	.L67:
 390:Core/Src/main.c ****   }
 1140              		.loc 1 390 5 is_stmt 1 view .LVU320
 1141 0034 FFF7FEFF 		bl	Error_Handler
 1142              	.LVL94:
 1143              	.L69:
 1144              		.align	2
 1145              	.L68:
 1146 0038 00000000 		.word	hcan1
 1147 003c 00640040 		.word	1073767424
 1148              		.cfi_endproc
 1149              	.LFE77:
 1151              		.section	.text.MX_UART4_Init,"ax",%progbits
 1152              		.align	1
 1153              		.syntax unified
 1154              		.thumb
 1155              		.thumb_func
 1156              		.fpu softvfp
 1158              	MX_UART4_Init:
 1159              	.LFB85:
 706:Core/Src/main.c **** 
 1160              		.loc 1 706 1 view -0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 0
 1163              		@ frame_needed = 0, uses_anonymous_args = 0
 1164 0000 08B5     		push	{r3, lr}
 1165              		.cfi_def_cfa_offset 8
 1166              		.cfi_offset 3, -8
 1167              		.cfi_offset 14, -4
 715:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 1168              		.loc 1 715 3 view .LVU322
 715:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 1169              		.loc 1 715 19 is_stmt 0 view .LVU323
 1170 0002 0A48     		ldr	r0, .L74
 1171 0004 0A4B     		ldr	r3, .L74+4
 1172 0006 0360     		str	r3, [r0]
 716:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 1173              		.loc 1 716 3 is_stmt 1 view .LVU324
 716:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 1174              		.loc 1 716 24 is_stmt 0 view .LVU325
 1175 0008 4FF4E133 		mov	r3, #115200
 1176 000c 4360     		str	r3, [r0, #4]
 717:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 1177              		.loc 1 717 3 is_stmt 1 view .LVU326
 717:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 1178              		.loc 1 717 26 is_stmt 0 view .LVU327
 1179 000e 0023     		movs	r3, #0
 1180 0010 8360     		str	r3, [r0, #8]
 718:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 1181              		.loc 1 718 3 is_stmt 1 view .LVU328
 718:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
ARM GAS  /tmp/ccEx5Llz.s 			page 45


 1182              		.loc 1 718 24 is_stmt 0 view .LVU329
 1183 0012 C360     		str	r3, [r0, #12]
 719:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 1184              		.loc 1 719 3 is_stmt 1 view .LVU330
 719:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 1185              		.loc 1 719 22 is_stmt 0 view .LVU331
 1186 0014 0361     		str	r3, [r0, #16]
 720:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1187              		.loc 1 720 3 is_stmt 1 view .LVU332
 720:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1188              		.loc 1 720 20 is_stmt 0 view .LVU333
 1189 0016 0C22     		movs	r2, #12
 1190 0018 4261     		str	r2, [r0, #20]
 721:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 1191              		.loc 1 721 3 is_stmt 1 view .LVU334
 721:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 1192              		.loc 1 721 25 is_stmt 0 view .LVU335
 1193 001a 8361     		str	r3, [r0, #24]
 722:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 1194              		.loc 1 722 3 is_stmt 1 view .LVU336
 722:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 1195              		.loc 1 722 28 is_stmt 0 view .LVU337
 1196 001c C361     		str	r3, [r0, #28]
 723:Core/Src/main.c ****   {
 1197              		.loc 1 723 3 is_stmt 1 view .LVU338
 723:Core/Src/main.c ****   {
 1198              		.loc 1 723 7 is_stmt 0 view .LVU339
 1199 001e FFF7FEFF 		bl	HAL_UART_Init
 1200              	.LVL95:
 723:Core/Src/main.c ****   {
 1201              		.loc 1 723 6 view .LVU340
 1202 0022 00B9     		cbnz	r0, .L73
 730:Core/Src/main.c **** 
 1203              		.loc 1 730 1 view .LVU341
 1204 0024 08BD     		pop	{r3, pc}
 1205              	.L73:
 725:Core/Src/main.c ****   }
 1206              		.loc 1 725 5 is_stmt 1 view .LVU342
 1207 0026 FFF7FEFF 		bl	Error_Handler
 1208              	.LVL96:
 1209              	.L75:
 1210 002a 00BF     		.align	2
 1211              	.L74:
 1212 002c 00000000 		.word	huart4
 1213 0030 004C0040 		.word	1073761280
 1214              		.cfi_endproc
 1215              	.LFE85:
 1217              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1218              		.align	1
 1219              		.syntax unified
 1220              		.thumb
 1221              		.thumb_func
 1222              		.fpu softvfp
 1224              	MX_USART1_UART_Init:
 1225              	.LFB86:
 738:Core/Src/main.c **** 
 1226              		.loc 1 738 1 view -0
ARM GAS  /tmp/ccEx5Llz.s 			page 46


 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 0
 1229              		@ frame_needed = 0, uses_anonymous_args = 0
 1230 0000 08B5     		push	{r3, lr}
 1231              		.cfi_def_cfa_offset 8
 1232              		.cfi_offset 3, -8
 1233              		.cfi_offset 14, -4
 747:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1234              		.loc 1 747 3 view .LVU344
 747:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1235              		.loc 1 747 19 is_stmt 0 view .LVU345
 1236 0002 0A48     		ldr	r0, .L80
 1237 0004 0A4B     		ldr	r3, .L80+4
 1238 0006 0360     		str	r3, [r0]
 748:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1239              		.loc 1 748 3 is_stmt 1 view .LVU346
 748:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1240              		.loc 1 748 24 is_stmt 0 view .LVU347
 1241 0008 4FF4E133 		mov	r3, #115200
 1242 000c 4360     		str	r3, [r0, #4]
 749:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1243              		.loc 1 749 3 is_stmt 1 view .LVU348
 749:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1244              		.loc 1 749 26 is_stmt 0 view .LVU349
 1245 000e 0023     		movs	r3, #0
 1246 0010 8360     		str	r3, [r0, #8]
 750:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1247              		.loc 1 750 3 is_stmt 1 view .LVU350
 750:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1248              		.loc 1 750 24 is_stmt 0 view .LVU351
 1249 0012 C360     		str	r3, [r0, #12]
 751:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1250              		.loc 1 751 3 is_stmt 1 view .LVU352
 751:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1251              		.loc 1 751 22 is_stmt 0 view .LVU353
 1252 0014 0361     		str	r3, [r0, #16]
 752:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1253              		.loc 1 752 3 is_stmt 1 view .LVU354
 752:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1254              		.loc 1 752 20 is_stmt 0 view .LVU355
 1255 0016 0C22     		movs	r2, #12
 1256 0018 4261     		str	r2, [r0, #20]
 753:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1257              		.loc 1 753 3 is_stmt 1 view .LVU356
 753:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1258              		.loc 1 753 25 is_stmt 0 view .LVU357
 1259 001a 8361     		str	r3, [r0, #24]
 754:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1260              		.loc 1 754 3 is_stmt 1 view .LVU358
 754:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1261              		.loc 1 754 28 is_stmt 0 view .LVU359
 1262 001c C361     		str	r3, [r0, #28]
 755:Core/Src/main.c ****   {
 1263              		.loc 1 755 3 is_stmt 1 view .LVU360
 755:Core/Src/main.c ****   {
 1264              		.loc 1 755 7 is_stmt 0 view .LVU361
 1265 001e FFF7FEFF 		bl	HAL_UART_Init
ARM GAS  /tmp/ccEx5Llz.s 			page 47


 1266              	.LVL97:
 755:Core/Src/main.c ****   {
 1267              		.loc 1 755 6 view .LVU362
 1268 0022 00B9     		cbnz	r0, .L79
 762:Core/Src/main.c **** 
 1269              		.loc 1 762 1 view .LVU363
 1270 0024 08BD     		pop	{r3, pc}
 1271              	.L79:
 757:Core/Src/main.c ****   }
 1272              		.loc 1 757 5 is_stmt 1 view .LVU364
 1273 0026 FFF7FEFF 		bl	Error_Handler
 1274              	.LVL98:
 1275              	.L81:
 1276 002a 00BF     		.align	2
 1277              	.L80:
 1278 002c 00000000 		.word	huart1
 1279 0030 00380140 		.word	1073821696
 1280              		.cfi_endproc
 1281              	.LFE86:
 1283              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1284              		.align	1
 1285              		.syntax unified
 1286              		.thumb
 1287              		.thumb_func
 1288              		.fpu softvfp
 1290              	MX_TIM3_Init:
 1291              	.LFB83:
 597:Core/Src/main.c **** 
 1292              		.loc 1 597 1 view -0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 56
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 1296 0000 00B5     		push	{lr}
 1297              		.cfi_def_cfa_offset 4
 1298              		.cfi_offset 14, -4
 1299 0002 8FB0     		sub	sp, sp, #60
 1300              		.cfi_def_cfa_offset 64
 603:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1301              		.loc 1 603 3 view .LVU366
 603:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1302              		.loc 1 603 26 is_stmt 0 view .LVU367
 1303 0004 0023     		movs	r3, #0
 1304 0006 0A93     		str	r3, [sp, #40]
 1305 0008 0B93     		str	r3, [sp, #44]
 1306 000a 0C93     		str	r3, [sp, #48]
 1307 000c 0D93     		str	r3, [sp, #52]
 604:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1308              		.loc 1 604 3 is_stmt 1 view .LVU368
 604:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1309              		.loc 1 604 27 is_stmt 0 view .LVU369
 1310 000e 0893     		str	r3, [sp, #32]
 1311 0010 0993     		str	r3, [sp, #36]
 605:Core/Src/main.c **** 
 1312              		.loc 1 605 3 is_stmt 1 view .LVU370
 605:Core/Src/main.c **** 
 1313              		.loc 1 605 22 is_stmt 0 view .LVU371
 1314 0012 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccEx5Llz.s 			page 48


 1315 0014 0293     		str	r3, [sp, #8]
 1316 0016 0393     		str	r3, [sp, #12]
 1317 0018 0493     		str	r3, [sp, #16]
 1318 001a 0593     		str	r3, [sp, #20]
 1319 001c 0693     		str	r3, [sp, #24]
 1320 001e 0793     		str	r3, [sp, #28]
 610:Core/Src/main.c ****   htim3.Init.Prescaler = 120;
 1321              		.loc 1 610 3 is_stmt 1 view .LVU372
 610:Core/Src/main.c ****   htim3.Init.Prescaler = 120;
 1322              		.loc 1 610 18 is_stmt 0 view .LVU373
 1323 0020 1E48     		ldr	r0, .L94
 1324 0022 1F4A     		ldr	r2, .L94+4
 1325 0024 0260     		str	r2, [r0]
 611:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1326              		.loc 1 611 3 is_stmt 1 view .LVU374
 611:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1327              		.loc 1 611 24 is_stmt 0 view .LVU375
 1328 0026 7822     		movs	r2, #120
 1329 0028 4260     		str	r2, [r0, #4]
 612:Core/Src/main.c ****   htim3.Init.Period = 600;
 1330              		.loc 1 612 3 is_stmt 1 view .LVU376
 612:Core/Src/main.c ****   htim3.Init.Period = 600;
 1331              		.loc 1 612 26 is_stmt 0 view .LVU377
 1332 002a 8360     		str	r3, [r0, #8]
 613:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1333              		.loc 1 613 3 is_stmt 1 view .LVU378
 613:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1334              		.loc 1 613 21 is_stmt 0 view .LVU379
 1335 002c 4FF41672 		mov	r2, #600
 1336 0030 C260     		str	r2, [r0, #12]
 614:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1337              		.loc 1 614 3 is_stmt 1 view .LVU380
 614:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1338              		.loc 1 614 28 is_stmt 0 view .LVU381
 1339 0032 0361     		str	r3, [r0, #16]
 615:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1340              		.loc 1 615 3 is_stmt 1 view .LVU382
 615:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1341              		.loc 1 615 32 is_stmt 0 view .LVU383
 1342 0034 8361     		str	r3, [r0, #24]
 616:Core/Src/main.c ****   {
 1343              		.loc 1 616 3 is_stmt 1 view .LVU384
 616:Core/Src/main.c ****   {
 1344              		.loc 1 616 7 is_stmt 0 view .LVU385
 1345 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1346              	.LVL99:
 616:Core/Src/main.c ****   {
 1347              		.loc 1 616 6 view .LVU386
 1348 003a 28BB     		cbnz	r0, .L89
 620:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1349              		.loc 1 620 3 is_stmt 1 view .LVU387
 620:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1350              		.loc 1 620 34 is_stmt 0 view .LVU388
 1351 003c 4FF48053 		mov	r3, #4096
 1352 0040 0A93     		str	r3, [sp, #40]
 621:Core/Src/main.c ****   {
 1353              		.loc 1 621 3 is_stmt 1 view .LVU389
ARM GAS  /tmp/ccEx5Llz.s 			page 49


 621:Core/Src/main.c ****   {
 1354              		.loc 1 621 7 is_stmt 0 view .LVU390
 1355 0042 0AA9     		add	r1, sp, #40
 1356 0044 1548     		ldr	r0, .L94
 1357 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1358              	.LVL100:
 621:Core/Src/main.c ****   {
 1359              		.loc 1 621 6 view .LVU391
 1360 004a F8B9     		cbnz	r0, .L90
 625:Core/Src/main.c ****   {
 1361              		.loc 1 625 3 is_stmt 1 view .LVU392
 625:Core/Src/main.c ****   {
 1362              		.loc 1 625 7 is_stmt 0 view .LVU393
 1363 004c 1348     		ldr	r0, .L94
 1364 004e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1365              	.LVL101:
 625:Core/Src/main.c ****   {
 1366              		.loc 1 625 6 view .LVU394
 1367 0052 E8B9     		cbnz	r0, .L91
 629:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1368              		.loc 1 629 3 is_stmt 1 view .LVU395
 629:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1369              		.loc 1 629 37 is_stmt 0 view .LVU396
 1370 0054 0023     		movs	r3, #0
 1371 0056 0893     		str	r3, [sp, #32]
 630:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1372              		.loc 1 630 3 is_stmt 1 view .LVU397
 630:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1373              		.loc 1 630 33 is_stmt 0 view .LVU398
 1374 0058 0993     		str	r3, [sp, #36]
 631:Core/Src/main.c ****   {
 1375              		.loc 1 631 3 is_stmt 1 view .LVU399
 631:Core/Src/main.c ****   {
 1376              		.loc 1 631 7 is_stmt 0 view .LVU400
 1377 005a 08A9     		add	r1, sp, #32
 1378 005c 0F48     		ldr	r0, .L94
 1379 005e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1380              	.LVL102:
 631:Core/Src/main.c ****   {
 1381              		.loc 1 631 6 view .LVU401
 1382 0062 B8B9     		cbnz	r0, .L92
 635:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1383              		.loc 1 635 3 is_stmt 1 view .LVU402
 635:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1384              		.loc 1 635 20 is_stmt 0 view .LVU403
 1385 0064 6023     		movs	r3, #96
 1386 0066 0193     		str	r3, [sp, #4]
 636:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1387              		.loc 1 636 3 is_stmt 1 view .LVU404
 636:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1388              		.loc 1 636 19 is_stmt 0 view .LVU405
 1389 0068 0023     		movs	r3, #0
 1390 006a 0293     		str	r3, [sp, #8]
 637:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1391              		.loc 1 637 3 is_stmt 1 view .LVU406
 637:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1392              		.loc 1 637 24 is_stmt 0 view .LVU407
ARM GAS  /tmp/ccEx5Llz.s 			page 50


 1393 006c 0393     		str	r3, [sp, #12]
 638:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1394              		.loc 1 638 3 is_stmt 1 view .LVU408
 638:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1395              		.loc 1 638 24 is_stmt 0 view .LVU409
 1396 006e 0593     		str	r3, [sp, #20]
 639:Core/Src/main.c ****   {
 1397              		.loc 1 639 3 is_stmt 1 view .LVU410
 639:Core/Src/main.c ****   {
 1398              		.loc 1 639 7 is_stmt 0 view .LVU411
 1399 0070 0822     		movs	r2, #8
 1400 0072 01A9     		add	r1, sp, #4
 1401 0074 0948     		ldr	r0, .L94
 1402 0076 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1403              	.LVL103:
 639:Core/Src/main.c ****   {
 1404              		.loc 1 639 6 view .LVU412
 1405 007a 68B9     		cbnz	r0, .L93
 646:Core/Src/main.c **** }
 1406              		.loc 1 646 3 is_stmt 1 view .LVU413
 1407 007c 0748     		ldr	r0, .L94
 1408 007e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1409              	.LVL104:
 647:Core/Src/main.c **** 
 1410              		.loc 1 647 1 is_stmt 0 view .LVU414
 1411 0082 0FB0     		add	sp, sp, #60
 1412              		.cfi_remember_state
 1413              		.cfi_def_cfa_offset 4
 1414              		@ sp needed
 1415 0084 5DF804FB 		ldr	pc, [sp], #4
 1416              	.L89:
 1417              		.cfi_restore_state
 618:Core/Src/main.c ****   }
 1418              		.loc 1 618 5 is_stmt 1 view .LVU415
 1419 0088 FFF7FEFF 		bl	Error_Handler
 1420              	.LVL105:
 1421              	.L90:
 623:Core/Src/main.c ****   }
 1422              		.loc 1 623 5 view .LVU416
 1423 008c FFF7FEFF 		bl	Error_Handler
 1424              	.LVL106:
 1425              	.L91:
 627:Core/Src/main.c ****   }
 1426              		.loc 1 627 5 view .LVU417
 1427 0090 FFF7FEFF 		bl	Error_Handler
 1428              	.LVL107:
 1429              	.L92:
 633:Core/Src/main.c ****   }
 1430              		.loc 1 633 5 view .LVU418
 1431 0094 FFF7FEFF 		bl	Error_Handler
 1432              	.LVL108:
 1433              	.L93:
 641:Core/Src/main.c ****   }
 1434              		.loc 1 641 5 view .LVU419
 1435 0098 FFF7FEFF 		bl	Error_Handler
 1436              	.LVL109:
 1437              	.L95:
ARM GAS  /tmp/ccEx5Llz.s 			page 51


 1438              		.align	2
 1439              	.L94:
 1440 009c 00000000 		.word	htim3
 1441 00a0 00040040 		.word	1073742848
 1442              		.cfi_endproc
 1443              	.LFE83:
 1445              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1446              		.align	1
 1447              		.syntax unified
 1448              		.thumb
 1449              		.thumb_func
 1450              		.fpu softvfp
 1452              	MX_TIM1_Init:
 1453              	.LFB81:
 486:Core/Src/main.c **** 
 1454              		.loc 1 486 1 view -0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 72
 1457              		@ frame_needed = 0, uses_anonymous_args = 0
 1458 0000 10B5     		push	{r4, lr}
 1459              		.cfi_def_cfa_offset 8
 1460              		.cfi_offset 4, -8
 1461              		.cfi_offset 14, -4
 1462 0002 92B0     		sub	sp, sp, #72
 1463              		.cfi_def_cfa_offset 80
 492:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1464              		.loc 1 492 3 view .LVU421
 492:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1465              		.loc 1 492 27 is_stmt 0 view .LVU422
 1466 0004 0024     		movs	r4, #0
 1467 0006 1094     		str	r4, [sp, #64]
 1468 0008 1194     		str	r4, [sp, #68]
 493:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1469              		.loc 1 493 3 is_stmt 1 view .LVU423
 493:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1470              		.loc 1 493 22 is_stmt 0 view .LVU424
 1471 000a 0994     		str	r4, [sp, #36]
 1472 000c 0A94     		str	r4, [sp, #40]
 1473 000e 0B94     		str	r4, [sp, #44]
 1474 0010 0C94     		str	r4, [sp, #48]
 1475 0012 0D94     		str	r4, [sp, #52]
 1476 0014 0E94     		str	r4, [sp, #56]
 1477 0016 0F94     		str	r4, [sp, #60]
 494:Core/Src/main.c **** 
 1478              		.loc 1 494 3 is_stmt 1 view .LVU425
 494:Core/Src/main.c **** 
 1479              		.loc 1 494 34 is_stmt 0 view .LVU426
 1480 0018 2022     		movs	r2, #32
 1481 001a 2146     		mov	r1, r4
 1482 001c 01A8     		add	r0, sp, #4
 1483 001e FFF7FEFF 		bl	memset
 1484              	.LVL110:
 499:Core/Src/main.c ****   htim1.Init.Prescaler = 240;
 1485              		.loc 1 499 3 is_stmt 1 view .LVU427
 499:Core/Src/main.c ****   htim1.Init.Prescaler = 240;
 1486              		.loc 1 499 18 is_stmt 0 view .LVU428
 1487 0022 2148     		ldr	r0, .L106
ARM GAS  /tmp/ccEx5Llz.s 			page 52


 1488 0024 214B     		ldr	r3, .L106+4
 1489 0026 0360     		str	r3, [r0]
 500:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1490              		.loc 1 500 3 is_stmt 1 view .LVU429
 500:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1491              		.loc 1 500 24 is_stmt 0 view .LVU430
 1492 0028 F023     		movs	r3, #240
 1493 002a 4360     		str	r3, [r0, #4]
 501:Core/Src/main.c ****   htim1.Init.Period = 65535;
 1494              		.loc 1 501 3 is_stmt 1 view .LVU431
 501:Core/Src/main.c ****   htim1.Init.Period = 65535;
 1495              		.loc 1 501 26 is_stmt 0 view .LVU432
 1496 002c 8460     		str	r4, [r0, #8]
 502:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1497              		.loc 1 502 3 is_stmt 1 view .LVU433
 502:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1498              		.loc 1 502 21 is_stmt 0 view .LVU434
 1499 002e 4FF6FF73 		movw	r3, #65535
 1500 0032 C360     		str	r3, [r0, #12]
 503:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1501              		.loc 1 503 3 is_stmt 1 view .LVU435
 503:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1502              		.loc 1 503 28 is_stmt 0 view .LVU436
 1503 0034 0461     		str	r4, [r0, #16]
 504:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1504              		.loc 1 504 3 is_stmt 1 view .LVU437
 504:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1505              		.loc 1 504 32 is_stmt 0 view .LVU438
 1506 0036 4461     		str	r4, [r0, #20]
 505:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 1507              		.loc 1 505 3 is_stmt 1 view .LVU439
 505:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 1508              		.loc 1 505 32 is_stmt 0 view .LVU440
 1509 0038 8461     		str	r4, [r0, #24]
 506:Core/Src/main.c ****   {
 1510              		.loc 1 506 3 is_stmt 1 view .LVU441
 506:Core/Src/main.c ****   {
 1511              		.loc 1 506 7 is_stmt 0 view .LVU442
 1512 003a FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1513              	.LVL111:
 506:Core/Src/main.c ****   {
 1514              		.loc 1 506 6 view .LVU443
 1515 003e 0028     		cmp	r0, #0
 1516 0040 29D1     		bne	.L102
 510:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1517              		.loc 1 510 3 is_stmt 1 view .LVU444
 510:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1518              		.loc 1 510 37 is_stmt 0 view .LVU445
 1519 0042 0023     		movs	r3, #0
 1520 0044 1093     		str	r3, [sp, #64]
 511:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1521              		.loc 1 511 3 is_stmt 1 view .LVU446
 511:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1522              		.loc 1 511 33 is_stmt 0 view .LVU447
 1523 0046 1193     		str	r3, [sp, #68]
 512:Core/Src/main.c ****   {
 1524              		.loc 1 512 3 is_stmt 1 view .LVU448
ARM GAS  /tmp/ccEx5Llz.s 			page 53


 512:Core/Src/main.c ****   {
 1525              		.loc 1 512 7 is_stmt 0 view .LVU449
 1526 0048 10A9     		add	r1, sp, #64
 1527 004a 1748     		ldr	r0, .L106
 1528 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1529              	.LVL112:
 512:Core/Src/main.c ****   {
 1530              		.loc 1 512 6 view .LVU450
 1531 0050 18BB     		cbnz	r0, .L103
 516:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1532              		.loc 1 516 3 is_stmt 1 view .LVU451
 516:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1533              		.loc 1 516 20 is_stmt 0 view .LVU452
 1534 0052 6023     		movs	r3, #96
 1535 0054 0993     		str	r3, [sp, #36]
 517:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1536              		.loc 1 517 3 is_stmt 1 view .LVU453
 517:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1537              		.loc 1 517 19 is_stmt 0 view .LVU454
 1538 0056 0022     		movs	r2, #0
 1539 0058 0A92     		str	r2, [sp, #40]
 518:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1540              		.loc 1 518 3 is_stmt 1 view .LVU455
 518:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1541              		.loc 1 518 24 is_stmt 0 view .LVU456
 1542 005a 0B92     		str	r2, [sp, #44]
 519:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1543              		.loc 1 519 3 is_stmt 1 view .LVU457
 519:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1544              		.loc 1 519 25 is_stmt 0 view .LVU458
 1545 005c 0C92     		str	r2, [sp, #48]
 520:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1546              		.loc 1 520 3 is_stmt 1 view .LVU459
 520:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1547              		.loc 1 520 24 is_stmt 0 view .LVU460
 1548 005e 0D92     		str	r2, [sp, #52]
 521:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1549              		.loc 1 521 3 is_stmt 1 view .LVU461
 521:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1550              		.loc 1 521 25 is_stmt 0 view .LVU462
 1551 0060 0E92     		str	r2, [sp, #56]
 522:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1552              		.loc 1 522 3 is_stmt 1 view .LVU463
 522:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1553              		.loc 1 522 26 is_stmt 0 view .LVU464
 1554 0062 0F92     		str	r2, [sp, #60]
 523:Core/Src/main.c ****   {
 1555              		.loc 1 523 3 is_stmt 1 view .LVU465
 523:Core/Src/main.c ****   {
 1556              		.loc 1 523 7 is_stmt 0 view .LVU466
 1557 0064 09A9     		add	r1, sp, #36
 1558 0066 1048     		ldr	r0, .L106
 1559 0068 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1560              	.LVL113:
 523:Core/Src/main.c ****   {
 1561              		.loc 1 523 6 view .LVU467
 1562 006c B8B9     		cbnz	r0, .L104
ARM GAS  /tmp/ccEx5Llz.s 			page 54


 527:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1563              		.loc 1 527 3 is_stmt 1 view .LVU468
 527:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1564              		.loc 1 527 40 is_stmt 0 view .LVU469
 1565 006e 0023     		movs	r3, #0
 1566 0070 0193     		str	r3, [sp, #4]
 528:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1567              		.loc 1 528 3 is_stmt 1 view .LVU470
 528:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1568              		.loc 1 528 41 is_stmt 0 view .LVU471
 1569 0072 0293     		str	r3, [sp, #8]
 529:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1570              		.loc 1 529 3 is_stmt 1 view .LVU472
 529:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1571              		.loc 1 529 34 is_stmt 0 view .LVU473
 1572 0074 0393     		str	r3, [sp, #12]
 530:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1573              		.loc 1 530 3 is_stmt 1 view .LVU474
 530:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1574              		.loc 1 530 33 is_stmt 0 view .LVU475
 1575 0076 0493     		str	r3, [sp, #16]
 531:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1576              		.loc 1 531 3 is_stmt 1 view .LVU476
 531:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1577              		.loc 1 531 35 is_stmt 0 view .LVU477
 1578 0078 0593     		str	r3, [sp, #20]
 532:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1579              		.loc 1 532 3 is_stmt 1 view .LVU478
 532:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1580              		.loc 1 532 38 is_stmt 0 view .LVU479
 1581 007a 4FF40052 		mov	r2, #8192
 1582 007e 0692     		str	r2, [sp, #24]
 533:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1583              		.loc 1 533 3 is_stmt 1 view .LVU480
 533:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1584              		.loc 1 533 40 is_stmt 0 view .LVU481
 1585 0080 0893     		str	r3, [sp, #32]
 534:Core/Src/main.c ****   {
 1586              		.loc 1 534 3 is_stmt 1 view .LVU482
 534:Core/Src/main.c ****   {
 1587              		.loc 1 534 7 is_stmt 0 view .LVU483
 1588 0082 01A9     		add	r1, sp, #4
 1589 0084 0848     		ldr	r0, .L106
 1590 0086 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1591              	.LVL114:
 534:Core/Src/main.c ****   {
 1592              		.loc 1 534 6 view .LVU484
 1593 008a 50B9     		cbnz	r0, .L105
 541:Core/Src/main.c **** }
 1594              		.loc 1 541 3 is_stmt 1 view .LVU485
 1595 008c 0648     		ldr	r0, .L106
 1596 008e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1597              	.LVL115:
 542:Core/Src/main.c **** 
 1598              		.loc 1 542 1 is_stmt 0 view .LVU486
 1599 0092 12B0     		add	sp, sp, #72
 1600              		.cfi_remember_state
ARM GAS  /tmp/ccEx5Llz.s 			page 55


 1601              		.cfi_def_cfa_offset 8
 1602              		@ sp needed
 1603 0094 10BD     		pop	{r4, pc}
 1604              	.L102:
 1605              		.cfi_restore_state
 508:Core/Src/main.c ****   }
 1606              		.loc 1 508 5 is_stmt 1 view .LVU487
 1607 0096 FFF7FEFF 		bl	Error_Handler
 1608              	.LVL116:
 1609              	.L103:
 514:Core/Src/main.c ****   }
 1610              		.loc 1 514 5 view .LVU488
 1611 009a FFF7FEFF 		bl	Error_Handler
 1612              	.LVL117:
 1613              	.L104:
 525:Core/Src/main.c ****   }
 1614              		.loc 1 525 5 view .LVU489
 1615 009e FFF7FEFF 		bl	Error_Handler
 1616              	.LVL118:
 1617              	.L105:
 536:Core/Src/main.c ****   }
 1618              		.loc 1 536 5 view .LVU490
 1619 00a2 FFF7FEFF 		bl	Error_Handler
 1620              	.LVL119:
 1621              	.L107:
 1622 00a6 00BF     		.align	2
 1623              	.L106:
 1624 00a8 00000000 		.word	htim1
 1625 00ac 002C0140 		.word	1073818624
 1626              		.cfi_endproc
 1627              	.LFE81:
 1629              		.section	.text.MX_TIM5_Init,"ax",%progbits
 1630              		.align	1
 1631              		.syntax unified
 1632              		.thumb
 1633              		.thumb_func
 1634              		.fpu softvfp
 1636              	MX_TIM5_Init:
 1637              	.LFB84:
 655:Core/Src/main.c **** 
 1638              		.loc 1 655 1 view -0
 1639              		.cfi_startproc
 1640              		@ args = 0, pretend = 0, frame = 40
 1641              		@ frame_needed = 0, uses_anonymous_args = 0
 1642 0000 00B5     		push	{lr}
 1643              		.cfi_def_cfa_offset 4
 1644              		.cfi_offset 14, -4
 1645 0002 8BB0     		sub	sp, sp, #44
 1646              		.cfi_def_cfa_offset 48
 661:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1647              		.loc 1 661 3 view .LVU492
 661:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1648              		.loc 1 661 27 is_stmt 0 view .LVU493
 1649 0004 0023     		movs	r3, #0
 1650 0006 0893     		str	r3, [sp, #32]
 1651 0008 0993     		str	r3, [sp, #36]
 662:Core/Src/main.c **** 
ARM GAS  /tmp/ccEx5Llz.s 			page 56


 1652              		.loc 1 662 3 is_stmt 1 view .LVU494
 662:Core/Src/main.c **** 
 1653              		.loc 1 662 22 is_stmt 0 view .LVU495
 1654 000a 0193     		str	r3, [sp, #4]
 1655 000c 0293     		str	r3, [sp, #8]
 1656 000e 0393     		str	r3, [sp, #12]
 1657 0010 0493     		str	r3, [sp, #16]
 1658 0012 0593     		str	r3, [sp, #20]
 1659 0014 0693     		str	r3, [sp, #24]
 1660 0016 0793     		str	r3, [sp, #28]
 667:Core/Src/main.c ****   htim5.Init.Prescaler = 100;
 1661              		.loc 1 667 3 is_stmt 1 view .LVU496
 667:Core/Src/main.c ****   htim5.Init.Prescaler = 100;
 1662              		.loc 1 667 18 is_stmt 0 view .LVU497
 1663 0018 1848     		ldr	r0, .L118
 1664 001a 194A     		ldr	r2, .L118+4
 1665 001c 0260     		str	r2, [r0]
 668:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 1666              		.loc 1 668 3 is_stmt 1 view .LVU498
 668:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 1667              		.loc 1 668 24 is_stmt 0 view .LVU499
 1668 001e 6422     		movs	r2, #100
 1669 0020 4260     		str	r2, [r0, #4]
 669:Core/Src/main.c ****   htim5.Init.Period = 10;
 1670              		.loc 1 669 3 is_stmt 1 view .LVU500
 669:Core/Src/main.c ****   htim5.Init.Period = 10;
 1671              		.loc 1 669 26 is_stmt 0 view .LVU501
 1672 0022 8360     		str	r3, [r0, #8]
 670:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1673              		.loc 1 670 3 is_stmt 1 view .LVU502
 670:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1674              		.loc 1 670 21 is_stmt 0 view .LVU503
 1675 0024 0A22     		movs	r2, #10
 1676 0026 C260     		str	r2, [r0, #12]
 671:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1677              		.loc 1 671 3 is_stmt 1 view .LVU504
 671:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1678              		.loc 1 671 28 is_stmt 0 view .LVU505
 1679 0028 0361     		str	r3, [r0, #16]
 672:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim5) != HAL_OK)
 1680              		.loc 1 672 3 is_stmt 1 view .LVU506
 672:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim5) != HAL_OK)
 1681              		.loc 1 672 32 is_stmt 0 view .LVU507
 1682 002a 8361     		str	r3, [r0, #24]
 673:Core/Src/main.c ****   {
 1683              		.loc 1 673 3 is_stmt 1 view .LVU508
 673:Core/Src/main.c ****   {
 1684              		.loc 1 673 7 is_stmt 0 view .LVU509
 1685 002c FFF7FEFF 		bl	HAL_TIM_OC_Init
 1686              	.LVL120:
 673:Core/Src/main.c ****   {
 1687              		.loc 1 673 6 view .LVU510
 1688 0030 D8B9     		cbnz	r0, .L114
 677:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1689              		.loc 1 677 3 is_stmt 1 view .LVU511
 677:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1690              		.loc 1 677 37 is_stmt 0 view .LVU512
ARM GAS  /tmp/ccEx5Llz.s 			page 57


 1691 0032 0023     		movs	r3, #0
 1692 0034 0893     		str	r3, [sp, #32]
 678:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 1693              		.loc 1 678 3 is_stmt 1 view .LVU513
 678:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 1694              		.loc 1 678 33 is_stmt 0 view .LVU514
 1695 0036 0993     		str	r3, [sp, #36]
 679:Core/Src/main.c ****   {
 1696              		.loc 1 679 3 is_stmt 1 view .LVU515
 679:Core/Src/main.c ****   {
 1697              		.loc 1 679 7 is_stmt 0 view .LVU516
 1698 0038 08A9     		add	r1, sp, #32
 1699 003a 1048     		ldr	r0, .L118
 1700 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1701              	.LVL121:
 679:Core/Src/main.c ****   {
 1702              		.loc 1 679 6 view .LVU517
 1703 0040 A8B9     		cbnz	r0, .L115
 683:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1704              		.loc 1 683 3 is_stmt 1 view .LVU518
 683:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1705              		.loc 1 683 20 is_stmt 0 view .LVU519
 1706 0042 0022     		movs	r2, #0
 1707 0044 0192     		str	r2, [sp, #4]
 684:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1708              		.loc 1 684 3 is_stmt 1 view .LVU520
 684:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1709              		.loc 1 684 19 is_stmt 0 view .LVU521
 1710 0046 0292     		str	r2, [sp, #8]
 685:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1711              		.loc 1 685 3 is_stmt 1 view .LVU522
 685:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1712              		.loc 1 685 24 is_stmt 0 view .LVU523
 1713 0048 0392     		str	r2, [sp, #12]
 686:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1714              		.loc 1 686 3 is_stmt 1 view .LVU524
 686:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1715              		.loc 1 686 24 is_stmt 0 view .LVU525
 1716 004a 0592     		str	r2, [sp, #20]
 687:Core/Src/main.c ****   {
 1717              		.loc 1 687 3 is_stmt 1 view .LVU526
 687:Core/Src/main.c ****   {
 1718              		.loc 1 687 7 is_stmt 0 view .LVU527
 1719 004c 01A9     		add	r1, sp, #4
 1720 004e 0B48     		ldr	r0, .L118
 1721 0050 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 1722              	.LVL122:
 687:Core/Src/main.c ****   {
 1723              		.loc 1 687 6 view .LVU528
 1724 0054 68B9     		cbnz	r0, .L116
 691:Core/Src/main.c ****   {
 1725              		.loc 1 691 3 is_stmt 1 view .LVU529
 691:Core/Src/main.c ****   {
 1726              		.loc 1 691 7 is_stmt 0 view .LVU530
 1727 0056 0422     		movs	r2, #4
 1728 0058 0DEB0201 		add	r1, sp, r2
 1729 005c 0748     		ldr	r0, .L118
ARM GAS  /tmp/ccEx5Llz.s 			page 58


 1730 005e FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 1731              	.LVL123:
 691:Core/Src/main.c ****   {
 1732              		.loc 1 691 6 view .LVU531
 1733 0062 40B9     		cbnz	r0, .L117
 698:Core/Src/main.c **** 
 1734              		.loc 1 698 1 view .LVU532
 1735 0064 0BB0     		add	sp, sp, #44
 1736              		.cfi_remember_state
 1737              		.cfi_def_cfa_offset 4
 1738              		@ sp needed
 1739 0066 5DF804FB 		ldr	pc, [sp], #4
 1740              	.L114:
 1741              		.cfi_restore_state
 675:Core/Src/main.c ****   }
 1742              		.loc 1 675 5 is_stmt 1 view .LVU533
 1743 006a FFF7FEFF 		bl	Error_Handler
 1744              	.LVL124:
 1745              	.L115:
 681:Core/Src/main.c ****   }
 1746              		.loc 1 681 5 view .LVU534
 1747 006e FFF7FEFF 		bl	Error_Handler
 1748              	.LVL125:
 1749              	.L116:
 689:Core/Src/main.c ****   }
 1750              		.loc 1 689 5 view .LVU535
 1751 0072 FFF7FEFF 		bl	Error_Handler
 1752              	.LVL126:
 1753              	.L117:
 693:Core/Src/main.c ****   }
 1754              		.loc 1 693 5 view .LVU536
 1755 0076 FFF7FEFF 		bl	Error_Handler
 1756              	.LVL127:
 1757              	.L119:
 1758 007a 00BF     		.align	2
 1759              	.L118:
 1760 007c 00000000 		.word	htim5
 1761 0080 000C0040 		.word	1073744896
 1762              		.cfi_endproc
 1763              	.LFE84:
 1765              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1766              		.align	1
 1767              		.syntax unified
 1768              		.thumb
 1769              		.thumb_func
 1770              		.fpu softvfp
 1772              	MX_TIM2_Init:
 1773              	.LFB82:
 550:Core/Src/main.c **** 
 1774              		.loc 1 550 1 view -0
 1775              		.cfi_startproc
 1776              		@ args = 0, pretend = 0, frame = 40
 1777              		@ frame_needed = 0, uses_anonymous_args = 0
 1778 0000 00B5     		push	{lr}
 1779              		.cfi_def_cfa_offset 4
 1780              		.cfi_offset 14, -4
 1781 0002 8BB0     		sub	sp, sp, #44
ARM GAS  /tmp/ccEx5Llz.s 			page 59


 1782              		.cfi_def_cfa_offset 48
 556:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1783              		.loc 1 556 3 view .LVU538
 556:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1784              		.loc 1 556 27 is_stmt 0 view .LVU539
 1785 0004 0023     		movs	r3, #0
 1786 0006 0893     		str	r3, [sp, #32]
 1787 0008 0993     		str	r3, [sp, #36]
 557:Core/Src/main.c **** 
 1788              		.loc 1 557 3 is_stmt 1 view .LVU540
 557:Core/Src/main.c **** 
 1789              		.loc 1 557 22 is_stmt 0 view .LVU541
 1790 000a 0193     		str	r3, [sp, #4]
 1791 000c 0293     		str	r3, [sp, #8]
 1792 000e 0393     		str	r3, [sp, #12]
 1793 0010 0493     		str	r3, [sp, #16]
 1794 0012 0593     		str	r3, [sp, #20]
 1795 0014 0693     		str	r3, [sp, #24]
 1796 0016 0793     		str	r3, [sp, #28]
 562:Core/Src/main.c ****   htim2.Init.Prescaler = 10;
 1797              		.loc 1 562 3 is_stmt 1 view .LVU542
 562:Core/Src/main.c ****   htim2.Init.Prescaler = 10;
 1798              		.loc 1 562 18 is_stmt 0 view .LVU543
 1799 0018 1448     		ldr	r0, .L128
 1800 001a 4FF08042 		mov	r2, #1073741824
 1801 001e 0260     		str	r2, [r0]
 563:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1802              		.loc 1 563 3 is_stmt 1 view .LVU544
 563:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1803              		.loc 1 563 24 is_stmt 0 view .LVU545
 1804 0020 0A22     		movs	r2, #10
 1805 0022 4260     		str	r2, [r0, #4]
 564:Core/Src/main.c ****   htim2.Init.Period = 600;
 1806              		.loc 1 564 3 is_stmt 1 view .LVU546
 564:Core/Src/main.c ****   htim2.Init.Period = 600;
 1807              		.loc 1 564 26 is_stmt 0 view .LVU547
 1808 0024 8360     		str	r3, [r0, #8]
 565:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1809              		.loc 1 565 3 is_stmt 1 view .LVU548
 565:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1810              		.loc 1 565 21 is_stmt 0 view .LVU549
 1811 0026 4FF41672 		mov	r2, #600
 1812 002a C260     		str	r2, [r0, #12]
 566:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1813              		.loc 1 566 3 is_stmt 1 view .LVU550
 566:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1814              		.loc 1 566 28 is_stmt 0 view .LVU551
 1815 002c 0361     		str	r3, [r0, #16]
 567:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 1816              		.loc 1 567 3 is_stmt 1 view .LVU552
 567:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 1817              		.loc 1 567 32 is_stmt 0 view .LVU553
 1818 002e 8361     		str	r3, [r0, #24]
 568:Core/Src/main.c ****   {
 1819              		.loc 1 568 3 is_stmt 1 view .LVU554
 568:Core/Src/main.c ****   {
 1820              		.loc 1 568 7 is_stmt 0 view .LVU555
ARM GAS  /tmp/ccEx5Llz.s 			page 60


 1821 0030 FFF7FEFF 		bl	HAL_TIM_OC_Init
 1822              	.LVL128:
 568:Core/Src/main.c ****   {
 1823              		.loc 1 568 6 view .LVU556
 1824 0034 A0B9     		cbnz	r0, .L125
 572:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1825              		.loc 1 572 3 is_stmt 1 view .LVU557
 572:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1826              		.loc 1 572 37 is_stmt 0 view .LVU558
 1827 0036 0023     		movs	r3, #0
 1828 0038 0893     		str	r3, [sp, #32]
 573:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1829              		.loc 1 573 3 is_stmt 1 view .LVU559
 573:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1830              		.loc 1 573 33 is_stmt 0 view .LVU560
 1831 003a 0993     		str	r3, [sp, #36]
 574:Core/Src/main.c ****   {
 1832              		.loc 1 574 3 is_stmt 1 view .LVU561
 574:Core/Src/main.c ****   {
 1833              		.loc 1 574 7 is_stmt 0 view .LVU562
 1834 003c 08A9     		add	r1, sp, #32
 1835 003e 0B48     		ldr	r0, .L128
 1836 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1837              	.LVL129:
 574:Core/Src/main.c ****   {
 1838              		.loc 1 574 6 view .LVU563
 1839 0044 70B9     		cbnz	r0, .L126
 578:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1840              		.loc 1 578 3 is_stmt 1 view .LVU564
 578:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1841              		.loc 1 578 20 is_stmt 0 view .LVU565
 1842 0046 0022     		movs	r2, #0
 1843 0048 0192     		str	r2, [sp, #4]
 579:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1844              		.loc 1 579 3 is_stmt 1 view .LVU566
 579:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1845              		.loc 1 579 19 is_stmt 0 view .LVU567
 1846 004a 0292     		str	r2, [sp, #8]
 580:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1847              		.loc 1 580 3 is_stmt 1 view .LVU568
 580:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1848              		.loc 1 580 24 is_stmt 0 view .LVU569
 1849 004c 0392     		str	r2, [sp, #12]
 581:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1850              		.loc 1 581 3 is_stmt 1 view .LVU570
 581:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1851              		.loc 1 581 24 is_stmt 0 view .LVU571
 1852 004e 0592     		str	r2, [sp, #20]
 582:Core/Src/main.c ****   {
 1853              		.loc 1 582 3 is_stmt 1 view .LVU572
 582:Core/Src/main.c ****   {
 1854              		.loc 1 582 7 is_stmt 0 view .LVU573
 1855 0050 01A9     		add	r1, sp, #4
 1856 0052 0648     		ldr	r0, .L128
 1857 0054 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 1858              	.LVL130:
 582:Core/Src/main.c ****   {
ARM GAS  /tmp/ccEx5Llz.s 			page 61


 1859              		.loc 1 582 6 view .LVU574
 1860 0058 30B9     		cbnz	r0, .L127
 589:Core/Src/main.c **** 
 1861              		.loc 1 589 1 view .LVU575
 1862 005a 0BB0     		add	sp, sp, #44
 1863              		.cfi_remember_state
 1864              		.cfi_def_cfa_offset 4
 1865              		@ sp needed
 1866 005c 5DF804FB 		ldr	pc, [sp], #4
 1867              	.L125:
 1868              		.cfi_restore_state
 570:Core/Src/main.c ****   }
 1869              		.loc 1 570 5 is_stmt 1 view .LVU576
 1870 0060 FFF7FEFF 		bl	Error_Handler
 1871              	.LVL131:
 1872              	.L126:
 576:Core/Src/main.c ****   }
 1873              		.loc 1 576 5 view .LVU577
 1874 0064 FFF7FEFF 		bl	Error_Handler
 1875              	.LVL132:
 1876              	.L127:
 584:Core/Src/main.c ****   }
 1877              		.loc 1 584 5 view .LVU578
 1878 0068 FFF7FEFF 		bl	Error_Handler
 1879              	.LVL133:
 1880              	.L129:
 1881              		.align	2
 1882              	.L128:
 1883 006c 00000000 		.word	htim2
 1884              		.cfi_endproc
 1885              	.LFE82:
 1887              		.section	.text.MX_IWDG_Init,"ax",%progbits
 1888              		.align	1
 1889              		.syntax unified
 1890              		.thumb
 1891              		.thumb_func
 1892              		.fpu softvfp
 1894              	MX_IWDG_Init:
 1895              	.LFB80:
 459:Core/Src/main.c **** 
 1896              		.loc 1 459 1 view -0
 1897              		.cfi_startproc
 1898              		@ args = 0, pretend = 0, frame = 0
 1899              		@ frame_needed = 0, uses_anonymous_args = 0
 1900 0000 08B5     		push	{r3, lr}
 1901              		.cfi_def_cfa_offset 8
 1902              		.cfi_offset 3, -8
 1903              		.cfi_offset 14, -4
 468:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_32;
 1904              		.loc 1 468 3 view .LVU580
 468:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_32;
 1905              		.loc 1 468 18 is_stmt 0 view .LVU581
 1906 0002 0748     		ldr	r0, .L134
 1907 0004 074B     		ldr	r3, .L134+4
 1908 0006 0360     		str	r3, [r0]
 469:Core/Src/main.c ****   hiwdg.Init.Reload = 4095; // 439 then 1000
 1909              		.loc 1 469 3 is_stmt 1 view .LVU582
ARM GAS  /tmp/ccEx5Llz.s 			page 62


 469:Core/Src/main.c ****   hiwdg.Init.Reload = 4095; // 439 then 1000
 1910              		.loc 1 469 24 is_stmt 0 view .LVU583
 1911 0008 0323     		movs	r3, #3
 1912 000a 4360     		str	r3, [r0, #4]
 470:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 1913              		.loc 1 470 3 is_stmt 1 view .LVU584
 470:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 1914              		.loc 1 470 21 is_stmt 0 view .LVU585
 1915 000c 40F6FF73 		movw	r3, #4095
 1916 0010 8360     		str	r3, [r0, #8]
 471:Core/Src/main.c ****   {
 1917              		.loc 1 471 3 is_stmt 1 view .LVU586
 471:Core/Src/main.c ****   {
 1918              		.loc 1 471 7 is_stmt 0 view .LVU587
 1919 0012 FFF7FEFF 		bl	HAL_IWDG_Init
 1920              	.LVL134:
 471:Core/Src/main.c ****   {
 1921              		.loc 1 471 6 view .LVU588
 1922 0016 00B9     		cbnz	r0, .L133
 478:Core/Src/main.c **** 
 1923              		.loc 1 478 1 view .LVU589
 1924 0018 08BD     		pop	{r3, pc}
 1925              	.L133:
 473:Core/Src/main.c ****   }
 1926              		.loc 1 473 5 is_stmt 1 view .LVU590
 1927 001a FFF7FEFF 		bl	Error_Handler
 1928              	.LVL135:
 1929              	.L135:
 1930 001e 00BF     		.align	2
 1931              	.L134:
 1932 0020 00000000 		.word	hiwdg
 1933 0024 00300040 		.word	1073754112
 1934              		.cfi_endproc
 1935              	.LFE80:
 1937              		.section	.text.SystemClock_Config,"ax",%progbits
 1938              		.align	1
 1939              		.global	SystemClock_Config
 1940              		.syntax unified
 1941              		.thumb
 1942              		.thumb_func
 1943              		.fpu softvfp
 1945              	SystemClock_Config:
 1946              	.LFB75:
 255:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1947              		.loc 1 255 1 view -0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 112
 1950              		@ frame_needed = 0, uses_anonymous_args = 0
 1951 0000 10B5     		push	{r4, lr}
 1952              		.cfi_def_cfa_offset 8
 1953              		.cfi_offset 4, -8
 1954              		.cfi_offset 14, -4
 1955 0002 9CB0     		sub	sp, sp, #112
 1956              		.cfi_def_cfa_offset 120
 256:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1957              		.loc 1 256 3 view .LVU592
 256:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/ccEx5Llz.s 			page 63


 1958              		.loc 1 256 22 is_stmt 0 view .LVU593
 1959 0004 2822     		movs	r2, #40
 1960 0006 0021     		movs	r1, #0
 1961 0008 12A8     		add	r0, sp, #72
 1962 000a FFF7FEFF 		bl	memset
 1963              	.LVL136:
 257:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1964              		.loc 1 257 3 is_stmt 1 view .LVU594
 257:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1965              		.loc 1 257 22 is_stmt 0 view .LVU595
 1966 000e 0024     		movs	r4, #0
 1967 0010 0994     		str	r4, [sp, #36]
 1968 0012 0A94     		str	r4, [sp, #40]
 1969 0014 0B94     		str	r4, [sp, #44]
 1970 0016 0C94     		str	r4, [sp, #48]
 1971 0018 0D94     		str	r4, [sp, #52]
 258:Core/Src/main.c **** 
 1972              		.loc 1 258 3 is_stmt 1 view .LVU596
 258:Core/Src/main.c **** 
 1973              		.loc 1 258 28 is_stmt 0 view .LVU597
 1974 001a 2022     		movs	r2, #32
 1975 001c 2146     		mov	r1, r4
 1976 001e 01A8     		add	r0, sp, #4
 1977 0020 FFF7FEFF 		bl	memset
 1978              	.LVL137:
 263:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1979              		.loc 1 263 3 is_stmt 1 view .LVU598
 263:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1980              		.loc 1 263 36 is_stmt 0 view .LVU599
 1981 0024 0923     		movs	r3, #9
 1982 0026 0E93     		str	r3, [sp, #56]
 264:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1983              		.loc 1 264 3 is_stmt 1 view .LVU600
 264:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1984              		.loc 1 264 30 is_stmt 0 view .LVU601
 1985 0028 4FF48033 		mov	r3, #65536
 1986 002c 1093     		str	r3, [sp, #64]
 265:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1987              		.loc 1 265 3 is_stmt 1 view .LVU602
 265:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1988              		.loc 1 265 36 is_stmt 0 view .LVU603
 1989 002e 1194     		str	r4, [sp, #68]
 266:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1990              		.loc 1 266 3 is_stmt 1 view .LVU604
 266:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1991              		.loc 1 266 30 is_stmt 0 view .LVU605
 1992 0030 0122     		movs	r2, #1
 1993 0032 1392     		str	r2, [sp, #76]
 267:Core/Src/main.c ****   RCC_OscInitStruct.Prediv1Source = RCC_PREDIV1_SOURCE_HSE;
 1994              		.loc 1 267 3 is_stmt 1 view .LVU606
 267:Core/Src/main.c ****   RCC_OscInitStruct.Prediv1Source = RCC_PREDIV1_SOURCE_HSE;
 1995              		.loc 1 267 30 is_stmt 0 view .LVU607
 1996 0034 1592     		str	r2, [sp, #84]
 268:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1997              		.loc 1 268 3 is_stmt 1 view .LVU608
 268:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1998              		.loc 1 268 35 is_stmt 0 view .LVU609
ARM GAS  /tmp/ccEx5Llz.s 			page 64


 1999 0036 0F94     		str	r4, [sp, #60]
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2000              		.loc 1 269 3 is_stmt 1 view .LVU610
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2001              		.loc 1 269 34 is_stmt 0 view .LVU611
 2002 0038 0222     		movs	r2, #2
 2003 003a 1692     		str	r2, [sp, #88]
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 2004              		.loc 1 270 3 is_stmt 1 view .LVU612
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 2005              		.loc 1 270 35 is_stmt 0 view .LVU613
 2006 003c 1793     		str	r3, [sp, #92]
 271:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2State = RCC_PLL_NONE;
 2007              		.loc 1 271 3 is_stmt 1 view .LVU614
 271:Core/Src/main.c ****   RCC_OscInitStruct.PLL2.PLL2State = RCC_PLL_NONE;
 2008              		.loc 1 271 32 is_stmt 0 view .LVU615
 2009 003e 4FF4E013 		mov	r3, #1835008
 2010 0042 1893     		str	r3, [sp, #96]
 272:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2011              		.loc 1 272 3 is_stmt 1 view .LVU616
 273:Core/Src/main.c ****   {
 2012              		.loc 1 273 3 view .LVU617
 273:Core/Src/main.c ****   {
 2013              		.loc 1 273 7 is_stmt 0 view .LVU618
 2014 0044 0EA8     		add	r0, sp, #56
 2015 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 2016              	.LVL138:
 273:Core/Src/main.c ****   {
 2017              		.loc 1 273 6 view .LVU619
 2018 004a D8B9     		cbnz	r0, .L141
 279:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 2019              		.loc 1 279 3 is_stmt 1 view .LVU620
 279:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 2020              		.loc 1 279 31 is_stmt 0 view .LVU621
 2021 004c 0F23     		movs	r3, #15
 2022 004e 0993     		str	r3, [sp, #36]
 280:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2023              		.loc 1 280 3 is_stmt 1 view .LVU622
 280:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2024              		.loc 1 280 34 is_stmt 0 view .LVU623
 2025 0050 0221     		movs	r1, #2
 2026 0052 0A91     		str	r1, [sp, #40]
 281:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 2027              		.loc 1 281 3 is_stmt 1 view .LVU624
 281:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 2028              		.loc 1 281 35 is_stmt 0 view .LVU625
 2029 0054 0023     		movs	r3, #0
 2030 0056 0B93     		str	r3, [sp, #44]
 282:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2031              		.loc 1 282 3 is_stmt 1 view .LVU626
 282:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2032              		.loc 1 282 36 is_stmt 0 view .LVU627
 2033 0058 4FF48062 		mov	r2, #1024
 2034 005c 0C92     		str	r2, [sp, #48]
 283:Core/Src/main.c **** 
 2035              		.loc 1 283 3 is_stmt 1 view .LVU628
 283:Core/Src/main.c **** 
ARM GAS  /tmp/ccEx5Llz.s 			page 65


 2036              		.loc 1 283 36 is_stmt 0 view .LVU629
 2037 005e 0D93     		str	r3, [sp, #52]
 285:Core/Src/main.c ****   {
 2038              		.loc 1 285 3 is_stmt 1 view .LVU630
 285:Core/Src/main.c ****   {
 2039              		.loc 1 285 7 is_stmt 0 view .LVU631
 2040 0060 09A8     		add	r0, sp, #36
 2041 0062 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2042              	.LVL139:
 285:Core/Src/main.c ****   {
 2043              		.loc 1 285 6 view .LVU632
 2044 0066 78B9     		cbnz	r0, .L142
 289:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 2045              		.loc 1 289 3 is_stmt 1 view .LVU633
 289:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 2046              		.loc 1 289 38 is_stmt 0 view .LVU634
 2047 0068 0223     		movs	r3, #2
 2048 006a 0193     		str	r3, [sp, #4]
 290:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 2049              		.loc 1 290 3 is_stmt 1 view .LVU635
 290:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 2050              		.loc 1 290 35 is_stmt 0 view .LVU636
 2051 006c 4FF40043 		mov	r3, #32768
 2052 0070 0393     		str	r3, [sp, #12]
 291:Core/Src/main.c ****   {
 2053              		.loc 1 291 3 is_stmt 1 view .LVU637
 291:Core/Src/main.c ****   {
 2054              		.loc 1 291 7 is_stmt 0 view .LVU638
 2055 0072 01A8     		add	r0, sp, #4
 2056 0074 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 2057              	.LVL140:
 291:Core/Src/main.c ****   {
 2058              		.loc 1 291 6 view .LVU639
 2059 0078 40B9     		cbnz	r0, .L143
 297:Core/Src/main.c **** }
 2060              		.loc 1 297 3 is_stmt 1 view .LVU640
 2061 007a 054B     		ldr	r3, .L144
 2062 007c 0122     		movs	r2, #1
 2063 007e 1A60     		str	r2, [r3]
 298:Core/Src/main.c **** 
 2064              		.loc 1 298 1 is_stmt 0 view .LVU641
 2065 0080 1CB0     		add	sp, sp, #112
 2066              		.cfi_remember_state
 2067              		.cfi_def_cfa_offset 8
 2068              		@ sp needed
 2069 0082 10BD     		pop	{r4, pc}
 2070              	.L141:
 2071              		.cfi_restore_state
 275:Core/Src/main.c ****   }
 2072              		.loc 1 275 5 is_stmt 1 view .LVU642
 2073 0084 FFF7FEFF 		bl	Error_Handler
 2074              	.LVL141:
 2075              	.L142:
 287:Core/Src/main.c ****   }
 2076              		.loc 1 287 5 view .LVU643
 2077 0088 FFF7FEFF 		bl	Error_Handler
 2078              	.LVL142:
ARM GAS  /tmp/ccEx5Llz.s 			page 66


 2079              	.L143:
 293:Core/Src/main.c ****   }
 2080              		.loc 1 293 5 view .LVU644
 2081 008c FFF7FEFF 		bl	Error_Handler
 2082              	.LVL143:
 2083              	.L145:
 2084              		.align	2
 2085              	.L144:
 2086 0090 70004242 		.word	1111621744
 2087              		.cfi_endproc
 2088              	.LFE75:
 2090              		.section	.text.main,"ax",%progbits
 2091              		.align	1
 2092              		.global	main
 2093              		.syntax unified
 2094              		.thumb
 2095              		.thumb_func
 2096              		.fpu softvfp
 2098              	main:
 2099              	.LFB74:
 135:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 2100              		.loc 1 135 1 view -0
 2101              		.cfi_startproc
 2102              		@ Volatile: function does not return.
 2103              		@ args = 0, pretend = 0, frame = 0
 2104              		@ frame_needed = 0, uses_anonymous_args = 0
 2105 0000 08B5     		push	{r3, lr}
 2106              		.cfi_def_cfa_offset 8
 2107              		.cfi_offset 3, -8
 2108              		.cfi_offset 14, -4
 143:Core/Src/main.c **** 
 2109              		.loc 1 143 3 view .LVU646
 2110 0002 FFF7FEFF 		bl	HAL_Init
 2111              	.LVL144:
 150:Core/Src/main.c **** 
 2112              		.loc 1 150 3 view .LVU647
 2113 0006 FFF7FEFF 		bl	SystemClock_Config
 2114              	.LVL145:
 157:Core/Src/main.c ****   MX_DMA_Init();
 2115              		.loc 1 157 3 view .LVU648
 2116 000a FFF7FEFF 		bl	MX_GPIO_Init
 2117              	.LVL146:
 158:Core/Src/main.c ****   MX_CAN2_Init();
 2118              		.loc 1 158 3 view .LVU649
 2119 000e FFF7FEFF 		bl	MX_DMA_Init
 2120              	.LVL147:
 159:Core/Src/main.c ****   MX_ADC1_Init();
 2121              		.loc 1 159 3 view .LVU650
 2122 0012 FFF7FEFF 		bl	MX_CAN2_Init
 2123              	.LVL148:
 160:Core/Src/main.c ****   MX_CAN1_Init();
 2124              		.loc 1 160 3 view .LVU651
 2125 0016 FFF7FEFF 		bl	MX_ADC1_Init
 2126              	.LVL149:
 161:Core/Src/main.c ****   MX_I2C1_SMBUS_Init();
 2127              		.loc 1 161 3 view .LVU652
 2128 001a FFF7FEFF 		bl	MX_CAN1_Init
ARM GAS  /tmp/ccEx5Llz.s 			page 67


 2129              	.LVL150:
 162:Core/Src/main.c ****   MX_UART4_Init();
 2130              		.loc 1 162 3 view .LVU653
 163:Core/Src/main.c ****   MX_USART1_UART_Init();
 2131              		.loc 1 163 3 view .LVU654
 2132 001e FFF7FEFF 		bl	MX_UART4_Init
 2133              	.LVL151:
 164:Core/Src/main.c ****   MX_TIM3_Init();
 2134              		.loc 1 164 3 view .LVU655
 2135 0022 FFF7FEFF 		bl	MX_USART1_UART_Init
 2136              	.LVL152:
 165:Core/Src/main.c ****   MX_TIM1_Init();
 2137              		.loc 1 165 3 view .LVU656
 2138 0026 FFF7FEFF 		bl	MX_TIM3_Init
 2139              	.LVL153:
 166:Core/Src/main.c ****   MX_TIM5_Init();
 2140              		.loc 1 166 3 view .LVU657
 2141 002a FFF7FEFF 		bl	MX_TIM1_Init
 2142              	.LVL154:
 167:Core/Src/main.c ****   MX_TIM2_Init();
 2143              		.loc 1 167 3 view .LVU658
 2144 002e FFF7FEFF 		bl	MX_TIM5_Init
 2145              	.LVL155:
 168:Core/Src/main.c ****   MX_IWDG_Init();
 2146              		.loc 1 168 3 view .LVU659
 2147 0032 FFF7FEFF 		bl	MX_TIM2_Init
 2148              	.LVL156:
 169:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2149              		.loc 1 169 3 view .LVU660
 2150 0036 FFF7FEFF 		bl	MX_IWDG_Init
 2151              	.LVL157:
 171:Core/Src/main.c ****   gaugeInit();
 2152              		.loc 1 171 3 view .LVU661
 2153 003a FFF7FEFF 		bl	canSettings
 2154              	.LVL158:
 172:Core/Src/main.c ****   dcdcInit();
 2155              		.loc 1 172 3 view .LVU662
 2156 003e FFF7FEFF 		bl	gaugeInit
 2157              	.LVL159:
 173:Core/Src/main.c ****   vcuInit();
 2158              		.loc 1 173 3 view .LVU663
 2159 0042 FFF7FEFF 		bl	dcdcInit
 2160              	.LVL160:
 174:Core/Src/main.c ****   wpInit();
 2161              		.loc 1 174 3 view .LVU664
 2162 0046 FFF7FEFF 		bl	vcuInit
 2163              	.LVL161:
 175:Core/Src/main.c **** 
 2164              		.loc 1 175 3 view .LVU665
 2165 004a FFF7FEFF 		bl	wpInit
 2166              	.LVL162:
 177:Core/Src/main.c ****   HAL_DMA_Start(&hdma_tim2_ch1, (uint32_t) & (waterPWM[0]), GPIOC_BASE + 16, 100); // water pump pw
 2167              		.loc 1 177 3 view .LVU666
 2168 004e 2C4C     		ldr	r4, .L149
 2169 0050 2046     		mov	r0, r4
 2170 0052 FFF7FEFF 		bl	HAL_TIM_Base_Start
 2171              	.LVL163:
ARM GAS  /tmp/ccEx5Llz.s 			page 68


 178:Core/Src/main.c ****   __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 2172              		.loc 1 178 3 view .LVU667
 2173 0056 2B4D     		ldr	r5, .L149+4
 2174 0058 6423     		movs	r3, #100
 2175 005a 2A46     		mov	r2, r5
 2176 005c 2A49     		ldr	r1, .L149+8
 2177 005e 2B48     		ldr	r0, .L149+12
 2178 0060 FFF7FEFF 		bl	HAL_DMA_Start
 2179              	.LVL164:
 179:Core/Src/main.c **** 
 2180              		.loc 1 179 3 view .LVU668
 2181 0064 2268     		ldr	r2, [r4]
 2182 0066 D368     		ldr	r3, [r2, #12]
 2183 0068 43F40073 		orr	r3, r3, #512
 2184 006c D360     		str	r3, [r2, #12]
 181:Core/Src/main.c ****   HAL_DMA_Start(&hdma_tim5_ch1, (uint32_t) & (tempPWM[0]), GPIOC_BASE + 16, 100); // temp gauge PWM
 2185              		.loc 1 181 3 view .LVU669
 2186 006e 284C     		ldr	r4, .L149+16
 2187 0070 2046     		mov	r0, r4
 2188 0072 FFF7FEFF 		bl	HAL_TIM_Base_Start
 2189              	.LVL165:
 182:Core/Src/main.c ****   __HAL_TIM_ENABLE_DMA(&htim5, TIM_DMA_CC1);
 2190              		.loc 1 182 3 view .LVU670
 2191 0076 6423     		movs	r3, #100
 2192 0078 2A46     		mov	r2, r5
 2193 007a 2649     		ldr	r1, .L149+20
 2194 007c 2648     		ldr	r0, .L149+24
 2195 007e FFF7FEFF 		bl	HAL_DMA_Start
 2196              	.LVL166:
 183:Core/Src/main.c ****   HAL_DMA_Start(&hdma_tim5_ch2, (uint32_t) & (socPWM[0]), GPIOC_BASE + 16, 1000); // SOC gauge PWM
 2197              		.loc 1 183 3 view .LVU671
 2198 0082 2268     		ldr	r2, [r4]
 2199 0084 D368     		ldr	r3, [r2, #12]
 2200 0086 43F40073 		orr	r3, r3, #512
 2201 008a D360     		str	r3, [r2, #12]
 184:Core/Src/main.c ****   __HAL_TIM_ENABLE_DMA(&htim5, TIM_DMA_CC2);
 2202              		.loc 1 184 3 view .LVU672
 2203 008c 4FF47A73 		mov	r3, #1000
 2204 0090 2A46     		mov	r2, r5
 2205 0092 2249     		ldr	r1, .L149+28
 2206 0094 2248     		ldr	r0, .L149+32
 2207 0096 FFF7FEFF 		bl	HAL_DMA_Start
 2208              	.LVL167:
 185:Core/Src/main.c **** 
 2209              		.loc 1 185 3 view .LVU673
 2210 009a 2268     		ldr	r2, [r4]
 2211 009c D368     		ldr	r3, [r2, #12]
 2212 009e 43F48063 		orr	r3, r3, #1024
 2213 00a2 D360     		str	r3, [r2, #12]
 187:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3); // Speedo pwm start
 2214              		.loc 1 187 3 view .LVU674
 2215 00a4 0021     		movs	r1, #0
 2216 00a6 1F48     		ldr	r0, .L149+36
 2217 00a8 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2218              	.LVL168:
 188:Core/Src/main.c **** 
 2219              		.loc 1 188 3 view .LVU675
ARM GAS  /tmp/ccEx5Llz.s 			page 69


 2220 00ac 0821     		movs	r1, #8
 2221 00ae 1E48     		ldr	r0, .L149+40
 2222 00b0 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2223              	.LVL169:
 190:Core/Src/main.c **** 
 2224              		.loc 1 190 3 view .LVU676
 2225 00b4 0322     		movs	r2, #3
 2226 00b6 1D49     		ldr	r1, .L149+44
 2227 00b8 1D48     		ldr	r0, .L149+48
 2228 00ba FFF7FEFF 		bl	HAL_ADC_Start_DMA
 2229              	.LVL170:
 195:Core/Src/main.c **** 
 2230              		.loc 1 195 3 view .LVU677
 2231 00be FFF7FEFF 		bl	osKernelInitialize
 2232              	.LVL171:
 215:Core/Src/main.c **** 
 2233              		.loc 1 215 3 view .LVU678
 215:Core/Src/main.c **** 
 2234              		.loc 1 215 20 is_stmt 0 view .LVU679
 2235 00c2 1C4A     		ldr	r2, .L149+52
 2236 00c4 0021     		movs	r1, #0
 2237 00c6 1C48     		ldr	r0, .L149+56
 2238 00c8 FFF7FEFF 		bl	osThreadNew
 2239              	.LVL172:
 215:Core/Src/main.c **** 
 2240              		.loc 1 215 18 view .LVU680
 2241 00cc 1B4B     		ldr	r3, .L149+60
 2242 00ce 1860     		str	r0, [r3]
 218:Core/Src/main.c **** 
 2243              		.loc 1 218 3 is_stmt 1 view .LVU681
 218:Core/Src/main.c **** 
 2244              		.loc 1 218 20 is_stmt 0 view .LVU682
 2245 00d0 1B4A     		ldr	r2, .L149+64
 2246 00d2 0021     		movs	r1, #0
 2247 00d4 1B48     		ldr	r0, .L149+68
 2248 00d6 FFF7FEFF 		bl	osThreadNew
 2249              	.LVL173:
 218:Core/Src/main.c **** 
 2250              		.loc 1 218 18 view .LVU683
 2251 00da 1B4B     		ldr	r3, .L149+72
 2252 00dc 1860     		str	r0, [r3]
 221:Core/Src/main.c **** 
 2253              		.loc 1 221 3 is_stmt 1 view .LVU684
 221:Core/Src/main.c **** 
 2254              		.loc 1 221 21 is_stmt 0 view .LVU685
 2255 00de 1B4A     		ldr	r2, .L149+76
 2256 00e0 0021     		movs	r1, #0
 2257 00e2 1B48     		ldr	r0, .L149+80
 2258 00e4 FFF7FEFF 		bl	osThreadNew
 2259              	.LVL174:
 221:Core/Src/main.c **** 
 2260              		.loc 1 221 19 view .LVU686
 2261 00e8 1A4B     		ldr	r3, .L149+84
 2262 00ea 1860     		str	r0, [r3]
 224:Core/Src/main.c **** 
 2263              		.loc 1 224 3 is_stmt 1 view .LVU687
 224:Core/Src/main.c **** 
ARM GAS  /tmp/ccEx5Llz.s 			page 70


 2264              		.loc 1 224 21 is_stmt 0 view .LVU688
 2265 00ec 1A4A     		ldr	r2, .L149+88
 2266 00ee 0021     		movs	r1, #0
 2267 00f0 1A48     		ldr	r0, .L149+92
 2268 00f2 FFF7FEFF 		bl	osThreadNew
 2269              	.LVL175:
 224:Core/Src/main.c **** 
 2270              		.loc 1 224 19 view .LVU689
 2271 00f6 1A4B     		ldr	r3, .L149+96
 2272 00f8 1860     		str	r0, [r3]
 235:Core/Src/main.c **** 
 2273              		.loc 1 235 3 is_stmt 1 view .LVU690
 2274 00fa FFF7FEFF 		bl	osKernelStart
 2275              	.LVL176:
 2276              	.L147:
 240:Core/Src/main.c ****   {
 2277              		.loc 1 240 3 discriminator 1 view .LVU691
 246:Core/Src/main.c ****   /* USER CODE END 3 */
 2278              		.loc 1 246 3 discriminator 1 view .LVU692
 240:Core/Src/main.c ****   {
 2279              		.loc 1 240 9 discriminator 1 view .LVU693
 2280 00fe FEE7     		b	.L147
 2281              	.L150:
 2282              		.align	2
 2283              	.L149:
 2284 0100 00000000 		.word	htim2
 2285 0104 10100140 		.word	1073811472
 2286 0108 00000000 		.word	waterPWM
 2287 010c 00000000 		.word	hdma_tim2_ch1
 2288 0110 00000000 		.word	htim5
 2289 0114 00000000 		.word	tempPWM
 2290 0118 00000000 		.word	hdma_tim5_ch1
 2291 011c 00000000 		.word	socPWM
 2292 0120 00000000 		.word	hdma_tim5_ch2
 2293 0124 00000000 		.word	htim1
 2294 0128 00000000 		.word	htim3
 2295 012c 00000000 		.word	ADC_data
 2296 0130 00000000 		.word	hadc1
 2297 0134 00000000 		.word	.LANCHOR0
 2298 0138 00000000 		.word	StartTaskLoop
 2299 013c 00000000 		.word	TaskLoopHandle
 2300 0140 00000000 		.word	.LANCHOR1
 2301 0144 00000000 		.word	StartTask10ms
 2302 0148 00000000 		.word	Task10msHandle
 2303 014c 00000000 		.word	.LANCHOR2
 2304 0150 00000000 		.word	StartTask100ms
 2305 0154 00000000 		.word	Task100msHandle
 2306 0158 00000000 		.word	.LANCHOR3
 2307 015c 00000000 		.word	StartTask250ms
 2308 0160 00000000 		.word	Task250msHandle
 2309              		.cfi_endproc
 2310              	.LFE74:
 2312              		.global	Task250ms_attributes
 2313              		.section	.rodata.str1.4,"aMS",%progbits,1
 2314              		.align	2
 2315              	.LC0:
 2316 0000 5461736B 		.ascii	"Task250ms\000"
ARM GAS  /tmp/ccEx5Llz.s 			page 71


 2316      3235306D 
 2316      7300
 2317              		.comm	Task250msHandle,4,4
 2318              		.global	Task100ms_attributes
 2319 000a 0000     		.align	2
 2320              	.LC1:
 2321 000c 5461736B 		.ascii	"Task100ms\000"
 2321      3130306D 
 2321      7300
 2322              		.comm	Task100msHandle,4,4
 2323              		.global	Task10ms_attributes
 2324 0016 0000     		.align	2
 2325              	.LC2:
 2326 0018 5461736B 		.ascii	"Task10ms\000"
 2326      31306D73 
 2326      00
 2327              		.comm	Task10msHandle,4,4
 2328              		.global	TaskLoop_attributes
 2329 0021 000000   		.align	2
 2330              	.LC3:
 2331 0024 5461736B 		.ascii	"TaskLoop\000"
 2331      4C6F6F70 
 2331      00
 2332              		.comm	TaskLoopHandle,4,4
 2333              		.comm	huart4,64,4
 2334              		.comm	hdma_tim5_ch2,68,4
 2335              		.comm	hdma_tim5_ch1,68,4
 2336              		.comm	hdma_tim2_ch1,68,4
 2337              		.comm	htim5,72,4
 2338              		.comm	htim3,72,4
 2339              		.comm	htim2,72,4
 2340              		.comm	htim1,72,4
 2341              		.comm	hiwdg,12,4
 2342              		.comm	hdma_adc1,68,4
 2343              		.comm	hadc1,48,4
 2344              		.global	BOARD_NAME
 2345              		.comm	waterPWM,400,4
 2346              		.comm	socPWM,4000,4
 2347              		.comm	tempPWM,400,4
 2348              		.comm	canDebug,4,4
 2349              		.comm	txCycle2,4,4
 2350              		.comm	txCycle,4,4
 2351              		.comm	canTx2,8,4
 2352              		.comm	canTx,8,4
 2353              		.comm	canMailbox2,4,4
 2354              		.comm	canMailbox,4,4
 2355              		.comm	canRx2,8,4
 2356              		.comm	canRx,8,4
 2357              		.comm	txMsgExt2,24,4
 2358              		.comm	txMsg2,24,4
 2359              		.comm	rxMsg2,28,4
 2360              		.comm	txMsgExt,24,4
 2361              		.comm	txMsg,24,4
 2362              		.comm	rxMsg,28,4
 2363              		.comm	sf5,40,4
 2364              		.comm	sf4,40,4
 2365              		.comm	sf3,40,4
ARM GAS  /tmp/ccEx5Llz.s 			page 72


 2366              		.comm	sf2,40,4
 2367              		.comm	sf,40,4
 2368              		.comm	hcan2,40,4
 2369              		.comm	hcan1,40,4
 2370              		.comm	LIDAR,8,4
 2371              		.comm	te,12,4
 2372              		.comm	taskTime,32,4
 2373              		.comm	BMS,20,4
 2374              		.comm	charger,3,4
 2375              		.comm	vcu,7,4
 2376              		.comm	iboost,2,4
 2377              		.comm	ldu,18,4
 2378              		.comm	tempdata,4,4
 2379              		.comm	ADC_data,12,4
 2380              		.comm	tenderActive,1,1
 2381              		.comm	time_now,4,4
 2382              		.comm	period,4,4
 2383              		.comm	DCDC,4,4
 2384              		.comm	huart1,64,4
 2385              		.section	.board_info,"a"
 2386              		.align	2
 2389              	BOARD_NAME:
 2390 0000 56435500 		.ascii	"VCU\000"
 2391 0004 00000000 		.space	6
 2391      0000
 2392              		.section	.rodata.Task100ms_attributes,"a"
 2393              		.align	2
 2394              		.set	.LANCHOR2,. + 0
 2397              	Task100ms_attributes:
 2398 0000 0C000000 		.word	.LC1
 2399 0004 00000000 		.space	16
 2399      00000000 
 2399      00000000 
 2399      00000000 
 2400 0014 00020000 		.word	512
 2401 0018 18000000 		.word	24
 2402 001c 00000000 		.space	8
 2402      00000000 
 2403              		.section	.rodata.Task10ms_attributes,"a"
 2404              		.align	2
 2405              		.set	.LANCHOR1,. + 0
 2408              	Task10ms_attributes:
 2409 0000 18000000 		.word	.LC2
 2410 0004 00000000 		.space	16
 2410      00000000 
 2410      00000000 
 2410      00000000 
 2411 0014 00020000 		.word	512
 2412 0018 18000000 		.word	24
 2413 001c 00000000 		.space	8
 2413      00000000 
 2414              		.section	.rodata.Task250ms_attributes,"a"
 2415              		.align	2
 2416              		.set	.LANCHOR3,. + 0
 2419              	Task250ms_attributes:
 2420 0000 00000000 		.word	.LC0
 2421 0004 00000000 		.space	16
ARM GAS  /tmp/ccEx5Llz.s 			page 73


 2421      00000000 
 2421      00000000 
 2421      00000000 
 2422 0014 00020000 		.word	512
 2423 0018 18000000 		.word	24
 2424 001c 00000000 		.space	8
 2424      00000000 
 2425              		.section	.rodata.TaskLoop_attributes,"a"
 2426              		.align	2
 2427              		.set	.LANCHOR0,. + 0
 2430              	TaskLoop_attributes:
 2431 0000 24000000 		.word	.LC3
 2432 0004 00000000 		.space	16
 2432      00000000 
 2432      00000000 
 2432      00000000 
 2433 0014 00020000 		.word	512
 2434 0018 18000000 		.word	24
 2435 001c 00000000 		.space	8
 2435      00000000 
 2436              		.text
 2437              	.Letext0:
 2438              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2439              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 2440              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2441              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f105xc.h"
 2442              		.file 8 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2443              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2444              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2445              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2446              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2447              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2448              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 2449              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2450              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_iwdg.h"
 2451              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2452              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 2453              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2454              		.file 20 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 2455              		.file 21 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2456              		.file 22 "/usr/include/newlib/sys/_types.h"
 2457              		.file 23 "/usr/include/newlib/sys/reent.h"
 2458              		.file 24 "/usr/include/newlib/sys/lock.h"
 2459              		.file 25 "Core/Inc/dcdc.h"
 2460              		.file 26 "Core/Inc/vcu.h"
 2461              		.file 27 "Core/Inc/encoder.h"
 2462              		.file 28 "Core/Inc/lidar.h"
 2463              		.file 29 "Core/Inc/can_setup.h"
 2464              		.file 30 "Core/Inc/gauges.h"
 2465              		.file 31 "Core/Inc/water_pump.h"
 2466              		.file 32 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 2467              		.file 33 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 2468              		.file 34 "Core/Inc/main.h"
 2469              		.file 35 "<built-in>"
ARM GAS  /tmp/ccEx5Llz.s 			page 74


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccEx5Llz.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccEx5Llz.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccEx5Llz.s:202    .text.MX_GPIO_Init:00000000000000d4 $d
     /tmp/ccEx5Llz.s:209    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccEx5Llz.s:215    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccEx5Llz.s:305    .text.MX_DMA_Init:0000000000000070 $d
     /tmp/ccEx5Llz.s:310    .text.StartTaskLoop:0000000000000000 $t
     /tmp/ccEx5Llz.s:317    .text.StartTaskLoop:0000000000000000 StartTaskLoop
     /tmp/ccEx5Llz.s:382    .text.StartTaskLoop:0000000000000038 $d
                            *COM*:000000000000000c hiwdg
                            *COM*:0000000000000020 taskTime
     /tmp/ccEx5Llz.s:388    .text.StartTask10ms:0000000000000000 $t
     /tmp/ccEx5Llz.s:395    .text.StartTask10ms:0000000000000000 StartTask10ms
     /tmp/ccEx5Llz.s:467    .text.StartTask10ms:0000000000000040 $d
                            *COM*:0000000000000007 vcu
     /tmp/ccEx5Llz.s:474    .text.StartTask100ms:0000000000000000 $t
     /tmp/ccEx5Llz.s:481    .text.StartTask100ms:0000000000000000 StartTask100ms
     /tmp/ccEx5Llz.s:549    .text.StartTask100ms:0000000000000038 $d
                            *COM*:0000000000000012 ldu
     /tmp/ccEx5Llz.s:556    .text.StartTask250ms:0000000000000000 $t
     /tmp/ccEx5Llz.s:563    .text.StartTask250ms:0000000000000000 StartTask250ms
     /tmp/ccEx5Llz.s:644    .text.StartTask250ms:0000000000000050 $d
                            *COM*:0000000000000014 BMS
     /tmp/ccEx5Llz.s:653    .text.__io_putchar:0000000000000000 $t
     /tmp/ccEx5Llz.s:660    .text.__io_putchar:0000000000000000 __io_putchar
     /tmp/ccEx5Llz.s:701    .text.__io_putchar:000000000000001c $d
                            *COM*:0000000000000040 huart1
     /tmp/ccEx5Llz.s:706    .text._write:0000000000000000 $t
     /tmp/ccEx5Llz.s:713    .text._write:0000000000000000 _write
     /tmp/ccEx5Llz.s:764    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccEx5Llz.s:771    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccEx5Llz.s:804    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccEx5Llz.s:809    .text.Error_Handler:0000000000000000 $t
     /tmp/ccEx5Llz.s:816    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccEx5Llz.s:848    .text.MX_CAN2_Init:0000000000000000 $t
     /tmp/ccEx5Llz.s:854    .text.MX_CAN2_Init:0000000000000000 MX_CAN2_Init
     /tmp/ccEx5Llz.s:922    .text.MX_CAN2_Init:0000000000000038 $d
                            *COM*:0000000000000028 hcan2
     /tmp/ccEx5Llz.s:928    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccEx5Llz.s:934    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccEx5Llz.s:1066   .text.MX_ADC1_Init:0000000000000088 $d
                            *COM*:0000000000000030 hadc1
     /tmp/ccEx5Llz.s:1072   .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccEx5Llz.s:1078   .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccEx5Llz.s:1146   .text.MX_CAN1_Init:0000000000000038 $d
                            *COM*:0000000000000028 hcan1
     /tmp/ccEx5Llz.s:1152   .text.MX_UART4_Init:0000000000000000 $t
     /tmp/ccEx5Llz.s:1158   .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
     /tmp/ccEx5Llz.s:1212   .text.MX_UART4_Init:000000000000002c $d
                            *COM*:0000000000000040 huart4
     /tmp/ccEx5Llz.s:1218   .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccEx5Llz.s:1224   .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccEx5Llz.s:1278   .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccEx5Llz.s:1284   .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccEx5Llz.s:1290   .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
ARM GAS  /tmp/ccEx5Llz.s 			page 75


     /tmp/ccEx5Llz.s:1440   .text.MX_TIM3_Init:000000000000009c $d
                            *COM*:0000000000000048 htim3
     /tmp/ccEx5Llz.s:1446   .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccEx5Llz.s:1452   .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccEx5Llz.s:1624   .text.MX_TIM1_Init:00000000000000a8 $d
                            *COM*:0000000000000048 htim1
     /tmp/ccEx5Llz.s:1630   .text.MX_TIM5_Init:0000000000000000 $t
     /tmp/ccEx5Llz.s:1636   .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
     /tmp/ccEx5Llz.s:1760   .text.MX_TIM5_Init:000000000000007c $d
                            *COM*:0000000000000048 htim5
     /tmp/ccEx5Llz.s:1766   .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccEx5Llz.s:1772   .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccEx5Llz.s:1883   .text.MX_TIM2_Init:000000000000006c $d
                            *COM*:0000000000000048 htim2
     /tmp/ccEx5Llz.s:1888   .text.MX_IWDG_Init:0000000000000000 $t
     /tmp/ccEx5Llz.s:1894   .text.MX_IWDG_Init:0000000000000000 MX_IWDG_Init
     /tmp/ccEx5Llz.s:1932   .text.MX_IWDG_Init:0000000000000020 $d
     /tmp/ccEx5Llz.s:1938   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccEx5Llz.s:1945   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccEx5Llz.s:2086   .text.SystemClock_Config:0000000000000090 $d
     /tmp/ccEx5Llz.s:2091   .text.main:0000000000000000 $t
     /tmp/ccEx5Llz.s:2098   .text.main:0000000000000000 main
     /tmp/ccEx5Llz.s:2284   .text.main:0000000000000100 $d
                            *COM*:0000000000000190 waterPWM
                            *COM*:0000000000000044 hdma_tim2_ch1
                            *COM*:0000000000000190 tempPWM
                            *COM*:0000000000000044 hdma_tim5_ch1
                            *COM*:0000000000000fa0 socPWM
                            *COM*:0000000000000044 hdma_tim5_ch2
                            *COM*:000000000000000c ADC_data
                            *COM*:0000000000000004 TaskLoopHandle
                            *COM*:0000000000000004 Task10msHandle
                            *COM*:0000000000000004 Task100msHandle
                            *COM*:0000000000000004 Task250msHandle
     /tmp/ccEx5Llz.s:2419   .rodata.Task250ms_attributes:0000000000000000 Task250ms_attributes
     /tmp/ccEx5Llz.s:2314   .rodata.str1.4:0000000000000000 $d
     /tmp/ccEx5Llz.s:2397   .rodata.Task100ms_attributes:0000000000000000 Task100ms_attributes
     /tmp/ccEx5Llz.s:2408   .rodata.Task10ms_attributes:0000000000000000 Task10ms_attributes
     /tmp/ccEx5Llz.s:2430   .rodata.TaskLoop_attributes:0000000000000000 TaskLoop_attributes
                            *COM*:0000000000000044 hdma_adc1
     /tmp/ccEx5Llz.s:2389   .board_info:0000000000000000 BOARD_NAME
                            *COM*:0000000000000004 canDebug
                            *COM*:0000000000000004 txCycle2
                            *COM*:0000000000000004 txCycle
                            *COM*:0000000000000008 canTx2
                            *COM*:0000000000000008 canTx
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000008 canRx2
                            *COM*:0000000000000008 canRx
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000018 txMsg2
                            *COM*:000000000000001c rxMsg2
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000018 txMsg
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 sf5
ARM GAS  /tmp/ccEx5Llz.s 			page 76


                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000028 sf3
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000008 LIDAR
                            *COM*:000000000000000c te
                            *COM*:0000000000000003 charger
                            *COM*:0000000000000002 iboost
                            *COM*:0000000000000004 tempdata
                            *COM*:0000000000000001 tenderActive
                            *COM*:0000000000000004 time_now
                            *COM*:0000000000000004 period
                            *COM*:0000000000000004 DCDC
     /tmp/ccEx5Llz.s:2386   .board_info:0000000000000000 $d
     /tmp/ccEx5Llz.s:2393   .rodata.Task100ms_attributes:0000000000000000 $d
     /tmp/ccEx5Llz.s:2404   .rodata.Task10ms_attributes:0000000000000000 $d
     /tmp/ccEx5Llz.s:2415   .rodata.Task250ms_attributes:0000000000000000 $d
     /tmp/ccEx5Llz.s:2426   .rodata.TaskLoop_attributes:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
taskCheck
HAL_GetTick
wpHandler
vcuState
ioHandler
HAL_IWDG_Refresh
osDelay
throttleHandler
canIOsend
regenHandler
brakeHandler
dcdcHandler
updateSpeed
updateTach
HAL_GPIO_TogglePin
updateTemp
updateSOC
vehicleComms
encoderHandler
HAL_UART_Transmit
HAL_IncTick
HAL_CAN_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_TIMEx_ConfigBreakDeadTime
ARM GAS  /tmp/ccEx5Llz.s 			page 77


HAL_TIM_OC_Init
HAL_TIM_OC_ConfigChannel
HAL_IWDG_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
canSettings
gaugeInit
dcdcInit
vcuInit
wpInit
HAL_TIM_Base_Start
HAL_DMA_Start
HAL_TIM_PWM_Start
HAL_ADC_Start_DMA
osKernelInitialize
osThreadNew
osKernelStart
